-- Journal begins at Sat 2022-08-06 20:35:23 UTC, ends at Sat 2022-08-06 20:40:22 UTC. --
Aug 06 20:35:23 cka-02-worker2 systemd-journald[89]: Journal started
Aug 06 20:35:23 cka-02-worker2 systemd-journald[89]: Runtime Journal (/run/log/journal/30264034c3d84d109700485e670977e1) is 8.0M, max 793.9M, 785.9M free.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Remount Root and Kernel File Systems.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Starting Flush Journal to Persistent Storage...
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Condition check resulted in Load/Save Random Seed being skipped.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Condition check resulted in First Boot Complete being skipped.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Starting Create System Users...
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Starting Update UTMP about System Boot/Shutdown...
Aug 06 20:35:23 cka-02-worker2 systemd[1]: modprobe@configfs.service: Deactivated successfully.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Load Kernel Module configfs.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: modprobe@fuse.service: Deactivated successfully.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Load Kernel Module fuse.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Apply Kernel Variables.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Mounting FUSE Control File System...
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Condition check resulted in Kernel Configuration File System being skipped.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Mounted FUSE Control File System.
Aug 06 20:35:23 cka-02-worker2 systemd-journald[89]: Runtime Journal (/run/log/journal/30264034c3d84d109700485e670977e1) is 8.0M, max 793.9M, 785.9M free.
Aug 06 20:35:23 cka-02-worker2 systemd-sysusers[96]: Creating group systemd-coredump with gid 999.
Aug 06 20:35:23 cka-02-worker2 systemd-sysusers[96]: Creating user systemd-coredump (systemd Core Dumper) with uid 999 and gid 999.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Flush Journal to Persistent Storage.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Update UTMP about System Boot/Shutdown.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Create System Users.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Starting Create Static Device Nodes in /dev...
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Create Static Device Nodes in /dev.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Reached target Local File Systems (Pre).
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Reached target Local File Systems.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Reached target System Initialization.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Started Daily Cleanup of Temporary Directories.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Reached target Basic System.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Reached target Timers.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Starting containerd container runtime...
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Condition check resulted in kubelet: The Kubernetes Node Agent being skipped.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Condition check resulted in Store a System Token in an EFI Variable being skipped.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Started containerd container runtime.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Reached target Multi-User System.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Reached target Graphical Interface.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Starting Update UTMP about System Runlevel Changes...
Aug 06 20:35:23 cka-02-worker2 systemd[1]: systemd-update-utmp-runlevel.service: Deactivated successfully.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Finished Update UTMP about System Runlevel Changes.
Aug 06 20:35:23 cka-02-worker2 systemd[1]: Startup finished in 157ms.
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.670314359Z" level=info msg="starting containerd" revision=212e8b6fa2f44b9c21b2798135fc6fb7c53efc16 version=v1.6.4
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.694575036Z" level=info msg="loading plugin \"io.containerd.content.v1.content\"..." type=io.containerd.content.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.694650911Z" level=info msg="loading plugin \"io.containerd.snapshotter.v1.aufs\"..." type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.698150612Z" level=info msg="skip loading plugin \"io.containerd.snapshotter.v1.aufs\"..." error="aufs is not supported (modprobe aufs failed: exit status 1 \"modprobe: FATAL: Module aufs not found in directory /lib/modules/5.18.16-200.fc36.x86_64\\n\"): skip plugin" type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.698347667Z" level=info msg="loading plugin \"io.containerd.snapshotter.v1.btrfs\"..." type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.698585365Z" level=info msg="skip loading plugin \"io.containerd.snapshotter.v1.btrfs\"..." error="path /var/lib/containerd/io.containerd.snapshotter.v1.btrfs (ext4) must be a btrfs filesystem to be used with the btrfs snapshotter: skip plugin" type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.698664031Z" level=info msg="loading plugin \"io.containerd.snapshotter.v1.devmapper\"..." type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.698727935Z" level=warning msg="failed to load plugin io.containerd.snapshotter.v1.devmapper" error="devmapper not configured"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.698785796Z" level=info msg="loading plugin \"io.containerd.snapshotter.v1.native\"..." type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.698860030Z" level=info msg="loading plugin \"io.containerd.snapshotter.v1.overlayfs\"..." type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.699027131Z" level=info msg="loading plugin \"io.containerd.snapshotter.v1.zfs\"..." type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.699185984Z" level=info msg="skip loading plugin \"io.containerd.snapshotter.v1.zfs\"..." error="path /var/lib/containerd/io.containerd.snapshotter.v1.zfs must be a zfs filesystem to be used with the zfs snapshotter: skip plugin" type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.699277276Z" level=info msg="loading plugin \"io.containerd.snapshotter.v1.fuse-overlayfs\"..." type=io.containerd.snapshotter.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.699438029Z" level=info msg="loading plugin \"io.containerd.metadata.v1.bolt\"..." type=io.containerd.metadata.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.699715061Z" level=warning msg="could not use snapshotter devmapper in metadata plugin" error="devmapper not configured"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.699784364Z" level=info msg="metadata content store policy set" policy=shared
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.699917908Z" level=info msg="loading plugin \"io.containerd.differ.v1.walking\"..." type=io.containerd.differ.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.700011194Z" level=info msg="loading plugin \"io.containerd.event.v1.exchange\"..." type=io.containerd.event.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.700082254Z" level=info msg="loading plugin \"io.containerd.gc.v1.scheduler\"..." type=io.containerd.gc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.700171391Z" level=info msg="loading plugin \"io.containerd.service.v1.introspection-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.700258501Z" level=info msg="loading plugin \"io.containerd.service.v1.containers-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.700325734Z" level=info msg="loading plugin \"io.containerd.service.v1.content-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.700605470Z" level=info msg="loading plugin \"io.containerd.service.v1.diff-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.701891662Z" level=info msg="loading plugin \"io.containerd.service.v1.images-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702053631Z" level=info msg="loading plugin \"io.containerd.service.v1.leases-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702123125Z" level=info msg="loading plugin \"io.containerd.service.v1.namespaces-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702192311Z" level=info msg="loading plugin \"io.containerd.service.v1.snapshots-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702215983Z" level=info msg="loading plugin \"io.containerd.runtime.v1.linux\"..." type=io.containerd.runtime.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702288582Z" level=info msg="loading plugin \"io.containerd.runtime.v2.task\"..." type=io.containerd.runtime.v2
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702351015Z" level=info msg="loading plugin \"io.containerd.monitor.v1.cgroups\"..." type=io.containerd.monitor.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702605199Z" level=info msg="loading plugin \"io.containerd.service.v1.tasks-service\"..." type=io.containerd.service.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702703704Z" level=info msg="loading plugin \"io.containerd.grpc.v1.introspection\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702728034Z" level=info msg="loading plugin \"io.containerd.internal.v1.restart\"..." type=io.containerd.internal.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702776875Z" level=info msg="loading plugin \"io.containerd.grpc.v1.containers\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702793971Z" level=info msg="loading plugin \"io.containerd.grpc.v1.content\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702812541Z" level=info msg="loading plugin \"io.containerd.grpc.v1.diff\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702826494Z" level=info msg="loading plugin \"io.containerd.grpc.v1.events\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702840615Z" level=info msg="loading plugin \"io.containerd.grpc.v1.healthcheck\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702854114Z" level=info msg="loading plugin \"io.containerd.grpc.v1.images\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702867135Z" level=info msg="loading plugin \"io.containerd.grpc.v1.leases\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702888102Z" level=info msg="loading plugin \"io.containerd.grpc.v1.namespaces\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702907630Z" level=info msg="loading plugin \"io.containerd.internal.v1.opt\"..." type=io.containerd.internal.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.702994333Z" level=info msg="loading plugin \"io.containerd.grpc.v1.snapshots\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703015446Z" level=info msg="loading plugin \"io.containerd.grpc.v1.tasks\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703030570Z" level=info msg="loading plugin \"io.containerd.grpc.v1.version\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703043330Z" level=info msg="loading plugin \"io.containerd.tracing.processor.v1.otlp\"..." type=io.containerd.tracing.processor.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703062666Z" level=info msg="skip loading plugin \"io.containerd.tracing.processor.v1.otlp\"..." error="no OpenTelemetry endpoint: skip plugin" type=io.containerd.tracing.processor.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703079020Z" level=info msg="loading plugin \"io.containerd.internal.v1.tracing\"..." type=io.containerd.internal.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703099010Z" level=error msg="failed to initialize a tracing processor \"otlp\"" error="no OpenTelemetry endpoint: skip plugin"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703138951Z" level=info msg="loading plugin \"io.containerd.grpc.v1.cri\"..." type=io.containerd.grpc.v1
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703338400Z" level=warning msg="`mirrors` is deprecated, please use `config_path` instead"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703431455Z" level=info msg="Start cri plugin with config {PluginConfig:{ContainerdConfig:{Snapshotter:overlayfs DefaultRuntimeName:runc DefaultRuntime:{Type: Path: Engine: PodAnnotations:[] ContainerAnnotations:[] Root: Options:map[] PrivilegedWithoutHostDevices:false BaseRuntimeSpec: NetworkPluginConfDir: NetworkPluginMaxConfNum:0} UntrustedWorkloadRuntime:{Type: Path: Engine: PodAnnotations:[] ContainerAnnotations:[] Root: Options:map[] PrivilegedWithoutHostDevices:false BaseRuntimeSpec: NetworkPluginConfDir: NetworkPluginMaxConfNum:0} Runtimes:map[runc:{Type:io.containerd.runc.v2 Path: Engine: PodAnnotations:[] ContainerAnnotations:[] Root: Options:map[SystemdCgroup:true] PrivilegedWithoutHostDevices:false BaseRuntimeSpec:/etc/containerd/cri-base.json NetworkPluginConfDir: NetworkPluginMaxConfNum:0} test-handler:{Type:io.containerd.runc.v2 Path: Engine: PodAnnotations:[] ContainerAnnotations:[] Root: Options:map[SystemdCgroup:true] PrivilegedWithoutHostDevices:false BaseRuntimeSpec:/etc/containerd/cri-base.json NetworkPluginConfDir: NetworkPluginMaxConfNum:0}] NoPivot:false DisableSnapshotAnnotations:true DiscardUnpackedLayers:true IgnoreRdtNotEnabledErrors:false} CniConfig:{NetworkPluginBinDir:/opt/cni/bin NetworkPluginConfDir:/etc/cni/net.d NetworkPluginMaxConfNum:1 NetworkPluginConfTemplate: IPPreference:} Registry:{ConfigPath: Mirrors:map[k8s.gcr.io:{Endpoints:[https://registry.k8s.io https://k8s.gcr.io]}] Configs:map[] Auths:map[] Headers:map[]} ImageDecryption:{KeyModel:node} DisableTCPService:true StreamServerAddress:127.0.0.1 StreamServerPort:0 StreamIdleTimeout:4h0m0s EnableSelinux:false SelinuxCategoryRange:1024 SandboxImage:k8s.gcr.io/pause:3.6 StatsCollectPeriod:10 SystemdCgroup:false EnableTLSStreaming:false X509KeyPairStreaming:{TLSCertFile: TLSKeyFile:} MaxContainerLogLineSize:16384 DisableCgroup:false DisableApparmor:false RestrictOOMScoreAdj:false MaxConcurrentDownloads:3 DisableProcMount:false UnsetSeccompProfile: TolerateMissingHugetlbController:true DisableHugetlbController:true DeviceOwnershipFromSecurityContext:false IgnoreImageDefinedVolumes:false NetNSMountsUnderStateDir:false EnableUnprivilegedPorts:false EnableUnprivilegedICMP:false} ContainerdRootDir:/var/lib/containerd ContainerdEndpoint:/run/containerd/containerd.sock RootDir:/var/lib/containerd/io.containerd.grpc.v1.cri StateDir:/run/containerd/io.containerd.grpc.v1.cri}"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703503006Z" level=info msg="Connect containerd service"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703538447Z" level=info msg="Get image filesystem path \"/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs\""
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.703916101Z" level=error msg="failed to load cni during init, please check CRI plugin status before setting up network for pods" error="cni config load failed: no network config found in /etc/cni/net.d: cni plugin not initialized: failed to load cni config"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.704715024Z" level=info msg="Start subscribing containerd event"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.704767429Z" level=info msg="Start recovering state"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.704827619Z" level=info msg=serving... address=/run/containerd/containerd.sock.ttrpc
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.704879785Z" level=info msg=serving... address=/run/containerd/containerd.sock
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.704913913Z" level=info msg="containerd successfully booted in 0.035747s"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.705736546Z" level=warning msg="The image docker.io/kindest/kindnetd:v20220510-4929dd75 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.708257923Z" level=warning msg="The image docker.io/kindest/local-path-helper:v20220512-507ff70b is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.710071128Z" level=warning msg="The image docker.io/kindest/local-path-provisioner:v0.0.22-kind.0 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.710984028Z" level=warning msg="The image import-2022-05-19@sha256:289df0671b753c90e6b717b92ada9af9bcb48678d59affc8cc27eef4f01e9251 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.711585926Z" level=warning msg="The image import-2022-05-19@sha256:5611470386fb81d6d169bb37667ae1f9fa884631b265b54d8d9601d9338aad18 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.712469633Z" level=warning msg="The image import-2022-05-19@sha256:654122cbd980cb4a8417347b8c84ecdbc81a735d3d01409bec6f37ef293511ca is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.713204124Z" level=warning msg="The image import-2022-05-19@sha256:948ca7c1da4b6108193f4dae34f2e94cfdaa901ab8876ba4009cc024673d2af4 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.714067191Z" level=warning msg="The image k8s.gcr.io/coredns/coredns:v1.8.6 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.715398927Z" level=warning msg="The image k8s.gcr.io/etcd:3.5.3-0 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.716376106Z" level=warning msg="The image k8s.gcr.io/kube-apiserver:v1.24.0 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.717040502Z" level=warning msg="The image k8s.gcr.io/kube-controller-manager:v1.24.0 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.717822828Z" level=warning msg="The image k8s.gcr.io/kube-proxy:v1.24.0 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.718506545Z" level=warning msg="The image k8s.gcr.io/kube-scheduler:v1.24.0 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.719556405Z" level=warning msg="The image k8s.gcr.io/pause:3.6 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.720637315Z" level=warning msg="The image sha256:41f5241e3396e516b754fd924d12444525720850c86aeac1b4bfd33616233b91 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.722060194Z" level=warning msg="The image sha256:4c1e997385b8fb4ad4d1d3c7e5af7ff3f882e94d07cf5b78de9e889bc60830e6 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.723297654Z" level=warning msg="The image sha256:6270bb605e12e581514ada5fd5b3216f727db55dc87d5889c790e4c760683fee is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.724341021Z" level=warning msg="The image sha256:64623e9d887d3ee33e56df43874531bf48391818f508505f21d6a5c5e4fa0da7 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.725174175Z" level=warning msg="The image sha256:6960c0e47829dde050fa5a480f69ccca6bfbbdd1bab831aeed9040671b9dc30c is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.726525862Z" level=warning msg="The image sha256:6fb66cd78abfe9e0735a9a751f2586b7984e0d279e87fa8dd175781de6595627 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.728472203Z" level=warning msg="The image sha256:9ef4b1de3be49aa0aa77d434a3c38e35c67c007b92a1c522825a46fc579ac998 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.729799279Z" level=warning msg="The image sha256:a4ca41631cc7ac19ce1be3ebf0314ac5f47af7c711f17066006db82ee3b75b03 is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.731108761Z" level=warning msg="The image sha256:aebe758cef4cd05b9f8cee39758227714d02f42ef3088023c1e3cd454f927a2b is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.732299077Z" level=warning msg="The image sha256:efa8a439d146031cd20318ad4cb2eb712a2d638d503420212158ee737805e95a is not unpacked."
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.732742068Z" level=info msg="Start event monitor"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.732771696Z" level=info msg="Start snapshots syncer"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.732786407Z" level=info msg="Start cni network conf syncer for default"
Aug 06 20:35:23 cka-02-worker2 containerd[101]: time="2022-08-06T20:35:23.732795403Z" level=info msg="Start streaming server"
Aug 06 20:35:58 cka-02-worker2 systemd[1]: Reloading.
Aug 06 20:35:58 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:35:58 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.434157     177 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.939570     177 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.939593     177 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.939801     177 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: W0806 20:35:58.942222     177 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.942527     177 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: E0806 20:35:58.942652     177 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.946704     177 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.946755     177 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.946774     177 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.946785     177 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.946891     177 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:35:58 cka-02-worker2 systemd[1]: run-r4868f7624cae48359ab442b1a6387e8b.scope: Deactivated successfully.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.952265     177 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.952288     177 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.952304     177 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.952315     177 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: E0806 20:35:58.952656     177 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.952861     177 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: W0806 20:35:58.953952     177 probe.go:268] Flexvolume plugin directory at /usr/libexec/kubernetes/kubelet-plugins/volume/exec/ does not exist. Recreating.
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: E0806 20:35:58.954608     177 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.954830     177 server.go:1181] "Started kubelet"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.955437     177 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.956262     177 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.957127     177 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.960429     177 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: I0806 20:35:58.963057     177 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: E0806 20:35:58.965316     177 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: E0806 20:35:58.966598     177 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:35:58 cka-02-worker2 kubelet[177]: E0806 20:35:58.966700     177 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:35:58 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:35:58 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:00 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 1.
Aug 06 20:36:00 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:00 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:00 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.253604     201 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.266694     201 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.266792     201 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.267017     201 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: E0806 20:36:00.267659     201 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:00 cka-02-worker2 systemd[1]: run-r279587d937a14739b9ebc2991d0323d3.scope: Deactivated successfully.
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: W0806 20:36:00.642136     201 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.642142     201 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: E0806 20:36:00.642464     201 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.647740     201 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.647808     201 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.647829     201 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.647846     201 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.647920     201 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.652868     201 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.652918     201 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.652941     201 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.652953     201 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: E0806 20:36:00.653031     201 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.653390     201 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: E0806 20:36:00.653564     201 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.653757     201 server.go:1181] "Started kubelet"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.654437     201 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.654520     201 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.655712     201 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.655784     201 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: E0806 20:36:00.659221     201 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: I0806 20:36:00.659325     201 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: E0806 20:36:00.667989     201 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:00 cka-02-worker2 kubelet[201]: E0806 20:36:00.669019     201 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:00 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:00 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:01 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 2.
Aug 06 20:36:01 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:01 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:01 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.766627     225 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.778700     225 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.778799     225 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.779044     225 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.779639     225 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: W0806 20:36:01.781107     225 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.781405     225 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.781525     225 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.785482     225 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.785535     225 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.785557     225 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.785572     225 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.785597     225 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:01 cka-02-worker2 systemd[1]: run-rddcfc0c47dc545e6800dd01dfebcddb7.scope: Deactivated successfully.
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.790592     225 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.790614     225 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.790632     225 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.790643     225 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.790716     225 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.791018     225 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.791326     225 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.791485     225 server.go:1181] "Started kubelet"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.791717     225 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.792403     225 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.793086     225 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.793456     225 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: I0806 20:36:01.797896     225 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: W0806 20:36:01.805526     225 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.805576     225 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: W0806 20:36:01.805616     225 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.805632     225 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.805666     225 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker2.1708dbd2f55287dc", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker2", UID:"cka-02-worker2", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker2"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 36, 1, 791469532, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 36, 1, 791469532, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.806047     225 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker2" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: W0806 20:36:01.806196     225 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.806353     225 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.806442     225 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.807761     225 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:01 cka-02-worker2 kubelet[225]: E0806 20:36:01.807863     225 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:01 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:01 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:02 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 3.
Aug 06 20:36:02 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:02 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:02 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.009850     248 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:03 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.025817     248 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.025923     248 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.026470     248 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.027512     248 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:03 cka-02-worker2 systemd[1]: run-r67d3cc6f85bd48d58f9e619a11c400f3.scope: Deactivated successfully.
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.061013     248 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.061199     248 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: W0806 20:36:03.061044     248 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.076753     248 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.076813     248 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.076830     248 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.076841     248 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.076867     248 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.079431     248 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.079456     248 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.079475     248 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.079489     248 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.079927     248 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.080086     248 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.080321     248 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.080567     248 server.go:1181] "Started kubelet"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.080700     248 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.081822     248 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.083090     248 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.087654     248 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: I0806 20:36:03.088084     248 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.089485     248 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.089678     248 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker2.1708dbd342284f75", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker2", UID:"cka-02-worker2", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker2"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 36, 3, 80548213, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 36, 3, 80548213, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: W0806 20:36:03.089899     248 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.089972     248 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: W0806 20:36:03.090058     248 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.090121     248 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.090423     248 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker2" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: W0806 20:36:03.090438     248 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.090579     248 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.090680     248 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:03 cka-02-worker2 kubelet[248]: E0806 20:36:03.090702     248 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:03 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:03 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:04 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 4.
Aug 06 20:36:04 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:04 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:04 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.269570     272 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.278025     272 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.278050     272 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.278269     272 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: E0806 20:36:04.278958     272 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: W0806 20:36:04.280411     272 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.280697     272 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: E0806 20:36:04.280757     272 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.286799     272 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.286850     272 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.286868     272 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.286880     272 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.286922     272 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:04 cka-02-worker2 systemd[1]: run-rcd66fa23b19b4834932c45d5d7f2772c.scope: Deactivated successfully.
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.289266     272 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.289289     272 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.289307     272 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.289341     272 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.291235     272 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: E0806 20:36:04.295141     272 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: E0806 20:36:04.295287     272 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.295342     272 server.go:1181] "Started kubelet"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.296238     272 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.298308     272 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.298940     272 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.299076     272 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: I0806 20:36:04.300759     272 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: E0806 20:36:04.306762     272 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: E0806 20:36:04.309243     272 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:04 cka-02-worker2 kubelet[272]: E0806 20:36:04.310450     272 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:04 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:04 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:05 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 5.
Aug 06 20:36:05 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:05 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:05 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.509710     296 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.520435     296 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.520529     296 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.520806     296 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.521427     296 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: W0806 20:36:05.523430     296 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.524055     296 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.524116     296 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.528143     296 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.528202     296 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.528219     296 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.528231     296 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.528250     296 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:05 cka-02-worker2 systemd[1]: run-re851441ec0704bd09298b9c6c650bedb.scope: Deactivated successfully.
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.532373     296 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.532394     296 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.532427     296 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.532477     296 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.532995     296 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.537323     296 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.537517     296 server.go:1181] "Started kubelet"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.538203     296 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.538609     296 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.539322     296 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.543455     296 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: I0806 20:36:05.543994     296 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: W0806 20:36:05.544928     296 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.544972     296 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.545043     296 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker2.1708dbd3d49a6006", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker2", UID:"cka-02-worker2", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker2"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 36, 5, 537497094, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 36, 5, 537497094, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: W0806 20:36:05.545218     296 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.545236     296 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.547872     296 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.548951     296 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker2" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: W0806 20:36:05.549713     296 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.549736     296 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.550925     296 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:05 cka-02-worker2 kubelet[296]: E0806 20:36:05.550951     296 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:05 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:05 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:06 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 6.
Aug 06 20:36:06 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:06 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:06 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.761432     322 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.775551     322 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.775601     322 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.775832     322 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.776447     322 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: W0806 20:36:06.777897     322 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.778611     322 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.778738     322 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.783959     322 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.784021     322 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.784042     322 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.784053     322 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.784073     322 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:06 cka-02-worker2 systemd[1]: run-rd4671ceeec5a4501bc70657bdd7accd1.scope: Deactivated successfully.
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.790019     322 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.790044     322 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.790060     322 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.790074     322 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.790435     322 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.790614     322 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.790809     322 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.790974     322 server.go:1181] "Started kubelet"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.791488     322 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.791817     322 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.792073     322 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.796079     322 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: I0806 20:36:06.798584     322 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.799768     322 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.805002     322 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker2" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: W0806 20:36:06.805139     322 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.805169     322 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.805203     322 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker2.1708dbd41f50a85c", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker2", UID:"cka-02-worker2", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker2"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 36, 6, 790957148, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 36, 6, 790957148, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: W0806 20:36:06.805312     322 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.805323     322 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: W0806 20:36:06.805361     322 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.805373     322 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.807077     322 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:06 cka-02-worker2 kubelet[322]: E0806 20:36:06.807583     322 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:06 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:06 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:07 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 7.
Aug 06 20:36:07 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:07 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:07 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.008221     347 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:08 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.020670     347 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.020698     347 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.021356     347 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.022266     347 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.023905     347 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: W0806 20:36:08.023922     347 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.023956     347 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:08 cka-02-worker2 systemd[1]: run-r6ccd5bfc2412404eb254d14d59e59911.scope: Deactivated successfully.
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.042028     347 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.042081     347 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.042100     347 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.042112     347 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.042156     347 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.044841     347 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.044863     347 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.044879     347 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.045350     347 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.045318     347 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.047521     347 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.047794     347 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.048012     347 server.go:1181] "Started kubelet"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.048115     347 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.049294     347 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.050591     347 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.051459     347 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: I0806 20:36:08.051688     347 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.052693     347 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.057226     347 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker2.1708dbd46a3d67b7", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker2", UID:"cka-02-worker2", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker2"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 36, 8, 47986615, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 36, 8, 47986615, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: W0806 20:36:08.057356     347 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.057374     347 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.057418     347 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker2" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: W0806 20:36:08.057463     347 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.057475     347 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker2" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: W0806 20:36:08.057503     347 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.057523     347 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.058462     347 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:08 cka-02-worker2 kubelet[347]: E0806 20:36:08.058486     347 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:08 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:08 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:09 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 8.
Aug 06 20:36:09 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:09 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:09 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.263216     371 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.275696     371 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.275793     371 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.276062     371 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.276618     371 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: W0806 20:36:09.277985     371 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.278037     371 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.278173     371 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:09 cka-02-worker2 systemd[1]: run-r1e7404d8de3a4d9e8734e5ea88a847ca.scope: Deactivated successfully.
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.293898     371 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.293954     371 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.293976     371 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.293988     371 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.294012     371 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.298152     371 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.298173     371 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.298190     371 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.298201     371 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.298255     371 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.298563     371 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.298736     371 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.298877     371 server.go:1181] "Started kubelet"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.298980     371 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.299514     371 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.299758     371 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.302049     371 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: I0806 20:36:09.302441     371 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: W0806 20:36:09.304362     371 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.304403     371 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.304856     371 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.305752     371 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:09 cka-02-worker2 kubelet[371]: E0806 20:36:09.305772     371 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:09 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:09 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:10 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 9.
Aug 06 20:36:10 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:10 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:10 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.510309     393 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.529087     393 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.529112     393 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.529332     393 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: E0806 20:36:10.529988     393 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: W0806 20:36:10.531570     393 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.531672     393 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: E0806 20:36:10.531752     393 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:10 cka-02-worker2 systemd[1]: run-r1230d190e4d047769d60b440ccc8893b.scope: Deactivated successfully.
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.547767     393 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.547818     393 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.547834     393 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.547845     393 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.547864     393 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.551712     393 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.551734     393 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.551751     393 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.551763     393 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: E0806 20:36:10.552065     393 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.552531     393 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: E0806 20:36:10.552702     393 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.552858     393 server.go:1181] "Started kubelet"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.553845     393 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.553961     393 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.555535     393 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.556515     393 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: I0806 20:36:10.557237     393 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: E0806 20:36:10.559696     393 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: E0806 20:36:10.563038     393 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:10 cka-02-worker2 kubelet[393]: E0806 20:36:10.563153     393 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:10 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:10 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:11 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 10.
Aug 06 20:36:11 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:11 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:11 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.754865     417 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.765670     417 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.765696     417 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.765953     417 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.767153     417 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: W0806 20:36:11.767707     417 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.767730     417 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: E0806 20:36:11.767783     417 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:11 cka-02-worker2 systemd[1]: run-r3c55569ef6ab412aa4aba658c95f7a73.scope: Deactivated successfully.
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.784249     417 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.784310     417 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.784330     417 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.784342     417 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.784362     417 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.786380     417 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.786399     417 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.786432     417 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.786443     417 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: E0806 20:36:11.786572     417 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.786787     417 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: E0806 20:36:11.786979     417 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.787139     417 server.go:1181] "Started kubelet"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.787269     417 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.787889     417 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.788761     417 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.788898     417 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: E0806 20:36:11.802740     417 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: I0806 20:36:11.805032     417 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: E0806 20:36:11.805649     417 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:11 cka-02-worker2 kubelet[417]: E0806 20:36:11.805671     417 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:11 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:11 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:12 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 11.
Aug 06 20:36:12 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:12 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:12 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.022288     442 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:13 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.039748     442 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.039777     442 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.039995     442 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.041248     442 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: W0806 20:36:13.041817     442 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.041842     442 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: E0806 20:36:13.041907     442 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.046016     442 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.046086     442 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.046103     442 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.046115     442 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.046147     442 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.048740     442 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.048758     442 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.048792     442 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.048813     442 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: E0806 20:36:13.049120     442 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:13 cka-02-worker2 systemd[1]: run-r986d0b5586954356997085770b7f023f.scope: Deactivated successfully.
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.049729     442 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: E0806 20:36:13.054980     442 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.055382     442 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.057581     442 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.058041     442 server.go:1181] "Started kubelet"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.059569     442 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.061170     442 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: I0806 20:36:13.061255     442 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: E0806 20:36:13.062986     442 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: E0806 20:36:13.065747     442 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:13 cka-02-worker2 kubelet[442]: E0806 20:36:13.065776     442 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:13 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:13 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:14 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 12.
Aug 06 20:36:14 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:14 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:14 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.262533     463 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.277744     463 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.277767     463 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.278109     463 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.280071     463 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: W0806 20:36:14.280659     463 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.280698     463 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: E0806 20:36:14.281953     463 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:14 cka-02-worker2 systemd[1]: run-r4c5f21fc7a6746b8b618d202b354b60b.scope: Deactivated successfully.
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.296715     463 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.296771     463 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.296796     463 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.296807     463 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.296826     463 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.299051     463 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.299071     463 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.299088     463 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.299099     463 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: E0806 20:36:14.299221     463 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.299439     463 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: E0806 20:36:14.299599     463 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.299785     463 server.go:1181] "Started kubelet"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.300907     463 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.301068     463 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.301675     463 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.307007     463 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: I0806 20:36:14.307528     463 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: E0806 20:36:14.309843     463 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: E0806 20:36:14.314249     463 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:14 cka-02-worker2 kubelet[463]: E0806 20:36:14.314376     463 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:14 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:14 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:15 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 13.
Aug 06 20:36:15 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:15 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:15 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.520785     488 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.534346     488 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.534368     488 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.534624     488 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.535936     488 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: W0806 20:36:15.536565     488 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.536596     488 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: E0806 20:36:15.536648     488 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:15 cka-02-worker2 systemd[1]: run-r74e5546a2a3f462194e5afd21015bbf3.scope: Deactivated successfully.
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.553413     488 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.553478     488 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.553497     488 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.553518     488 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.553537     488 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.557004     488 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.557137     488 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.557218     488 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.557291     488 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: E0806 20:36:15.557459     488 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.557978     488 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: E0806 20:36:15.558285     488 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.558483     488 server.go:1181] "Started kubelet"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.559075     488 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.559527     488 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.559648     488 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.561779     488 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: I0806 20:36:15.564304     488 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: E0806 20:36:15.566955     488 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: E0806 20:36:15.571608     488 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:15 cka-02-worker2 kubelet[488]: E0806 20:36:15.571747     488 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:15 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:15 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:16 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 14.
Aug 06 20:36:16 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:16 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:16 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.760756     510 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.777642     510 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.777664     510 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.777981     510 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.779382     510 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.779994     510 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: W0806 20:36:16.780001     510 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: E0806 20:36:16.780062     510 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.783977     510 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.784019     510 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.784056     510 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.784069     510 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.784094     510 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.786354     510 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.786371     510 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.786387     510 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.786397     510 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: E0806 20:36:16.786455     510 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:16 cka-02-worker2 systemd[1]: run-r8145413a858b4b85bb9c459560ffd8af.scope: Deactivated successfully.
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.788355     510 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: E0806 20:36:16.788831     510 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.788997     510 server.go:1181] "Started kubelet"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.789615     510 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.790002     510 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.790181     510 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.790371     510 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: I0806 20:36:16.794062     510 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: E0806 20:36:16.800467     510 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: E0806 20:36:16.802224     510 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:16 cka-02-worker2 kubelet[510]: E0806 20:36:16.802369     510 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:16 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:16 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:17 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 15.
Aug 06 20:36:17 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:17 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:17 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.007383     537 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:18 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.025701     537 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.025729     537 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.026377     537 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.028348     537 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: W0806 20:36:18.029006     537 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.029502     537 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: E0806 20:36:18.029558     537 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.033218     537 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.033271     537 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.033287     537 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.033298     537 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.033317     537 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:18 cka-02-worker2 systemd[1]: run-r21d2c8f31f43412fbae0862828676620.scope: Deactivated successfully.
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.035419     537 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.035441     537 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.035476     537 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.035488     537 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.036017     537 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: E0806 20:36:18.038921     537 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: E0806 20:36:18.038936     537 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.039146     537 server.go:1181] "Started kubelet"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.039247     537 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.041351     537 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.049451     537 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.049792     537 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: I0806 20:36:18.052051     537 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: E0806 20:36:18.052973     537 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: E0806 20:36:18.056200     537 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:18 cka-02-worker2 kubelet[537]: E0806 20:36:18.056225     537 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:18 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:18 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:19 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 16.
Aug 06 20:36:19 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:19 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:19 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.263690     561 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.278610     561 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.278634     561 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.278910     561 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.280174     561 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: W0806 20:36:19.280798     561 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.280836     561 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: E0806 20:36:19.280898     561 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.286675     561 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.286728     561 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.286747     561 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.286758     561 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.286778     561 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:19 cka-02-worker2 systemd[1]: run-re3413f013b18400791e0bf0e318c9f07.scope: Deactivated successfully.
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.289270     561 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.289293     561 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.289312     561 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.289333     561 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: E0806 20:36:19.289572     561 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.289747     561 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: E0806 20:36:19.289959     561 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.290099     561 server.go:1181] "Started kubelet"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.290215     561 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.291651     561 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.292123     561 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.296683     561 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: I0806 20:36:19.296772     561 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: E0806 20:36:19.298489     561 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: E0806 20:36:19.300176     561 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:19 cka-02-worker2 kubelet[561]: E0806 20:36:19.300299     561 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:19 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:19 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:20 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 17.
Aug 06 20:36:20 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:20 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:20 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.508065     582 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.520692     582 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.520720     582 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.520944     582 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.522319     582 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: W0806 20:36:20.522963     582 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.523036     582 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: E0806 20:36:20.523118     582 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.527390     582 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.527453     582 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.527472     582 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.527483     582 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.527508     582 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:20 cka-02-worker2 systemd[1]: run-rbf6bab8ef6ba4769b77850536d44f0a9.scope: Deactivated successfully.
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.532107     582 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.532127     582 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.532145     582 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.532155     582 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.532592     582 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: E0806 20:36:20.535925     582 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: E0806 20:36:20.535922     582 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.536203     582 server.go:1181] "Started kubelet"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.537027     582 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.537036     582 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.538390     582 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.539845     582 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: I0806 20:36:20.540068     582 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: E0806 20:36:20.543334     582 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: E0806 20:36:20.544825     582 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:20 cka-02-worker2 kubelet[582]: E0806 20:36:20.544849     582 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:21 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:21 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:22 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 18.
Aug 06 20:36:22 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:22 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:22 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.512370     603 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.530083     603 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.530104     603 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.530309     603 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.531490     603 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.532217     603 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: E0806 20:36:22.532334     603 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: W0806 20:36:22.532456     603 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:22 cka-02-worker2 systemd[1]: run-r250ee6d029344187815c94af67333070.scope: Deactivated successfully.
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.559923     603 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.559975     603 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.559994     603 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.560005     603 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.560025     603 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.562631     603 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.562655     603 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.562676     603 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.562688     603 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: E0806 20:36:22.562770     603 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.563164     603 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: E0806 20:36:22.563350     603 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.563503     603 server.go:1181] "Started kubelet"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.564605     603 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.571673     603 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.572576     603 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.574929     603 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: I0806 20:36:22.575658     603 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: E0806 20:36:22.579490     603 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: E0806 20:36:22.581184     603 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:22 cka-02-worker2 kubelet[603]: E0806 20:36:22.581208     603 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:22 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:22 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:23 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 19.
Aug 06 20:36:23 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:23 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:23 cka-02-worker2 systemd[1]: Starting Cleanup of Temporary Directories...
Aug 06 20:36:23 cka-02-worker2 systemd[1]: systemd-tmpfiles-clean.service: Deactivated successfully.
Aug 06 20:36:23 cka-02-worker2 systemd[1]: Finished Cleanup of Temporary Directories.
Aug 06 20:36:23 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.761248     628 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.774769     628 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.774793     628 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.775084     628 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.776443     628 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: W0806 20:36:23.777097     628 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.777904     628 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: E0806 20:36:23.777965     628 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:23 cka-02-worker2 systemd[1]: run-r1a7eb6f85c45409082cf91324c311d41.scope: Deactivated successfully.
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.793098     628 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.793286     628 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.793366     628 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.793430     628 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.793502     628 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.797734     628 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.797904     628 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.797991     628 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.798054     628 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.799216     628 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: E0806 20:36:23.799491     628 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: E0806 20:36:23.799578     628 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.799752     628 server.go:1181] "Started kubelet"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.800482     628 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.801505     628 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.807617     628 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.810576     628 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: I0806 20:36:23.810646     628 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: E0806 20:36:23.812736     628 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: E0806 20:36:23.816065     628 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:23 cka-02-worker2 kubelet[628]: E0806 20:36:23.816201     628 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:23 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:23 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:24 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 20.
Aug 06 20:36:24 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:24 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:24 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.021859     651 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.043710     651 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.043732     651 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.043981     651 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.045283     651 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: W0806 20:36:25.045862     651 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.046526     651 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: E0806 20:36:25.046579     651 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:25 cka-02-worker2 systemd[1]: run-r39b2a9869147466386bcacedb3cf1ab9.scope: Deactivated successfully.
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.063762     651 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.063947     651 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.064031     651 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.064094     651 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.064290     651 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.070952     651 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.070974     651 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.070991     651 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.071002     651 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: E0806 20:36:25.073036     651 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.085634     651 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: E0806 20:36:25.085816     651 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.085962     651 server.go:1181] "Started kubelet"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.087365     651 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.087535     651 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.088152     651 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.095492     651 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: I0806 20:36:25.095836     651 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: E0806 20:36:25.107739     651 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: E0806 20:36:25.108557     651 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:25 cka-02-worker2 kubelet[651]: E0806 20:36:25.108578     651 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:25 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:25 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:26 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 21.
Aug 06 20:36:26 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:26 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:26 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.268682     674 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.276214     674 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.276305     674 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.276573     674 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.277756     674 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: W0806 20:36:26.278431     674 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.278467     674 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: E0806 20:36:26.278504     674 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.282393     674 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.282438     674 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.282454     674 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.282470     674 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.282493     674 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.286025     674 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.286051     674 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.286086     674 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.286097     674 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:26 cka-02-worker2 systemd[1]: run-ra140d94cd97f4dd6bca982146e67d043.scope: Deactivated successfully.
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: E0806 20:36:26.286355     674 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.286562     674 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: E0806 20:36:26.289971     674 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.290161     674 server.go:1181] "Started kubelet"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.290358     674 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.291344     674 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.291855     674 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.292327     674 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: I0806 20:36:26.292389     674 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: E0806 20:36:26.297468     674 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: E0806 20:36:26.298969     674 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:26 cka-02-worker2 kubelet[674]: E0806 20:36:26.299096     674 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:26 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:26 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:27 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 22.
Aug 06 20:36:27 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:27 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:27 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.508553     695 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.521617     695 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.521709     695 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.522022     695 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.523243     695 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: W0806 20:36:27.523828     695 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.524169     695 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: E0806 20:36:27.524206     695 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:27 cka-02-worker2 systemd[1]: run-r760f1751ec2941198c4f94b13eb1fb6a.scope: Deactivated successfully.
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.539794     695 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.539852     695 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.539877     695 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.539907     695 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.539933     695 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.547915     695 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.547937     695 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.547957     695 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.547969     695 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: E0806 20:36:27.549456     695 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.551125     695 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: E0806 20:36:27.551373     695 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.551587     695 server.go:1181] "Started kubelet"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.552790     695 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.553782     695 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.559120     695 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.559199     695 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: I0806 20:36:27.560383     695 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: E0806 20:36:27.564384     695 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: E0806 20:36:27.568022     695 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:27 cka-02-worker2 kubelet[695]: E0806 20:36:27.568052     695 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:27 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:27 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:28 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 23.
Aug 06 20:36:28 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:28 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:28 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.766053     719 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.780902     719 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.780921     719 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.781156     719 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.783020     719 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: W0806 20:36:28.783858     719 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.783977     719 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: E0806 20:36:28.784031     719 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.787847     719 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.787907     719 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.787927     719 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.787941     719 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.787960     719 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:28 cka-02-worker2 systemd[1]: run-rb336839c109a4ca4ad290b4edd2ff42b.scope: Deactivated successfully.
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.790100     719 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.790117     719 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.790134     719 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.790151     719 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.791830     719 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: E0806 20:36:28.793974     719 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.794172     719 server.go:1181] "Started kubelet"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.794225     719 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.795080     719 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.796225     719 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: E0806 20:36:28.799900     719 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.800776     719 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: I0806 20:36:28.801247     719 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: E0806 20:36:28.801686     719 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: E0806 20:36:28.807194     719 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:28 cka-02-worker2 kubelet[719]: E0806 20:36:28.807223     719 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:28 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:28 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:29 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 24.
Aug 06 20:36:29 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:29 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:29 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.026322     744 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.037928     744 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.038033     744 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.038318     744 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.039579     744 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.040118     744 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: W0806 20:36:30.040149     744 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: E0806 20:36:30.040163     744 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:30 cka-02-worker2 systemd[1]: run-rc4155f0c5c854b34ae82702dc5ef7b63.scope: Deactivated successfully.
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.055608     744 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.055662     744 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.055689     744 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.055701     744 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.055730     744 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.065391     744 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.065450     744 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.065470     744 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.065486     744 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: E0806 20:36:30.066535     744 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.066720     744 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: E0806 20:36:30.067040     744 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.067290     744 server.go:1181] "Started kubelet"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.067402     744 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.068056     744 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.068120     744 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.070005     744 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: I0806 20:36:30.070290     744 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: E0806 20:36:30.071251     744 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: E0806 20:36:30.072925     744 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:30 cka-02-worker2 kubelet[744]: E0806 20:36:30.072967     744 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:30 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:30 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:31 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 25.
Aug 06 20:36:31 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:31 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:31 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.268459     767 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.280897     767 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.281010     767 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.281338     767 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.283004     767 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: W0806 20:36:31.284737     767 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.284758     767 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: E0806 20:36:31.284799     767 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.288634     767 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.288689     767 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.288706     767 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.288720     767 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.288740     767 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:31 cka-02-worker2 systemd[1]: run-rbb90246d2505462b8e97e8186d9c5511.scope: Deactivated successfully.
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.291474     767 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.291494     767 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.291513     767 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.291525     767 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.292153     767 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: E0806 20:36:31.293926     767 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: E0806 20:36:31.294016     767 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.294178     767 server.go:1181] "Started kubelet"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.294590     767 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.294910     767 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.306189     767 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.306391     767 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: I0806 20:36:31.308486     767 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: E0806 20:36:31.310144     767 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: E0806 20:36:31.311458     767 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:31 cka-02-worker2 kubelet[767]: E0806 20:36:31.311607     767 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:31 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:31 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:32 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 26.
Aug 06 20:36:32 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:32 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:32 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.506500     791 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.518741     791 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.518765     791 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.519063     791 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.520651     791 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: W0806 20:36:32.521386     791 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.521654     791 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: E0806 20:36:32.521726     791 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:32 cka-02-worker2 systemd[1]: run-r6037d2ef2ec44cdba5c462d9b85f411c.scope: Deactivated successfully.
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.537578     791 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.537719     791 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.537800     791 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.537864     791 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.537960     791 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.543914     791 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.544019     791 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.544093     791 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.544154     791 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: E0806 20:36:32.544981     791 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.546408     791 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: E0806 20:36:32.546718     791 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.546935     791 server.go:1181] "Started kubelet"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.547164     791 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.547787     791 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.547946     791 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.548928     791 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: I0806 20:36:32.549013     791 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: E0806 20:36:32.567351     791 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: E0806 20:36:32.578250     791 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:32 cka-02-worker2 kubelet[791]: E0806 20:36:32.578281     791 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:32 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:32 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:33 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 27.
Aug 06 20:36:33 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:33 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:33 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.762430     816 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.775151     816 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.775278     816 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.775850     816 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.777054     816 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: W0806 20:36:33.777695     816 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.778052     816 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: E0806 20:36:33.778207     816 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:33 cka-02-worker2 systemd[1]: run-rb5d4d793eaae48f59276b3b6503f7aff.scope: Deactivated successfully.
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.795743     816 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.795913     816 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.795992     816 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.796063     816 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.796097     816 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.801215     816 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.801244     816 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.801261     816 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.801272     816 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.802629     816 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: E0806 20:36:33.802986     816 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.803215     816 server.go:1181] "Started kubelet"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.805486     816 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.806219     816 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.806387     816 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.806658     816 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: I0806 20:36:33.809017     816 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: E0806 20:36:33.809264     816 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: E0806 20:36:33.810013     816 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: E0806 20:36:33.811331     816 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:33 cka-02-worker2 kubelet[816]: E0806 20:36:33.811606     816 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:33 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:33 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:34 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 28.
Aug 06 20:36:34 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:34 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:34 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.007465     842 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.021875     842 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.021911     842 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.022100     842 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.023234     842 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: W0806 20:36:35.023762     842 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.024105     842 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: E0806 20:36:35.024135     842 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:35 cka-02-worker2 systemd[1]: run-r12b11ac1da4f4ec389674b6d54cecb49.scope: Deactivated successfully.
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.040937     842 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.040989     842 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.041009     842 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.041020     842 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.041043     842 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.046543     842 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.047385     842 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.047516     842 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.047537     842 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: E0806 20:36:35.047636     842 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.048455     842 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: E0806 20:36:35.048641     842 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.048774     842 server.go:1181] "Started kubelet"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.049648     842 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.050242     842 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.050995     842 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.059410     842 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: I0806 20:36:35.059481     842 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: E0806 20:36:35.065207     842 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: E0806 20:36:35.069792     842 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:35 cka-02-worker2 kubelet[842]: E0806 20:36:35.070193     842 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:35 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:35 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:36 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 29.
Aug 06 20:36:36 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:36 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:36 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.259495     865 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.275873     865 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.275909     865 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.276156     865 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.277395     865 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: W0806 20:36:36.277972     865 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.278140     865 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: E0806 20:36:36.278372     865 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.281836     865 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.281894     865 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.281919     865 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.281930     865 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.281957     865 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:36 cka-02-worker2 systemd[1]: run-rf1b85425ecdc458a8ab35a89edf49887.scope: Deactivated successfully.
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.288805     865 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.288829     865 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.288846     865 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.288857     865 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: E0806 20:36:36.288957     865 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.290954     865 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: E0806 20:36:36.291151     865 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.291314     865 server.go:1181] "Started kubelet"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.292152     865 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.292671     865 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.292796     865 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.299605     865 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: I0806 20:36:36.299663     865 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: E0806 20:36:36.303833     865 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: E0806 20:36:36.305055     865 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:36 cka-02-worker2 kubelet[865]: E0806 20:36:36.305078     865 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:36 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:36 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:37 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 30.
Aug 06 20:36:37 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:37 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:37 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.511415     887 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.526958     887 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.527067     887 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.527342     887 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.528475     887 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: W0806 20:36:37.529030     887 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.529227     887 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: E0806 20:36:37.530195     887 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:37 cka-02-worker2 systemd[1]: run-r91f0d5a262134ef193e9b929406be6cb.scope: Deactivated successfully.
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.546000     887 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.546050     887 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.546080     887 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.546093     887 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.546118     887 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.558118     887 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.558145     887 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.558165     887 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.558177     887 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: E0806 20:36:37.559291     887 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.559512     887 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: E0806 20:36:37.559751     887 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.560042     887 server.go:1181] "Started kubelet"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.561342     887 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.564475     887 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.564672     887 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.565837     887 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: I0806 20:36:37.566552     887 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: E0806 20:36:37.569742     887 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: E0806 20:36:37.571847     887 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:37 cka-02-worker2 kubelet[887]: E0806 20:36:37.571988     887 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:37 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:37 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:38 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 31.
Aug 06 20:36:38 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:38 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:38 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.768584     908 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.784208     908 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.784233     908 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.784447     908 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.785690     908 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: W0806 20:36:38.786249     908 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.786307     908 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: E0806 20:36:38.786505     908 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:38 cka-02-worker2 systemd[1]: run-r1e001d048f7a492b91b8cc3b42b9c130.scope: Deactivated successfully.
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.802962     908 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.803132     908 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.803222     908 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.803286     908 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.803520     908 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.813784     908 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.813809     908 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.813825     908 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.813837     908 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: E0806 20:36:38.814440     908 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.815201     908 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: E0806 20:36:38.815407     908 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.815574     908 server.go:1181] "Started kubelet"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.816364     908 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.816531     908 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.817047     908 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.817700     908 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: I0806 20:36:38.817757     908 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: E0806 20:36:38.821939     908 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: E0806 20:36:38.823120     908 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:38 cka-02-worker2 kubelet[908]: E0806 20:36:38.823144     908 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:38 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:38 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:39 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 32.
Aug 06 20:36:39 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:39 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:39 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.012623     932 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.026932     932 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.026954     932 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.027829     932 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.031439     932 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: W0806 20:36:40.032003     932 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.032033     932 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: E0806 20:36:40.032077     932 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.035983     932 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.036033     932 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.036051     932 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.036062     932 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.036081     932 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:40 cka-02-worker2 systemd[1]: run-r415fe29b1f4843799459900d069ad883.scope: Deactivated successfully.
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.038260     932 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.038280     932 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.038295     932 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.038306     932 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.038723     932 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: E0806 20:36:40.042223     932 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: E0806 20:36:40.042576     932 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.042757     932 server.go:1181] "Started kubelet"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.042819     932 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.043458     932 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.045841     932 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.050538     932 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: I0806 20:36:40.052082     932 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: E0806 20:36:40.061092     932 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: E0806 20:36:40.062775     932 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: E0806 20:36:40.071117     932 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:40 cka-02-worker2 kubelet[932]: E0806 20:36:40.071150     932 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:40 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:40 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:41 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 33.
Aug 06 20:36:41 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:41 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:41 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.268700     954 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.275942     954 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.275962     954 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.276203     954 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.277364     954 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: W0806 20:36:41.278004     954 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.278277     954 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: E0806 20:36:41.278325     954 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:41 cka-02-worker2 systemd[1]: run-r6b4c00334c6a478b9bd90aa409bec070.scope: Deactivated successfully.
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.295240     954 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.295294     954 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.295314     954 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.295325     954 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.295344     954 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.312122     954 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.312147     954 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.312169     954 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.312181     954 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: E0806 20:36:41.312738     954 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.313186     954 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: E0806 20:36:41.319067     954 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.319250     954 server.go:1181] "Started kubelet"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.320070     954 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.320071     954 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.321841     954 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.323295     954 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: I0806 20:36:41.323755     954 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: E0806 20:36:41.329707     954 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: E0806 20:36:41.331272     954 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:41 cka-02-worker2 kubelet[954]: E0806 20:36:41.331297     954 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:41 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:41 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:42 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 34.
Aug 06 20:36:42 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:42 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:42 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.507187     982 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.520770     982 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.520795     982 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.521017     982 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.522195     982 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: W0806 20:36:42.522765     982 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.522869     982 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: E0806 20:36:42.522919     982 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:42 cka-02-worker2 systemd[1]: run-r1f921f23224c40489d0e7dedd43b19c1.scope: Deactivated successfully.
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.540347     982 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.540407     982 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.540434     982 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.540446     982 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.540473     982 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.553026     982 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.553053     982 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.553082     982 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.553098     982 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: E0806 20:36:42.553418     982 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.554031     982 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: E0806 20:36:42.554215     982 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.554386     982 server.go:1181] "Started kubelet"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.556054     982 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.556743     982 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.557495     982 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.558307     982 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: I0806 20:36:42.558497     982 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: E0806 20:36:42.559723     982 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: E0806 20:36:42.560452     982 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:42 cka-02-worker2 kubelet[982]: E0806 20:36:42.560476     982 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:42 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:42 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:43 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 35.
Aug 06 20:36:43 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:43 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:43 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.764781    1004 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.777675    1004 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.777697    1004 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.777928    1004 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.779632    1004 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: W0806 20:36:43.780321    1004 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.780395    1004 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: E0806 20:36:43.780545    1004 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.784580    1004 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.784629    1004 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.784646    1004 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.784657    1004 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.784676    1004 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.786668    1004 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.786687    1004 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.786703    1004 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.786744    1004 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: E0806 20:36:43.786769    1004 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:43 cka-02-worker2 systemd[1]: run-r59855fc9915b4ed2b4fa1a66c701afe1.scope: Deactivated successfully.
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.787843    1004 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: E0806 20:36:43.792954    1004 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.793531    1004 server.go:1181] "Started kubelet"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.794677    1004 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.795030    1004 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.795529    1004 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.796341    1004 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: I0806 20:36:43.796407    1004 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: E0806 20:36:43.798717    1004 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: E0806 20:36:43.799664    1004 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:43 cka-02-worker2 kubelet[1004]: E0806 20:36:43.799688    1004 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:43 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:43 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:44 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 36.
Aug 06 20:36:44 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:44 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:44 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.013697    1024 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.025003    1024 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.025179    1024 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.025451    1024 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.026661    1024 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: W0806 20:36:45.027378    1024 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.027518    1024 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: E0806 20:36:45.028009    1024 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.032636    1024 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.032685    1024 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.032707    1024 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.032718    1024 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.032736    1024 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:45 cka-02-worker2 systemd[1]: run-r0aac2d1348d14dd79299491f2d7162a0.scope: Deactivated successfully.
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.036666    1024 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.036687    1024 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.036706    1024 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.036717    1024 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: E0806 20:36:45.036796    1024 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.037213    1024 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: E0806 20:36:45.037366    1024 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.037514    1024 server.go:1181] "Started kubelet"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.038232    1024 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.038487    1024 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.039231    1024 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.044343    1024 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: I0806 20:36:45.044540    1024 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: E0806 20:36:45.053789    1024 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: E0806 20:36:45.055434    1024 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:45 cka-02-worker2 kubelet[1024]: E0806 20:36:45.055462    1024 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:45 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:45 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:46 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 37.
Aug 06 20:36:46 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:46 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:46 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.263799    1046 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.277825    1046 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.277990    1046 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.278257    1046 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.279490    1046 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: W0806 20:36:46.280139    1046 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.280167    1046 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: E0806 20:36:46.280323    1046 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:46 cka-02-worker2 systemd[1]: run-r5543028927184ee58f2cb10482f6b7ea.scope: Deactivated successfully.
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.295908    1046 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.296045    1046 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.296132    1046 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.296195    1046 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.296271    1046 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.301896    1046 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.302963    1046 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.303562    1046 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.303644    1046 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: E0806 20:36:46.303675    1046 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.305126    1046 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: E0806 20:36:46.305393    1046 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.305681    1046 server.go:1181] "Started kubelet"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.307561    1046 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.308435    1046 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.312337    1046 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.313809    1046 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: I0806 20:36:46.315276    1046 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: E0806 20:36:46.319086    1046 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: E0806 20:36:46.320559    1046 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:46 cka-02-worker2 kubelet[1046]: E0806 20:36:46.320693    1046 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:46 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:46 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:47 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 38.
Aug 06 20:36:47 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:47 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:47 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.528831    1069 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.546825    1069 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.546854    1069 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.547096    1069 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.548408    1069 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: W0806 20:36:47.549052    1069 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.549422    1069 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: E0806 20:36:47.549548    1069 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:47 cka-02-worker2 systemd[1]: run-rcfb1038dddce4c1fb62558aa9e323589.scope: Deactivated successfully.
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.567423    1069 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.567591    1069 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.567679    1069 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.567747    1069 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.567823    1069 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.571028    1069 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.571050    1069 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.571092    1069 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.571106    1069 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: E0806 20:36:47.571264    1069 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.571828    1069 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: E0806 20:36:47.572331    1069 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.572637    1069 server.go:1181] "Started kubelet"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.574481    1069 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.575234    1069 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.592236    1069 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.594576    1069 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: I0806 20:36:47.595274    1069 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: E0806 20:36:47.599210    1069 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: E0806 20:36:47.601089    1069 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:47 cka-02-worker2 kubelet[1069]: E0806 20:36:47.601149    1069 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:47 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:47 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:48 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 39.
Aug 06 20:36:48 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:48 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:48 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.763340    1092 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.777295    1092 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.777314    1092 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.777567    1092 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.780859    1092 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.781601    1092 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: E0806 20:36:48.781652    1092 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: W0806 20:36:48.781757    1092 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.785910    1092 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.785965    1092 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.785984    1092 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.785995    1092 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.786020    1092 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:48 cka-02-worker2 systemd[1]: run-rd752cb2149614ecca3565fa70e9839b2.scope: Deactivated successfully.
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.792532    1092 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.792555    1092 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.792589    1092 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.792606    1092 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.793090    1092 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: E0806 20:36:48.794166    1092 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: E0806 20:36:48.797034    1092 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.797245    1092 server.go:1181] "Started kubelet"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.798528    1092 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.799174    1092 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.806072    1092 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.812626    1092 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: I0806 20:36:48.812957    1092 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: E0806 20:36:48.814012    1092 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: E0806 20:36:48.816085    1092 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:48 cka-02-worker2 kubelet[1092]: E0806 20:36:48.816114    1092 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:48 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:48 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:49 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 40.
Aug 06 20:36:49 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:49 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:49 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.024420    1113 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.048746    1113 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.048910    1113 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.049172    1113 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.050444    1113 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: W0806 20:36:50.051077    1113 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.051210    1113 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: E0806 20:36:50.051251    1113 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.055706    1113 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.055765    1113 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.055854    1113 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.055868    1113 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.055908    1113 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:50 cka-02-worker2 systemd[1]: run-ra3cd79b7f8294d4bbffc61a1c9a9e6e5.scope: Deactivated successfully.
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.060727    1113 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.060755    1113 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.061708    1113 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.061736    1113 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: E0806 20:36:50.062002    1113 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.062343    1113 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: E0806 20:36:50.062629    1113 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.063050    1113 server.go:1181] "Started kubelet"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.063297    1113 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.065534    1113 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.067183    1113 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.071581    1113 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: I0806 20:36:50.071645    1113 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: E0806 20:36:50.084270    1113 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: E0806 20:36:50.085105    1113 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:50 cka-02-worker2 kubelet[1113]: E0806 20:36:50.085133    1113 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:50 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:50 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:51 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 41.
Aug 06 20:36:51 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:51 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:51 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.274134    1136 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.281771    1136 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.281791    1136 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.282076    1136 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.283244    1136 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: W0806 20:36:51.283788    1136 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.283812    1136 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: E0806 20:36:51.283845    1136 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.287960    1136 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.288012    1136 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.288050    1136 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.288062    1136 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.288084    1136 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:51 cka-02-worker2 systemd[1]: run-r67b1d3fb4bd44b19a9278bdec7bd94bd.scope: Deactivated successfully.
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.291971    1136 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.291990    1136 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.292012    1136 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.292025    1136 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: E0806 20:36:51.292118    1136 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.292414    1136 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: E0806 20:36:51.292597    1136 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.292747    1136 server.go:1181] "Started kubelet"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.292909    1136 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.293723    1136 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.296638    1136 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.298526    1136 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: I0806 20:36:51.298668    1136 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: E0806 20:36:51.320478    1136 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: E0806 20:36:51.321537    1136 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:51 cka-02-worker2 kubelet[1136]: E0806 20:36:51.321561    1136 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:51 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:51 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:52 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 42.
Aug 06 20:36:52 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:52 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:52 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.510519    1159 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.523600    1159 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.523652    1159 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.523872    1159 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.525151    1159 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: W0806 20:36:52.525741    1159 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.525927    1159 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: E0806 20:36:52.526100    1159 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:52 cka-02-worker2 systemd[1]: run-r57f1bbac357b4f23b6e7cb6fff95ef0a.scope: Deactivated successfully.
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.544567    1159 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.544726    1159 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.544745    1159 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.544764    1159 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.544785    1159 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.553239    1159 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.553263    1159 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.553281    1159 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.553292    1159 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.554124    1159 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: E0806 20:36:52.554439    1159 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: E0806 20:36:52.555325    1159 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.555556    1159 server.go:1181] "Started kubelet"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.556186    1159 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.557092    1159 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.557115    1159 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.558177    1159 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: I0806 20:36:52.559563    1159 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: E0806 20:36:52.570334    1159 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: E0806 20:36:52.575496    1159 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:52 cka-02-worker2 kubelet[1159]: E0806 20:36:52.575530    1159 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:52 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:52 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:53 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 43.
Aug 06 20:36:53 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:53 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:53 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.766289    1183 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.783563    1183 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.783588    1183 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.783936    1183 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.786263    1183 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.786956    1183 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: W0806 20:36:53.786963    1183 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: E0806 20:36:53.786997    1183 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.790774    1183 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.790827    1183 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.790843    1183 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.790855    1183 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.790879    1183 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.793099    1183 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.793120    1183 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.793149    1183 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.793165    1183 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.793573    1183 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:53 cka-02-worker2 systemd[1]: run-r6ca6b26e22f74b0288d67ed1b409592e.scope: Deactivated successfully.
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: E0806 20:36:53.796921    1183 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: E0806 20:36:53.796926    1183 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.797243    1183 server.go:1181] "Started kubelet"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.798284    1183 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.799548    1183 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.800363    1183 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.807051    1183 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: I0806 20:36:53.811210    1183 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: E0806 20:36:53.813831    1183 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: E0806 20:36:53.823723    1183 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: E0806 20:36:53.830940    1183 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:53 cka-02-worker2 kubelet[1183]: E0806 20:36:53.830979    1183 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:53 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:53 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:54 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 44.
Aug 06 20:36:54 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:54 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:54 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.011603    1212 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.024911    1212 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.025018    1212 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.025350    1212 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.026636    1212 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.027256    1212 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: E0806 20:36:55.027385    1212 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: W0806 20:36:55.027278    1212 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.031598    1212 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.031650    1212 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.031668    1212 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.031680    1212 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.031699    1212 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:55 cka-02-worker2 systemd[1]: run-rbe4b175952964ff1873d83166858789f.scope: Deactivated successfully.
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.035653    1212 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.035672    1212 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.035689    1212 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.036441    1212 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.037112    1212 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: E0806 20:36:55.043014    1212 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.043296    1212 server.go:1181] "Started kubelet"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.043684    1212 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: E0806 20:36:55.044036    1212 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.046254    1212 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.047551    1212 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.051901    1212 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: I0806 20:36:55.052049    1212 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: E0806 20:36:55.053499    1212 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: E0806 20:36:55.054791    1212 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:55 cka-02-worker2 kubelet[1212]: E0806 20:36:55.054815    1212 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:55 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:55 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:56 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 45.
Aug 06 20:36:56 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:56 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:56 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.261630    1234 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.275798    1234 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.275816    1234 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.276017    1234 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.277138    1234 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: W0806 20:36:56.277723    1234 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.277809    1234 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: E0806 20:36:56.278247    1234 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:56 cka-02-worker2 systemd[1]: run-r80184acc323944f99dd887114999d30a.scope: Deactivated successfully.
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.293692    1234 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.293751    1234 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.293769    1234 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.293781    1234 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.293800    1234 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.297768    1234 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.297795    1234 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.297955    1234 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.297968    1234 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: E0806 20:36:56.298310    1234 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.298924    1234 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: E0806 20:36:56.301643    1234 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.301846    1234 server.go:1181] "Started kubelet"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.304787    1234 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.305371    1234 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.306336    1234 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.315875    1234 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: I0806 20:36:56.315921    1234 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: E0806 20:36:56.332599    1234 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: E0806 20:36:56.337949    1234 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:56 cka-02-worker2 kubelet[1234]: E0806 20:36:56.337977    1234 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:56 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:56 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:57 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 46.
Aug 06 20:36:57 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:57 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:57 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.512602    1262 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.523965    1262 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.523989    1262 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.524232    1262 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.525556    1262 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.526202    1262 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: E0806 20:36:57.526259    1262 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: W0806 20:36:57.526210    1262 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:57 cka-02-worker2 systemd[1]: run-r0738dac0037142d99dad40aba997ba34.scope: Deactivated successfully.
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.541990    1262 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.542057    1262 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.542111    1262 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.542126    1262 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.542145    1262 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.546750    1262 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.546773    1262 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.546790    1262 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.546802    1262 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: E0806 20:36:57.548117    1262 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.548843    1262 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: E0806 20:36:57.549355    1262 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.549589    1262 server.go:1181] "Started kubelet"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.551684    1262 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.560365    1262 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.565485    1262 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.565982    1262 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: I0806 20:36:57.566044    1262 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: E0806 20:36:57.567058    1262 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: E0806 20:36:57.572084    1262 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:57 cka-02-worker2 kubelet[1262]: E0806 20:36:57.572112    1262 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:57 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:57 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:58 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 47.
Aug 06 20:36:58 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:58 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:58 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.764319    1284 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.775682    1284 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.775705    1284 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.775932    1284 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.777144    1284 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: W0806 20:36:58.778150    1284 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.778210    1284 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: E0806 20:36:58.778255    1284 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:58 cka-02-worker2 systemd[1]: run-r89f42f10fcd944d396078aede4374751.scope: Deactivated successfully.
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.793752    1284 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.793798    1284 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.793816    1284 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.793827    1284 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.793848    1284 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.804604    1284 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.804626    1284 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.804657    1284 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.804670    1284 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: E0806 20:36:58.804913    1284 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.805208    1284 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: E0806 20:36:58.805366    1284 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.805524    1284 server.go:1181] "Started kubelet"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.806071    1284 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.806705    1284 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.806821    1284 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.807453    1284 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: I0806 20:36:58.807541    1284 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: E0806 20:36:58.810237    1284 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: E0806 20:36:58.817412    1284 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:58 cka-02-worker2 kubelet[1284]: E0806 20:36:58.817455    1284 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:58 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:58 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:59 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 48.
Aug 06 20:36:59 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:59 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:59 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.018561    1312 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.031985    1312 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.032003    1312 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.032182    1312 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.033360    1312 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: W0806 20:37:00.033928    1312 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.034099    1312 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: E0806 20:37:00.034138    1312 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.038387    1312 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.038453    1312 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.038472    1312 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.038483    1312 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.038502    1312 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.040494    1312 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.040515    1312 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.040532    1312 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.040561    1312 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: E0806 20:37:00.040828    1312 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.041116    1312 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: E0806 20:37:00.041327    1312 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.041693    1312 server.go:1181] "Started kubelet"
Aug 06 20:37:00 cka-02-worker2 systemd[1]: run-rb6bd51d2a64945039a1048bd9cb151c0.scope: Deactivated successfully.
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.043583    1312 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.044061    1312 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.044164    1312 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.044869    1312 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: I0806 20:37:00.044944    1312 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: E0806 20:37:00.056164    1312 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: E0806 20:37:00.066916    1312 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:00 cka-02-worker2 kubelet[1312]: E0806 20:37:00.067054    1312 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:00 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:00 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:01 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 49.
Aug 06 20:37:01 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:01 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:01 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.264689    1336 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.276037    1336 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.276069    1336 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.276286    1336 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.277445    1336 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: W0806 20:37:01.277981    1336 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.278087    1336 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: E0806 20:37:01.278221    1336 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.281984    1336 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.282054    1336 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.282077    1336 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.282090    1336 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.282116    1336 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.284440    1336 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.284459    1336 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.284476    1336 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.284486    1336 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:01 cka-02-worker2 systemd[1]: run-rbab0717696564df6adb2cd9aef0df98a.scope: Deactivated successfully.
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: E0806 20:37:01.285194    1336 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.285279    1336 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: E0806 20:37:01.289957    1336 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.290150    1336 server.go:1181] "Started kubelet"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.290289    1336 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.291125    1336 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.292436    1336 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.293291    1336 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: I0806 20:37:01.302557    1336 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: E0806 20:37:01.308151    1336 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: E0806 20:37:01.311280    1336 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: E0806 20:37:01.311288    1336 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:01 cka-02-worker2 kubelet[1336]: E0806 20:37:01.311324    1336 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:01 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:01 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:02 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 50.
Aug 06 20:37:02 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:02 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:02 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.509830    1362 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.523610    1362 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.523631    1362 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.523832    1362 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.525084    1362 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: W0806 20:37:02.525632    1362 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.525918    1362 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: E0806 20:37:02.525951    1362 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:02 cka-02-worker2 systemd[1]: run-r33df1db812214420b464d4366bc1af19.scope: Deactivated successfully.
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.542793    1362 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.542990    1362 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.543091    1362 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.543157    1362 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.543225    1362 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.554263    1362 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.554286    1362 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.554328    1362 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.554341    1362 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: E0806 20:37:02.554595    1362 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.555025    1362 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: E0806 20:37:02.555212    1362 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.555368    1362 server.go:1181] "Started kubelet"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.556504    1362 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.557779    1362 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.563691    1362 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.564933    1362 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: I0806 20:37:02.565005    1362 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: E0806 20:37:02.567841    1362 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: E0806 20:37:02.570595    1362 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:02 cka-02-worker2 kubelet[1362]: E0806 20:37:02.570625    1362 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:02 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:02 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:03 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 51.
Aug 06 20:37:03 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:03 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:03 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.759202    1389 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.775416    1389 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.775439    1389 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.775651    1389 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.776935    1389 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: W0806 20:37:03.777525    1389 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.777981    1389 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: E0806 20:37:03.778040    1389 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:03 cka-02-worker2 systemd[1]: run-rfb33db6aa9cf4cfdbeb84336a17dd2b3.scope: Deactivated successfully.
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.793701    1389 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.793757    1389 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.793777    1389 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.793788    1389 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.793807    1389 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.799136    1389 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.799273    1389 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.799350    1389 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.799413    1389 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: E0806 20:37:03.801303    1389 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.801519    1389 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: E0806 20:37:03.801673    1389 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.801874    1389 server.go:1181] "Started kubelet"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.803258    1389 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.809485    1389 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: I0806 20:37:03.809553    1389 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: E0806 20:37:03.811213    1389 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: E0806 20:37:03.813547    1389 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:03 cka-02-worker2 kubelet[1389]: E0806 20:37:03.813672    1389 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:03 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:03 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:04 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 52.
Aug 06 20:37:04 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:04 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:04 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.004926    1411 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.020963    1411 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.021059    1411 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.021285    1411 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.023421    1411 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: W0806 20:37:05.024025    1411 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.024109    1411 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: E0806 20:37:05.024151    1411 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.029177    1411 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.029235    1411 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.029252    1411 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.029263    1411 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.029281    1411 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:05 cka-02-worker2 systemd[1]: run-rccd80b436dd145ceb54e1c560d5b24d3.scope: Deactivated successfully.
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.032008    1411 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.032029    1411 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.032046    1411 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.032057    1411 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.032400    1411 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: E0806 20:37:05.034994    1411 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: E0806 20:37:05.034990    1411 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.035229    1411 server.go:1181] "Started kubelet"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.035330    1411 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.036301    1411 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.036907    1411 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.042365    1411 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: I0806 20:37:05.042473    1411 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: E0806 20:37:05.053064    1411 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: E0806 20:37:05.062611    1411 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:05 cka-02-worker2 kubelet[1411]: E0806 20:37:05.062829    1411 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:05 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:05 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:06 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 53.
Aug 06 20:37:06 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:06 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:06 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.267115    1433 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.274895    1433 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.274914    1433 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.275134    1433 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.276285    1433 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: W0806 20:37:06.276819    1433 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.276861    1433 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: E0806 20:37:06.276959    1433 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.280802    1433 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.280848    1433 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.280866    1433 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.280877    1433 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.280912    1433 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.283670    1433 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.283761    1433 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.283832    1433 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.283858    1433 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.284800    1433 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:06 cka-02-worker2 systemd[1]: run-ra3e2e0a0a57b4b9c9e98d23e83002482.scope: Deactivated successfully.
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: E0806 20:37:06.292729    1433 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.293028    1433 server.go:1181] "Started kubelet"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.293232    1433 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.294048    1433 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.295495    1433 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: E0806 20:37:06.296004    1433 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.300117    1433 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: I0806 20:37:06.306653    1433 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: E0806 20:37:06.308954    1433 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: E0806 20:37:06.311924    1433 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:06 cka-02-worker2 kubelet[1433]: E0806 20:37:06.311952    1433 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:06 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:06 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:07 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 54.
Aug 06 20:37:07 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:07 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:07 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.510565    1455 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.525801    1455 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.525825    1455 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.526106    1455 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.527318    1455 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: W0806 20:37:07.527874    1455 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.528435    1455 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: E0806 20:37:07.528488    1455 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:07 cka-02-worker2 systemd[1]: run-rfb43aef1af06479397eeebe9039ad0af.scope: Deactivated successfully.
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.548387    1455 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.548441    1455 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.548468    1455 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.548539    1455 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.548572    1455 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.555616    1455 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.556188    1455 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.556295    1455 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.556314    1455 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: E0806 20:37:07.556542    1455 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.556817    1455 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: E0806 20:37:07.557019    1455 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.557252    1455 server.go:1181] "Started kubelet"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.557730    1455 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.558215    1455 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.562734    1455 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.566053    1455 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: I0806 20:37:07.566142    1455 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: E0806 20:37:07.566929    1455 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: E0806 20:37:07.570314    1455 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:07 cka-02-worker2 kubelet[1455]: E0806 20:37:07.570343    1455 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:07 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:07 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:08 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 55.
Aug 06 20:37:08 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:08 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:08 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.769008    1478 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.783713    1478 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.783733    1478 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.783968    1478 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.785176    1478 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: W0806 20:37:08.785744    1478 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.785832    1478 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: E0806 20:37:08.785941    1478 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:08 cka-02-worker2 systemd[1]: run-re9ce328652c44c9aa21165f50b268e74.scope: Deactivated successfully.
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.806980    1478 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.807080    1478 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.807111    1478 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.807124    1478 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.807157    1478 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.815179    1478 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.815200    1478 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.815217    1478 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.815229    1478 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.815731    1478 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: E0806 20:37:08.816943    1478 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: E0806 20:37:08.816946    1478 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.817117    1478 server.go:1181] "Started kubelet"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.818048    1478 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.818069    1478 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.819131    1478 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.819135    1478 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: I0806 20:37:08.819147    1478 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: E0806 20:37:08.827160    1478 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: E0806 20:37:08.830785    1478 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:08 cka-02-worker2 kubelet[1478]: E0806 20:37:08.830942    1478 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:08 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:08 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:09 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 56.
Aug 06 20:37:09 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:09 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:09 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.012494    1504 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.023674    1504 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.023695    1504 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.023972    1504 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.025212    1504 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.025823    1504 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: E0806 20:37:10.025953    1504 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: W0806 20:37:10.025862    1504 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.030207    1504 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.030258    1504 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.030278    1504 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.030289    1504 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.030308    1504 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.032391    1504 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.032409    1504 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.032426    1504 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.032437    1504 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: E0806 20:37:10.032552    1504 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:10 cka-02-worker2 systemd[1]: run-r69272c884e7841c788d57dc4fbd82d29.scope: Deactivated successfully.
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.035034    1504 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: E0806 20:37:10.039866    1504 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.040084    1504 server.go:1181] "Started kubelet"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.041498    1504 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.043706    1504 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.046072    1504 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.047159    1504 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: I0806 20:37:10.047381    1504 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: E0806 20:37:10.052033    1504 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: E0806 20:37:10.053500    1504 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:10 cka-02-worker2 kubelet[1504]: E0806 20:37:10.053629    1504 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:10 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:10 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:11 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 57.
Aug 06 20:37:11 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:11 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:11 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.264920    1528 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.282229    1528 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.282251    1528 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.282517    1528 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.287389    1528 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: W0806 20:37:11.288037    1528 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.288154    1528 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: E0806 20:37:11.288198    1528 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:11 cka-02-worker2 systemd[1]: run-r69b0735e956d4a51bb464c6effa17ffb.scope: Deactivated successfully.
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.292780    1528 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.292832    1528 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.292850    1528 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.292862    1528 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.292891    1528 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.295384    1528 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.295407    1528 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.295425    1528 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.295436    1528 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.301703    1528 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: E0806 20:37:11.301905    1528 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.302086    1528 server.go:1181] "Started kubelet"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: E0806 20:37:11.295955    1528 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.304586    1528 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.309178    1528 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.314193    1528 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.314297    1528 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: I0806 20:37:11.314502    1528 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: E0806 20:37:11.316780    1528 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: E0806 20:37:11.318207    1528 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:11 cka-02-worker2 kubelet[1528]: E0806 20:37:11.318229    1528 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:11 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:11 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:12 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 58.
Aug 06 20:37:12 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:12 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:12 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.550536    1551 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.563534    1551 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.563556    1551 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.563791    1551 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.565061    1551 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: W0806 20:37:12.565616    1551 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.565705    1551 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: E0806 20:37:12.565757    1551 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:12 cka-02-worker2 systemd[1]: run-ra2791bea168440c4a02402d10cffbf6e.scope: Deactivated successfully.
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.591796    1551 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.591849    1551 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.591871    1551 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.591888    1551 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.591919    1551 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.599247    1551 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.599272    1551 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.599290    1551 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.599301    1551 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: E0806 20:37:12.599667    1551 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.599769    1551 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: E0806 20:37:12.599962    1551 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.600131    1551 server.go:1181] "Started kubelet"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.600681    1551 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.601361    1551 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.602776    1551 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.607503    1551 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: I0806 20:37:12.609629    1551 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: E0806 20:37:12.610158    1551 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: E0806 20:37:12.612045    1551 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:12 cka-02-worker2 kubelet[1551]: E0806 20:37:12.613346    1551 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:12 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:12 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:13 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 59.
Aug 06 20:37:13 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:13 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:13 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.768138    1574 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.781867    1574 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.781986    1574 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.782211    1574 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.783647    1574 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: W0806 20:37:13.784295    1574 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.784393    1574 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: E0806 20:37:13.784457    1574 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.788446    1574 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.788497    1574 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.788514    1574 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.788527    1574 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.788546    1574 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:13 cka-02-worker2 systemd[1]: run-r556aa32bf5c94d9a9eb0160ec36d5bfa.scope: Deactivated successfully.
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.792478    1574 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.792498    1574 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.792514    1574 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.792525    1574 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.793055    1574 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: E0806 20:37:13.793922    1574 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: E0806 20:37:13.793919    1574 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.794109    1574 server.go:1181] "Started kubelet"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.794188    1574 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.795408    1574 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.795631    1574 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.801959    1574 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: E0806 20:37:13.803618    1574 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: I0806 20:37:13.803637    1574 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: E0806 20:37:13.811212    1574 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: E0806 20:37:13.812398    1574 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:13 cka-02-worker2 kubelet[1574]: E0806 20:37:13.812426    1574 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:13 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:13 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:14 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 60.
Aug 06 20:37:14 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:14 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:14 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.007335    1596 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.021792    1596 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.021894    1596 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.022511    1596 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.024592    1596 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.025129    1596 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: W0806 20:37:15.025153    1596 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: E0806 20:37:15.025174    1596 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.029162    1596 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.029220    1596 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.029255    1596 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.029267    1596 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.029286    1596 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:15 cka-02-worker2 systemd[1]: run-r2ce508398db0411f9dcd0b44521bbd31.scope: Deactivated successfully.
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.032367    1596 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.032388    1596 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.032406    1596 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.032417    1596 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.033206    1596 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: E0806 20:37:15.034925    1596 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: E0806 20:37:15.034926    1596 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.035103    1596 server.go:1181] "Started kubelet"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.037233    1596 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.039494    1596 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.051374    1596 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.052401    1596 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: I0806 20:37:15.052597    1596 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: E0806 20:37:15.053770    1596 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: E0806 20:37:15.055266    1596 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:15 cka-02-worker2 kubelet[1596]: E0806 20:37:15.055294    1596 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:15 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:15 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:16 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 61.
Aug 06 20:37:16 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:16 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:16 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.267598    1619 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.282777    1619 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.282798    1619 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.283022    1619 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.284266    1619 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: W0806 20:37:16.284909    1619 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.285005    1619 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: E0806 20:37:16.285160    1619 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:16 cka-02-worker2 systemd[1]: run-rcd45218eecb247ca9637db78bc3d6dfc.scope: Deactivated successfully.
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.301114    1619 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.301177    1619 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.301201    1619 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.301213    1619 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.301238    1619 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.309676    1619 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.309730    1619 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.309750    1619 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.309761    1619 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: E0806 20:37:16.311107    1619 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.311830    1619 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: E0806 20:37:16.312052    1619 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.312299    1619 server.go:1181] "Started kubelet"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.316835    1619 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.317250    1619 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.317462    1619 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.318203    1619 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: I0806 20:37:16.318289    1619 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: E0806 20:37:16.326549    1619 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: E0806 20:37:16.327553    1619 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:16 cka-02-worker2 kubelet[1619]: E0806 20:37:16.327578    1619 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:16 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:16 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:17 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 62.
Aug 06 20:37:17 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:17 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:17 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.511491    1640 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.525017    1640 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.525045    1640 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.525337    1640 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.526764    1640 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: W0806 20:37:17.527714    1640 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.527979    1640 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: E0806 20:37:17.528030    1640 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:17 cka-02-worker2 systemd[1]: run-ra8b0a33e418e4f55b077c041cf142728.scope: Deactivated successfully.
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.543418    1640 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.543468    1640 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.543485    1640 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.543496    1640 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.543521    1640 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.547153    1640 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.547176    1640 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.547193    1640 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.547204    1640 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: E0806 20:37:17.548736    1640 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.549818    1640 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: E0806 20:37:17.549988    1640 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.550145    1640 server.go:1181] "Started kubelet"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.550722    1640 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.560003    1640 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.561832    1640 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.563365    1640 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: I0806 20:37:17.563532    1640 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: E0806 20:37:17.570605    1640 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: E0806 20:37:17.572603    1640 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:17 cka-02-worker2 kubelet[1640]: E0806 20:37:17.572651    1640 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:17 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:17 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:18 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 63.
Aug 06 20:37:18 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:18 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:18 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.766577    1664 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.775732    1664 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.775754    1664 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.776374    1664 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.778803    1664 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.779429    1664 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: W0806 20:37:18.779439    1664 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: E0806 20:37:18.779583    1664 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:18 cka-02-worker2 systemd[1]: run-raeb29441c955484db27bfb6b9e0a4974.scope: Deactivated successfully.
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.796601    1664 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.796653    1664 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.796670    1664 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.796681    1664 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.796700    1664 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.799681    1664 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.799703    1664 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.799722    1664 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.799734    1664 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.800802    1664 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: E0806 20:37:18.800991    1664 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.801126    1664 server.go:1181] "Started kubelet"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.801294    1664 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.805703    1664 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: E0806 20:37:18.807796    1664 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.809159    1664 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: I0806 20:37:18.816466    1664 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: E0806 20:37:18.816659    1664 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: E0806 20:37:18.819249    1664 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:18 cka-02-worker2 kubelet[1664]: E0806 20:37:18.819283    1664 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:18 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:18 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:19 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 64.
Aug 06 20:37:19 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:19 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:19 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.015450    1688 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.029998    1688 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.030622    1688 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.030858    1688 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.032065    1688 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.032612    1688 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: W0806 20:37:20.032626    1688 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: E0806 20:37:20.032667    1688 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:20 cka-02-worker2 systemd[1]: run-r9630098a5cd74e75b6a2f4e3dd308ad5.scope: Deactivated successfully.
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.050459    1688 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.050513    1688 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.050530    1688 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.050542    1688 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.050566    1688 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.052749    1688 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.052776    1688 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.052793    1688 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.052819    1688 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: E0806 20:37:20.053312    1688 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.054811    1688 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: E0806 20:37:20.055006    1688 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.055161    1688 server.go:1181] "Started kubelet"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.056857    1688 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.057667    1688 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.059627    1688 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.062712    1688 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: I0806 20:37:20.062795    1688 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: E0806 20:37:20.067545    1688 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: E0806 20:37:20.070437    1688 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:20 cka-02-worker2 kubelet[1688]: E0806 20:37:20.070462    1688 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:20 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:20 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:21 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 65.
Aug 06 20:37:21 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:21 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:21 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.266556    1710 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.278791    1710 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.278890    1710 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.279106    1710 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.280369    1710 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.280909    1710 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: W0806 20:37:21.280910    1710 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: E0806 20:37:21.280964    1710 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.284847    1710 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.284909    1710 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.284927    1710 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.284939    1710 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.284965    1710 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.288133    1710 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.288155    1710 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:21 cka-02-worker2 systemd[1]: run-r4cdd4b3638ef4f61a39dc271947e9d5d.scope: Deactivated successfully.
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.288173    1710 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.288185    1710 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.288668    1710 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: E0806 20:37:21.291954    1710 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: E0806 20:37:21.291961    1710 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.292177    1710 server.go:1181] "Started kubelet"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.292782    1710 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.293298    1710 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.293571    1710 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.297481    1710 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: I0806 20:37:21.297627    1710 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: E0806 20:37:21.299613    1710 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: E0806 20:37:21.301263    1710 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:21 cka-02-worker2 kubelet[1710]: E0806 20:37:21.301292    1710 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:21 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:21 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:22 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 66.
Aug 06 20:37:22 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:22 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:22 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.512791    1732 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.529523    1732 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.529548    1732 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.529835    1732 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.531890    1732 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: W0806 20:37:22.532504    1732 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.532699    1732 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: E0806 20:37:22.532732    1732 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.536609    1732 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.536659    1732 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.536680    1732 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.536691    1732 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.536715    1732 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:22 cka-02-worker2 systemd[1]: run-re489f67f74634041893491ce46d5bef2.scope: Deactivated successfully.
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.540192    1732 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.540214    1732 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.540231    1732 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.540243    1732 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: E0806 20:37:22.540833    1732 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.541172    1732 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: E0806 20:37:22.541324    1732 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.541511    1732 server.go:1181] "Started kubelet"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.542284    1732 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.544829    1732 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.545502    1732 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.548397    1732 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: I0806 20:37:22.548471    1732 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: E0806 20:37:22.552314    1732 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: E0806 20:37:22.559570    1732 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:22 cka-02-worker2 kubelet[1732]: E0806 20:37:22.559595    1732 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:22 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:22 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:23 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 67.
Aug 06 20:37:23 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:23 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:23 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.764915    1754 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.777703    1754 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.777803    1754 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.778123    1754 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.779352    1754 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: W0806 20:37:23.780020    1754 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.780115    1754 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: E0806 20:37:23.780219    1754 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.784525    1754 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.784575    1754 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.784599    1754 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.784610    1754 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.784635    1754 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:23 cka-02-worker2 systemd[1]: run-r11fbda115ffa4156b7c3d6cc2901c3ee.scope: Deactivated successfully.
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.788713    1754 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.788737    1754 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.788755    1754 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.788774    1754 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: E0806 20:37:23.789031    1754 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.789314    1754 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: E0806 20:37:23.789954    1754 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.790117    1754 server.go:1181] "Started kubelet"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.791223    1754 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.795584    1754 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.798749    1754 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: I0806 20:37:23.806328    1754 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: E0806 20:37:23.807272    1754 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: E0806 20:37:23.809058    1754 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:23 cka-02-worker2 kubelet[1754]: E0806 20:37:23.809196    1754 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:23 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:23 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:24 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 68.
Aug 06 20:37:24 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:24 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:24 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.005981    1777 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.020031    1777 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.020055    1777 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.020311    1777 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.021707    1777 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: W0806 20:37:25.022316    1777 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.022367    1777 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: E0806 20:37:25.022433    1777 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:25 cka-02-worker2 systemd[1]: run-r90203df7ff374e068f9c120561a53709.scope: Deactivated successfully.
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.038375    1777 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.038515    1777 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.038601    1777 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.038666    1777 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.038740    1777 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.043756    1777 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.043781    1777 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.043797    1777 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.043807    1777 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: E0806 20:37:25.044148    1777 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.045103    1777 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: E0806 20:37:25.045373    1777 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.045582    1777 server.go:1181] "Started kubelet"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.046663    1777 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.047265    1777 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.047293    1777 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.054119    1777 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: I0806 20:37:25.054288    1777 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: E0806 20:37:25.058823    1777 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: E0806 20:37:25.068465    1777 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:25 cka-02-worker2 kubelet[1777]: E0806 20:37:25.068501    1777 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:25 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:25 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:26 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 69.
Aug 06 20:37:26 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:26 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:26 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.261554    1807 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.278794    1807 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.278817    1807 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.279137    1807 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.280518    1807 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: W0806 20:37:26.281121    1807 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.281352    1807 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: E0806 20:37:26.281399    1807 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:26 cka-02-worker2 systemd[1]: run-r8961c3e2800d43c49957f8d3786e0378.scope: Deactivated successfully.
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.296902    1807 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.297065    1807 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.297164    1807 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.297240    1807 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.297326    1807 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.303609    1807 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.303630    1807 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.303648    1807 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.303659    1807 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: E0806 20:37:26.303764    1807 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.304077    1807 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: E0806 20:37:26.304249    1807 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.304922    1807 server.go:1181] "Started kubelet"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.305182    1807 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.306374    1807 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.306960    1807 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.309156    1807 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: I0806 20:37:26.309221    1807 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: E0806 20:37:26.311255    1807 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: E0806 20:37:26.315450    1807 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:26 cka-02-worker2 kubelet[1807]: E0806 20:37:26.315478    1807 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:26 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:26 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:27 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 70.
Aug 06 20:37:27 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:27 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:27 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.510494    1829 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.520001    1829 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.520025    1829 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.520398    1829 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.521574    1829 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: W0806 20:37:27.522470    1829 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.522543    1829 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: E0806 20:37:27.522619    1829 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.527012    1829 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.527069    1829 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.527086    1829 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.527098    1829 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.527117    1829 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:27 cka-02-worker2 systemd[1]: run-r2515800ce29c4f638770a655c3b89d52.scope: Deactivated successfully.
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.530719    1829 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.530742    1829 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.530759    1829 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.530770    1829 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.531367    1829 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: E0806 20:37:27.535931    1829 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.536108    1829 server.go:1181] "Started kubelet"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.537248    1829 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.537407    1829 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: E0806 20:37:27.537543    1829 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.547823    1829 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.552249    1829 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: E0806 20:37:27.553095    1829 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: I0806 20:37:27.553127    1829 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: E0806 20:37:27.556289    1829 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:27 cka-02-worker2 kubelet[1829]: E0806 20:37:27.557460    1829 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:27 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:27 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:28 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 71.
Aug 06 20:37:28 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:28 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:28 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.758987    1851 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.769779    1851 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.769802    1851 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.770023    1851 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.771255    1851 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: W0806 20:37:28.772427    1851 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.772506    1851 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: E0806 20:37:28.772568    1851 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.777075    1851 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.777128    1851 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.777146    1851 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.777157    1851 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.777176    1851 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:28 cka-02-worker2 systemd[1]: run-r44841906fc074b979d753039009a5c64.scope: Deactivated successfully.
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.780370    1851 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.780391    1851 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.780407    1851 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.780418    1851 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: E0806 20:37:28.783409    1851 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.784006    1851 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: E0806 20:37:28.784749    1851 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.785172    1851 server.go:1181] "Started kubelet"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.786019    1851 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.786922    1851 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.787006    1851 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.788151    1851 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: I0806 20:37:28.788326    1851 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: E0806 20:37:28.794579    1851 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: E0806 20:37:28.798842    1851 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:28 cka-02-worker2 kubelet[1851]: E0806 20:37:28.798868    1851 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:28 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:28 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:29 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 72.
Aug 06 20:37:29 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:29 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:29 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.012735    1874 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.023713    1874 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.023809    1874 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.023994    1874 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.025209    1874 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: W0806 20:37:30.025799    1874 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.025810    1874 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: E0806 20:37:30.025937    1874 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:30 cka-02-worker2 systemd[1]: run-rf85cd34e907c44c68e06a25f4eeb5d32.scope: Deactivated successfully.
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.042604    1874 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.042870    1874 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.043021    1874 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.043097    1874 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.043175    1874 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.046400    1874 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.046431    1874 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.046462    1874 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.046474    1874 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: E0806 20:37:30.046648    1874 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.053003    1874 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: E0806 20:37:30.053414    1874 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.054563    1874 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.054810    1874 server.go:1181] "Started kubelet"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.054929    1874 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.055567    1874 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: E0806 20:37:30.058075    1874 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.056788    1874 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: I0806 20:37:30.056801    1874 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: E0806 20:37:30.059168    1874 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:30 cka-02-worker2 kubelet[1874]: E0806 20:37:30.059273    1874 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:30 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:30 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:31 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 73.
Aug 06 20:37:31 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:31 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:31 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.266711    1897 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.281019    1897 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.281038    1897 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.281298    1897 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.282687    1897 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: W0806 20:37:31.283306    1897 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.283402    1897 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: E0806 20:37:31.283508    1897 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:31 cka-02-worker2 systemd[1]: run-rc04d1d52296e45b692860834d0027657.scope: Deactivated successfully.
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.298753    1897 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.298937    1897 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.299024    1897 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.299088    1897 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.299164    1897 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.304505    1897 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.304666    1897 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.304750    1897 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.305002    1897 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: E0806 20:37:31.304983    1897 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.306337    1897 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: E0806 20:37:31.306628    1897 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.306822    1897 server.go:1181] "Started kubelet"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.307369    1897 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.308025    1897 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.308180    1897 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.309025    1897 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: I0806 20:37:31.309182    1897 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: E0806 20:37:31.321092    1897 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: E0806 20:37:31.322248    1897 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:31 cka-02-worker2 kubelet[1897]: E0806 20:37:31.322396    1897 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:31 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:31 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:32 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 74.
Aug 06 20:37:32 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:32 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:32 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.516406    1920 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.532779    1920 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.532802    1920 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.533023    1920 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.534268    1920 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: W0806 20:37:32.534801    1920 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.534896    1920 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: E0806 20:37:32.534991    1920 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:32 cka-02-worker2 systemd[1]: run-r4f0679250ee24500884221da5e92ca99.scope: Deactivated successfully.
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.550930    1920 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.550987    1920 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.551005    1920 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.551017    1920 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.551036    1920 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.558379    1920 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.558523    1920 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.558550    1920 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.558562    1920 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: E0806 20:37:32.558798    1920 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.560439    1920 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: E0806 20:37:32.560683    1920 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.560839    1920 server.go:1181] "Started kubelet"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.561215    1920 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.561957    1920 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.565511    1920 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.567995    1920 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: I0806 20:37:32.568081    1920 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: E0806 20:37:32.573181    1920 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: E0806 20:37:32.574516    1920 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: E0806 20:37:32.577273    1920 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:32 cka-02-worker2 kubelet[1920]: E0806 20:37:32.577299    1920 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:32 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:32 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:33 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 75.
Aug 06 20:37:33 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:33 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:33 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.761285    1942 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.775113    1942 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.775133    1942 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.775344    1942 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.777936    1942 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.778538    1942 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: W0806 20:37:33.778548    1942 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: E0806 20:37:33.778576    1942 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:33 cka-02-worker2 systemd[1]: run-r5b772945c94140ffb0e46b0381c328a2.scope: Deactivated successfully.
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.795372    1942 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.795427    1942 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.795445    1942 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.795456    1942 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.795476    1942 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.797732    1942 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.797751    1942 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.797770    1942 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.797787    1942 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: E0806 20:37:33.797858    1942 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.798223    1942 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: E0806 20:37:33.798419    1942 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.798609    1942 server.go:1181] "Started kubelet"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.800335    1942 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.801338    1942 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.802072    1942 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.802185    1942 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: I0806 20:37:33.802693    1942 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: E0806 20:37:33.817330    1942 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: E0806 20:37:33.820579    1942 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:33 cka-02-worker2 kubelet[1942]: E0806 20:37:33.820607    1942 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:33 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:33 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:34 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 76.
Aug 06 20:37:34 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:34 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:34 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.018387    1964 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.030328    1964 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.030350    1964 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.031227    1964 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.032519    1964 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: W0806 20:37:35.033100    1964 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.033332    1964 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: E0806 20:37:35.033382    1964 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.037451    1964 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.037502    1964 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.037525    1964 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.037537    1964 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.037562    1964 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:35 cka-02-worker2 systemd[1]: run-r70913b2989f047048f30c30a59465906.scope: Deactivated successfully.
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.041312    1964 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.041334    1964 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.041350    1964 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.041361    1964 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.042188    1964 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: E0806 20:37:35.043932    1964 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: E0806 20:37:35.044000    1964 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.044178    1964 server.go:1181] "Started kubelet"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.044273    1964 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.044984    1964 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.046004    1964 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.055714    1964 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: I0806 20:37:35.055891    1964 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: E0806 20:37:35.063964    1964 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: E0806 20:37:35.070581    1964 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:35 cka-02-worker2 kubelet[1964]: E0806 20:37:35.070718    1964 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:35 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:35 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:36 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 77.
Aug 06 20:37:36 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:36 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:36 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.279613    1990 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.291095    1990 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.291125    1990 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.291337    1990 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.293164    1990 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: W0806 20:37:36.293925    1990 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.294080    1990 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: E0806 20:37:36.295912    1990 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:36 cka-02-worker2 systemd[1]: run-rc0d13c57c3704cd4b94d9289dc3818ec.scope: Deactivated successfully.
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.310654    1990 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.310708    1990 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.310728    1990 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.310740    1990 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.310760    1990 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.313391    1990 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.313412    1990 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.313430    1990 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.313442    1990 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: E0806 20:37:36.315590    1990 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.316755    1990 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: E0806 20:37:36.317102    1990 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.317259    1990 server.go:1181] "Started kubelet"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.317975    1990 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.318804    1990 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.321708    1990 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.324751    1990 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: I0806 20:37:36.328390    1990 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: E0806 20:37:36.334356    1990 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: E0806 20:37:36.344369    1990 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:36 cka-02-worker2 kubelet[1990]: E0806 20:37:36.344404    1990 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:36 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:36 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:37 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 78.
Aug 06 20:37:37 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:37 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:37 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.531873    2016 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.551018    2016 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.551128    2016 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.551406    2016 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.552604    2016 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: W0806 20:37:37.553212    2016 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.553568    2016 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: E0806 20:37:37.553599    2016 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:37 cka-02-worker2 systemd[1]: run-re556a1d1e9dc45d2aedffd4687c79aaf.scope: Deactivated successfully.
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.568850    2016 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.568943    2016 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.568967    2016 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.568979    2016 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.569019    2016 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.575539    2016 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.575653    2016 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.575730    2016 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.575792    2016 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: E0806 20:37:37.579874    2016 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.581515    2016 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: E0806 20:37:37.581820    2016 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.582100    2016 server.go:1181] "Started kubelet"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.582648    2016 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.583259    2016 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.583392    2016 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.583676    2016 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: E0806 20:37:37.585552    2016 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: I0806 20:37:37.586847    2016 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: E0806 20:37:37.588059    2016 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:37 cka-02-worker2 kubelet[2016]: E0806 20:37:37.588186    2016 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:37 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:37 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:38 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 79.
Aug 06 20:37:38 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:38 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:38 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.759223    2039 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.772900    2039 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.773110    2039 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.773381    2039 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.774531    2039 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: W0806 20:37:38.775075    2039 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.775114    2039 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: E0806 20:37:38.775261    2039 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.780331    2039 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.780385    2039 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.780403    2039 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.780414    2039 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.780433    2039 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:38 cka-02-worker2 systemd[1]: run-r097ac474f0314227b3d4ead0607387ce.scope: Deactivated successfully.
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.782580    2039 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.782598    2039 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.782637    2039 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.782654    2039 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: E0806 20:37:38.782917    2039 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.783092    2039 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: E0806 20:37:38.783326    2039 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.783468    2039 server.go:1181] "Started kubelet"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.784363    2039 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.788239    2039 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.789120    2039 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.792584    2039 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: I0806 20:37:38.795077    2039 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: E0806 20:37:38.800728    2039 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: E0806 20:37:38.802600    2039 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:38 cka-02-worker2 kubelet[2039]: E0806 20:37:38.802628    2039 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:38 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:38 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:39 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 80.
Aug 06 20:37:39 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:39 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:39 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.015240    2067 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.031228    2067 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.031334    2067 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.031603    2067 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.032957    2067 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.033658    2067 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: E0806 20:37:40.033704    2067 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: W0806 20:37:40.033663    2067 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:40 cka-02-worker2 systemd[1]: run-r5de3705f785d4e35a263a6145e7729e0.scope: Deactivated successfully.
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.055951    2067 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.056111    2067 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.056207    2067 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.056282    2067 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.056358    2067 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.068267    2067 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.068399    2067 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.068475    2067 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.068540    2067 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: E0806 20:37:40.068635    2067 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.069071    2067 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: E0806 20:37:40.069284    2067 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.069479    2067 server.go:1181] "Started kubelet"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.069702    2067 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.071331    2067 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.072665    2067 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.073140    2067 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: I0806 20:37:40.073309    2067 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: E0806 20:37:40.074962    2067 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: E0806 20:37:40.076355    2067 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:40 cka-02-worker2 kubelet[2067]: E0806 20:37:40.076827    2067 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:40 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:40 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:41 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 81.
Aug 06 20:37:41 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:41 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:41 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.264709    2088 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.279690    2088 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.279711    2088 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.280032    2088 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.281523    2088 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: W0806 20:37:41.282069    2088 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.282642    2088 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: E0806 20:37:41.282689    2088 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.285996    2088 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.286050    2088 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.286066    2088 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.286077    2088 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.286101    2088 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.289895    2088 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:41 cka-02-worker2 systemd[1]: run-r3854841c7f6d460c82ef6affab984d80.scope: Deactivated successfully.
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.289919    2088 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.290536    2088 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.290550    2088 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.291195    2088 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: E0806 20:37:41.293980    2088 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.294132    2088 server.go:1181] "Started kubelet"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.294405    2088 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.294946    2088 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: E0806 20:37:41.295086    2088 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.296991    2088 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.304576    2088 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: I0806 20:37:41.305194    2088 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: E0806 20:37:41.306647    2088 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: E0806 20:37:41.313817    2088 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:41 cka-02-worker2 kubelet[2088]: E0806 20:37:41.313850    2088 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:41 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:41 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:42 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 82.
Aug 06 20:37:42 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:42 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:42 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.512283    2113 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.529294    2113 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.529409    2113 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.529592    2113 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.530816    2113 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: W0806 20:37:42.531423    2113 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.531757    2113 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: E0806 20:37:42.531794    2113 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.535626    2113 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.535672    2113 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.535690    2113 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.535702    2113 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.535722    2113 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.538967    2113 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.538989    2113 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.539005    2113 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.539016    2113 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:42 cka-02-worker2 systemd[1]: run-rcebc0e5182e5406c83434fb2ee595f35.scope: Deactivated successfully.
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: E0806 20:37:42.541819    2113 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.547361    2113 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: E0806 20:37:42.547574    2113 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.547735    2113 server.go:1181] "Started kubelet"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.549683    2113 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.549994    2113 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.550390    2113 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.552280    2113 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: I0806 20:37:42.552585    2113 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: E0806 20:37:42.554046    2113 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: E0806 20:37:42.558105    2113 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:42 cka-02-worker2 kubelet[2113]: E0806 20:37:42.558134    2113 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:42 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:42 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:43 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 83.
Aug 06 20:37:43 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:43 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:43 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.760123    2136 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.772697    2136 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.772721    2136 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.772999    2136 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.774291    2136 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.774920    2136 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: W0806 20:37:43.774926    2136 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: E0806 20:37:43.774970    2136 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.778809    2136 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.778853    2136 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.778879    2136 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.778899    2136 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.778931    2136 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.781076    2136 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.781095    2136 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.781111    2136 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.781127    2136 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: E0806 20:37:43.781173    2136 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.781456    2136 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: E0806 20:37:43.781634    2136 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.781786    2136 server.go:1181] "Started kubelet"
Aug 06 20:37:43 cka-02-worker2 systemd[1]: run-rcc3b72bcbcb84b969f1522f7304a6a17.scope: Deactivated successfully.
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.783061    2136 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.783549    2136 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.783610    2136 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.790249    2136 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: I0806 20:37:43.795630    2136 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: E0806 20:37:43.796423    2136 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: E0806 20:37:43.797537    2136 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:43 cka-02-worker2 kubelet[2136]: E0806 20:37:43.797555    2136 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:43 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:43 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:44 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 84.
Aug 06 20:37:44 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:44 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:44 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.015926    2159 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.027170    2159 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.027205    2159 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.027478    2159 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.028795    2159 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: W0806 20:37:45.029476    2159 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.029565    2159 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: E0806 20:37:45.029606    2159 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:45 cka-02-worker2 systemd[1]: run-r1dccc0dadc9f40bfb5666bca31b7b42e.scope: Deactivated successfully.
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.045525    2159 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.045597    2159 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.045631    2159 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.045644    2159 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.045675    2159 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.048347    2159 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.048370    2159 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.048387    2159 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.048398    2159 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.049294    2159 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: E0806 20:37:45.049410    2159 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: E0806 20:37:45.049480    2159 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.049628    2159 server.go:1181] "Started kubelet"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.050018    2159 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.050564    2159 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.050569    2159 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.066481    2159 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: I0806 20:37:45.066555    2159 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: E0806 20:37:45.074079    2159 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: E0806 20:37:45.075942    2159 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:45 cka-02-worker2 kubelet[2159]: E0806 20:37:45.075968    2159 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:45 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:45 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:46 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 85.
Aug 06 20:37:46 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:46 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:46 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.257825    2184 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.273832    2184 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.273870    2184 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.274103    2184 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.275426    2184 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: W0806 20:37:46.276063    2184 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.276124    2184 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: E0806 20:37:46.276170    2184 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:46 cka-02-worker2 systemd[1]: run-r412bf0f025ca40a5add7a536426a34ea.scope: Deactivated successfully.
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.292896    2184 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.292955    2184 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.292974    2184 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.292985    2184 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.293007    2184 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.301063    2184 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.301087    2184 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.301103    2184 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.301114    2184 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: E0806 20:37:46.301371    2184 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.303625    2184 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: E0806 20:37:46.303955    2184 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.304165    2184 server.go:1181] "Started kubelet"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.304938    2184 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.305573    2184 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.305618    2184 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.311290    2184 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: I0806 20:37:46.311373    2184 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: E0806 20:37:46.314025    2184 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: E0806 20:37:46.315614    2184 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:46 cka-02-worker2 kubelet[2184]: E0806 20:37:46.315640    2184 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:46 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:46 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:47 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 86.
Aug 06 20:37:47 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:47 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:47 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.515804    2206 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.531073    2206 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.531097    2206 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.531407    2206 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.533376    2206 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: W0806 20:37:47.534371    2206 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.534396    2206 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: E0806 20:37:47.534441    2206 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:47 cka-02-worker2 systemd[1]: run-rf9329a55dafe4df782e55dd73e290a9a.scope: Deactivated successfully.
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.538330    2206 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.538401    2206 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.538419    2206 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.538431    2206 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.538451    2206 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.540910    2206 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.540930    2206 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.540947    2206 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.540967    2206 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.542074    2206 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: E0806 20:37:47.544944    2206 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: E0806 20:37:47.544978    2206 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.545206    2206 server.go:1181] "Started kubelet"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.545686    2206 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.546309    2206 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.548558    2206 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.550830    2206 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: I0806 20:37:47.550944    2206 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: E0806 20:37:47.567914    2206 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: E0806 20:37:47.573653    2206 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:47 cka-02-worker2 kubelet[2206]: E0806 20:37:47.573687    2206 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:47 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:47 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:48 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 87.
Aug 06 20:37:48 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:48 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:48 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.766736    2232 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.781869    2232 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.781918    2232 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.782175    2232 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.783387    2232 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: W0806 20:37:48.783958    2232 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.783969    2232 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: E0806 20:37:48.784012    2232 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:48 cka-02-worker2 systemd[1]: run-r2c96c6529bf84b7ab69338c28529e91c.scope: Deactivated successfully.
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.799466    2232 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.799514    2232 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.799535    2232 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.799546    2232 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.799573    2232 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.806119    2232 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.806142    2232 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.806159    2232 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.806171    2232 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.807000    2232 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: E0806 20:37:48.807225    2232 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: E0806 20:37:48.807658    2232 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.807919    2232 server.go:1181] "Started kubelet"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.808563    2232 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.809325    2232 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.810806    2232 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.813033    2232 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: I0806 20:37:48.813105    2232 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: E0806 20:37:48.814589    2232 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: E0806 20:37:48.816562    2232 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:48 cka-02-worker2 kubelet[2232]: E0806 20:37:48.816588    2232 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:48 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:48 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:49 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 88.
Aug 06 20:37:49 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:49 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:49 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.011344    2257 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.023852    2257 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.023871    2257 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.024133    2257 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.025395    2257 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: W0806 20:37:50.026012    2257 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.026214    2257 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: E0806 20:37:50.026264    2257 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:50 cka-02-worker2 systemd[1]: run-r5307214fda4b48f7877ecde25692521b.scope: Deactivated successfully.
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.042246    2257 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.042297    2257 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.042320    2257 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.042332    2257 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.042352    2257 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.053034    2257 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.053061    2257 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.053079    2257 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.053090    2257 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: E0806 20:37:50.054316    2257 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.054779    2257 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: E0806 20:37:50.055819    2257 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.056308    2257 server.go:1181] "Started kubelet"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.056374    2257 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.057093    2257 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.057986    2257 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.059580    2257 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: I0806 20:37:50.059682    2257 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: E0806 20:37:50.061316    2257 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: E0806 20:37:50.062862    2257 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:50 cka-02-worker2 kubelet[2257]: E0806 20:37:50.063011    2257 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:50 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:50 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:51 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 89.
Aug 06 20:37:51 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:51 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:51 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.275473    2279 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.286956    2279 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.287060    2279 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.287267    2279 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.288518    2279 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: W0806 20:37:51.289126    2279 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.289193    2279 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: E0806 20:37:51.289241    2279 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:51 cka-02-worker2 systemd[1]: run-r86844af2e679468896269243688b77c5.scope: Deactivated successfully.
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.304465    2279 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.304605    2279 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.304698    2279 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.304763    2279 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.304840    2279 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.310387    2279 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.310520    2279 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.310596    2279 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.310659    2279 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: E0806 20:37:51.311549    2279 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.312384    2279 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: E0806 20:37:51.316980    2279 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.318207    2279 server.go:1181] "Started kubelet"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.320986    2279 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.322134    2279 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.322536    2279 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.324305    2279 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: I0806 20:37:51.324402    2279 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: E0806 20:37:51.326514    2279 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: E0806 20:37:51.329578    2279 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:51 cka-02-worker2 kubelet[2279]: E0806 20:37:51.333963    2279 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:51 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:51 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:52 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 90.
Aug 06 20:37:52 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:52 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:52 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.511869    2302 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.524719    2302 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.524749    2302 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.525055    2302 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.526293    2302 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: W0806 20:37:52.526879    2302 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.527369    2302 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: E0806 20:37:52.527407    2302 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:52 cka-02-worker2 systemd[1]: run-rd8693c62b79645ab99a012722309f5a1.scope: Deactivated successfully.
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.543174    2302 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.543350    2302 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.543432    2302 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.543497    2302 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.543570    2302 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.546069    2302 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.546092    2302 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.546119    2302 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.546131    2302 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.547226    2302 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: E0806 20:37:52.547988    2302 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: E0806 20:37:52.549439    2302 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.551595    2302 server.go:1181] "Started kubelet"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.554310    2302 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.561750    2302 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.562673    2302 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.565233    2302 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: I0806 20:37:52.565435    2302 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: E0806 20:37:52.570661    2302 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: E0806 20:37:52.572400    2302 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:52 cka-02-worker2 kubelet[2302]: E0806 20:37:52.572437    2302 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:52 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:52 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:53 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 91.
Aug 06 20:37:53 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:53 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:53 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.771019    2327 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.780560    2327 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.780724    2327 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.781058    2327 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.782248    2327 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.782847    2327 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: E0806 20:37:53.782921    2327 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: W0806 20:37:53.782856    2327 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.786906    2327 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.786957    2327 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.786975    2327 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.786987    2327 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.787005    2327 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:53 cka-02-worker2 systemd[1]: run-r5a3b1c2fa64e4641a67190cbe35d41dc.scope: Deactivated successfully.
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.789934    2327 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.789957    2327 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.789976    2327 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.789991    2327 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: E0806 20:37:53.799109    2327 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.802425    2327 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: E0806 20:37:53.806052    2327 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.806305    2327 server.go:1181] "Started kubelet"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.807223    2327 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.807545    2327 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.807826    2327 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.808526    2327 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: I0806 20:37:53.808598    2327 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: E0806 20:37:53.814298    2327 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: E0806 20:37:53.816743    2327 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:53 cka-02-worker2 kubelet[2327]: E0806 20:37:53.816770    2327 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:53 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:53 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:54 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 92.
Aug 06 20:37:54 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:54 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:54 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.019274    2350 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.033028    2350 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.033050    2350 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.033227    2350 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.034384    2350 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: W0806 20:37:55.034925    2350 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.035014    2350 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: E0806 20:37:55.035106    2350 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.039404    2350 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.039520    2350 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.039566    2350 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.039591    2350 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.039619    2350 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:55 cka-02-worker2 systemd[1]: run-r04ff0815583b4db1be9abd62e253d7d0.scope: Deactivated successfully.
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.043459    2350 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.043479    2350 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.043498    2350 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.043514    2350 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.044205    2350 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: E0806 20:37:55.046928    2350 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.047107    2350 server.go:1181] "Started kubelet"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.048507    2350 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: E0806 20:37:55.048693    2350 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.050128    2350 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.050690    2350 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.052072    2350 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: I0806 20:37:55.052157    2350 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: E0806 20:37:55.059693    2350 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: E0806 20:37:55.060996    2350 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: E0806 20:37:55.064210    2350 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:55 cka-02-worker2 kubelet[2350]: E0806 20:37:55.064242    2350 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:55 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:55 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:56 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 93.
Aug 06 20:37:56 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:56 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:56 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.276329    2373 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.289716    2373 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.289817    2373 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.290101    2373 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.291250    2373 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: W0806 20:37:56.291799    2373 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.291818    2373 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: E0806 20:37:56.292101    2373 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.295950    2373 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.296001    2373 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.296018    2373 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.296029    2373 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.296047    2373 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.298999    2373 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.299020    2373 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.299036    2373 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.299047    2373 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: E0806 20:37:56.299134    2373 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:56 cka-02-worker2 systemd[1]: run-rc9bad7ac3a5648f1bdfc0b5ce6fa50be.scope: Deactivated successfully.
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.299853    2373 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: E0806 20:37:56.302952    2373 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.303171    2373 server.go:1181] "Started kubelet"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.303914    2373 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.305214    2373 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.305370    2373 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.305829    2373 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: I0806 20:37:56.315133    2373 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: E0806 20:37:56.319945    2373 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: E0806 20:37:56.325668    2373 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:56 cka-02-worker2 kubelet[2373]: E0806 20:37:56.325695    2373 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:56 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:56 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:57 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 94.
Aug 06 20:37:57 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:57 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:57 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.518365    2397 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.535870    2397 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.535894    2397 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.536092    2397 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.537334    2397 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: W0806 20:37:57.539008    2397 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.539032    2397 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: E0806 20:37:57.539074    2397 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.542782    2397 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.542839    2397 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.542861    2397 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.542872    2397 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.542913    2397 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.545092    2397 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.545111    2397 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.545141    2397 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.545162    2397 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: E0806 20:37:57.546503    2397 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:57 cka-02-worker2 systemd[1]: run-rf7f97462010e42fb8f060b67de392ea7.scope: Deactivated successfully.
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.547460    2397 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: E0806 20:37:57.547648    2397 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.547798    2397 server.go:1181] "Started kubelet"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.549076    2397 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.550741    2397 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.553813    2397 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: E0806 20:37:57.558903    2397 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: I0806 20:37:57.571236    2397 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: E0806 20:37:57.573497    2397 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:57 cka-02-worker2 kubelet[2397]: E0806 20:37:57.573524    2397 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:57 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:57 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:58 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 95.
Aug 06 20:37:58 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:58 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:58 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.770602    2422 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.782928    2422 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.783143    2422 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.783384    2422 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.784636    2422 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: W0806 20:37:58.785217    2422 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.785279    2422 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: E0806 20:37:58.785334    2422 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:58 cka-02-worker2 systemd[1]: run-r4d25d3bdba864ce9a303dfedff8d72b8.scope: Deactivated successfully.
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.811131    2422 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.811210    2422 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.811231    2422 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.811244    2422 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.811264    2422 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.817555    2422 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.817576    2422 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.817598    2422 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.817610    2422 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: E0806 20:37:58.817857    2422 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.818156    2422 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: E0806 20:37:58.818316    2422 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.818454    2422 server.go:1181] "Started kubelet"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.818855    2422 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.819244    2422 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.819479    2422 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.819820    2422 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: I0806 20:37:58.819879    2422 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: E0806 20:37:58.821332    2422 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: E0806 20:37:58.824302    2422 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:58 cka-02-worker2 kubelet[2422]: E0806 20:37:58.824466    2422 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:58 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:58 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:59 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 96.
Aug 06 20:37:59 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:59 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:59 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.015655    2446 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.030098    2446 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.030123    2446 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.030296    2446 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.032544    2446 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: W0806 20:38:00.033424    2446 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.033428    2446 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: E0806 20:38:00.033564    2446 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.037595    2446 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.037646    2446 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.037665    2446 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.037677    2446 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.037703    2446 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.040312    2446 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.040336    2446 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.040353    2446 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.040384    2446 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:00 cka-02-worker2 systemd[1]: run-rdf84ede4aa59489c9c03fc008fc72ba8.scope: Deactivated successfully.
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.041001    2446 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: E0806 20:38:00.044673    2446 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: E0806 20:38:00.044764    2446 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.044962    2446 server.go:1181] "Started kubelet"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.045894    2446 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.053770    2446 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.054168    2446 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.054302    2446 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: I0806 20:38:00.054428    2446 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: E0806 20:38:00.058789    2446 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: E0806 20:38:00.067349    2446 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:00 cka-02-worker2 kubelet[2446]: E0806 20:38:00.067375    2446 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:00 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:00 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:01 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 97.
Aug 06 20:38:01 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:01 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:01 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.269074    2469 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.280934    2469 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.280955    2469 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.281132    2469 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.282250    2469 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: W0806 20:38:01.282847    2469 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.282980    2469 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: E0806 20:38:01.283084    2469 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.287594    2469 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.287645    2469 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.287678    2469 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.287692    2469 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.287720    2469 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.289673    2469 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.289692    2469 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.289722    2469 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.289733    2469 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: E0806 20:38:01.289832    2469 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:01 cka-02-worker2 systemd[1]: run-rb79aa7c9801e4868b9e15da85c39444f.scope: Deactivated successfully.
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.290688    2469 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: E0806 20:38:01.295112    2469 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.295520    2469 server.go:1181] "Started kubelet"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.296978    2469 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.297829    2469 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.299021    2469 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.301259    2469 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: I0806 20:38:01.301356    2469 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: E0806 20:38:01.306469    2469 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: E0806 20:38:01.308680    2469 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:01 cka-02-worker2 kubelet[2469]: E0806 20:38:01.308706    2469 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:01 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:01 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:02 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 98.
Aug 06 20:38:02 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:02 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:02 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.510158    2491 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.525725    2491 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.525750    2491 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.526031    2491 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.527256    2491 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: W0806 20:38:02.527814    2491 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.528202    2491 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: E0806 20:38:02.528241    2491 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:02 cka-02-worker2 systemd[1]: run-ra7de1a9957db4d0eb43395f82f9d9b4d.scope: Deactivated successfully.
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.545009    2491 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.545063    2491 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.545082    2491 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.545094    2491 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.545114    2491 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.549573    2491 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.549596    2491 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.549615    2491 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.549627    2491 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: E0806 20:38:02.550002    2491 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.550131    2491 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: E0806 20:38:02.550363    2491 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.550581    2491 server.go:1181] "Started kubelet"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.551960    2491 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.552953    2491 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.559816    2491 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.560655    2491 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: I0806 20:38:02.566062    2491 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: E0806 20:38:02.572516    2491 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: E0806 20:38:02.573699    2491 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:02 cka-02-worker2 kubelet[2491]: E0806 20:38:02.573721    2491 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:02 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:02 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:03 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 99.
Aug 06 20:38:03 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:03 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:03 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.761359    2513 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.777829    2513 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.777857    2513 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.778153    2513 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.779404    2513 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: W0806 20:38:03.779961    2513 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.780133    2513 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: E0806 20:38:03.780173    2513 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.784117    2513 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.784169    2513 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.784195    2513 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.784206    2513 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.784233    2513 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:03 cka-02-worker2 systemd[1]: run-r37c47a8acd23411a878d7cdbf8b9b054.scope: Deactivated successfully.
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.787447    2513 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.787536    2513 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.787559    2513 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.787571    2513 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.788028    2513 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: E0806 20:38:03.791983    2513 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.792166    2513 server.go:1181] "Started kubelet"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: E0806 20:38:03.794076    2513 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.794386    2513 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.794700    2513 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.798713    2513 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.801288    2513 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: I0806 20:38:03.801400    2513 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: E0806 20:38:03.808572    2513 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: E0806 20:38:03.808776    2513 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: E0806 20:38:03.811211    2513 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:03 cka-02-worker2 kubelet[2513]: E0806 20:38:03.811431    2513 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:03 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:03 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:04 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 100.
Aug 06 20:38:04 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:04 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:04 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.011644    2539 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.024001    2539 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.024022    2539 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.024450    2539 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.026396    2539 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: W0806 20:38:05.027227    2539 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.027291    2539 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: E0806 20:38:05.027325    2539 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.031283    2539 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.031380    2539 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.031399    2539 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.031412    2539 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.031437    2539 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:05 cka-02-worker2 systemd[1]: run-r32a97b2b61194012a0e11461d6bf5621.scope: Deactivated successfully.
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.034539    2539 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.034638    2539 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.034664    2539 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.034677    2539 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.035550    2539 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: E0806 20:38:05.036978    2539 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: E0806 20:38:05.043280    2539 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.043561    2539 server.go:1181] "Started kubelet"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.046379    2539 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.047378    2539 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.054562    2539 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: E0806 20:38:05.057449    2539 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.060340    2539 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: I0806 20:38:05.060493    2539 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: E0806 20:38:05.061878    2539 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:05 cka-02-worker2 kubelet[2539]: E0806 20:38:05.062071    2539 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:05 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:05 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:06 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 101.
Aug 06 20:38:06 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:06 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:06 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.263634    2560 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.277719    2560 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.277741    2560 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.278020    2560 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.280180    2560 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.280713    2560 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: W0806 20:38:06.280722    2560 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: E0806 20:38:06.280754    2560 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.284575    2560 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.284622    2560 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.284639    2560 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.284650    2560 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.284669    2560 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.286612    2560 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.286631    2560 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.286667    2560 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.286679    2560 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: E0806 20:38:06.286789    2560 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.287458    2560 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: E0806 20:38:06.287650    2560 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.287877    2560 server.go:1181] "Started kubelet"
Aug 06 20:38:06 cka-02-worker2 systemd[1]: run-r32b76b34310f4009a9afaa9faa2618e6.scope: Deactivated successfully.
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.289315    2560 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.290347    2560 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.290429    2560 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.291789    2560 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: I0806 20:38:06.292681    2560 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: E0806 20:38:06.300665    2560 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: E0806 20:38:06.302071    2560 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:06 cka-02-worker2 kubelet[2560]: E0806 20:38:06.302096    2560 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:06 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:06 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:07 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 102.
Aug 06 20:38:07 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:07 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:07 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.513647    2583 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.525980    2583 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.526005    2583 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.526232    2583 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.527484    2583 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: W0806 20:38:07.528081    2583 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.528316    2583 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: E0806 20:38:07.528361    2583 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.532590    2583 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.532645    2583 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.532669    2583 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.532681    2583 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.532708    2583 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:07 cka-02-worker2 systemd[1]: run-rd1be24d7ac3542878f62daadf18bc885.scope: Deactivated successfully.
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.536651    2583 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.536672    2583 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.536696    2583 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.536707    2583 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: E0806 20:38:07.536810    2583 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.537237    2583 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: E0806 20:38:07.537435    2583 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.537650    2583 server.go:1181] "Started kubelet"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.538540    2583 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.539198    2583 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.539478    2583 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.540545    2583 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: I0806 20:38:07.540632    2583 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: E0806 20:38:07.544428    2583 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: E0806 20:38:07.554693    2583 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:07 cka-02-worker2 kubelet[2583]: E0806 20:38:07.554721    2583 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:07 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:07 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:08 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 103.
Aug 06 20:38:08 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:08 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:08 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.765004    2604 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.776969    2604 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.776987    2604 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.777189    2604 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.778448    2604 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: W0806 20:38:08.779015    2604 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.779152    2604 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: E0806 20:38:08.779271    2604 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.783112    2604 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.783158    2604 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.783174    2604 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.783185    2604 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.783203    2604 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.785625    2604 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.785651    2604 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.785668    2604 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.785680    2604 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:08 cka-02-worker2 systemd[1]: run-r88a2bee614044360993f835dd95132e9.scope: Deactivated successfully.
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: E0806 20:38:08.786104    2604 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.787036    2604 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: E0806 20:38:08.792079    2604 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.792399    2604 server.go:1181] "Started kubelet"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.793033    2604 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.793520    2604 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.798547    2604 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.798644    2604 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: I0806 20:38:08.798745    2604 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: E0806 20:38:08.800675    2604 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: E0806 20:38:08.803280    2604 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:08 cka-02-worker2 kubelet[2604]: E0806 20:38:08.803308    2604 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:08 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:08 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:09 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 104.
Aug 06 20:38:09 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:09 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:09 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.020442    2625 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.035868    2625 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.035894    2625 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.036089    2625 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.037290    2625 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.037853    2625 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: W0806 20:38:10.037878    2625 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: E0806 20:38:10.037966    2625 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:10 cka-02-worker2 systemd[1]: run-r43abf4f8d2664f058c9147c36d787c3e.scope: Deactivated successfully.
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.062266    2625 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.062327    2625 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.062344    2625 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.062355    2625 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.062373    2625 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.064411    2625 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.064430    2625 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.064447    2625 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.064458    2625 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: E0806 20:38:10.064571    2625 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.064768    2625 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: E0806 20:38:10.064946    2625 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.065157    2625 server.go:1181] "Started kubelet"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.065623    2625 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.066397    2625 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.066785    2625 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.068426    2625 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: I0806 20:38:10.068588    2625 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: E0806 20:38:10.074144    2625 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: E0806 20:38:10.079953    2625 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:10 cka-02-worker2 kubelet[2625]: E0806 20:38:10.079981    2625 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:10 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:10 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:11 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 105.
Aug 06 20:38:11 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:11 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:11 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.263668    2648 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.281790    2648 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.281818    2648 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.282073    2648 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.283307    2648 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: W0806 20:38:11.283873    2648 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.284238    2648 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: E0806 20:38:11.284304    2648 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:11 cka-02-worker2 systemd[1]: run-r72af3c7f9a094e8782bdea2a52dd9f5e.scope: Deactivated successfully.
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.299468    2648 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.299525    2648 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.299542    2648 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.299553    2648 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.299579    2648 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.308174    2648 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.308198    2648 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.308218    2648 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.308233    2648 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: E0806 20:38:11.309601    2648 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.310745    2648 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: E0806 20:38:11.310951    2648 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.311767    2648 server.go:1181] "Started kubelet"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.316394    2648 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.317080    2648 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.318765    2648 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: E0806 20:38:11.321306    2648 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.322100    2648 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: I0806 20:38:11.322270    2648 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: E0806 20:38:11.322859    2648 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:11 cka-02-worker2 kubelet[2648]: E0806 20:38:11.322967    2648 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:11 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:11 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:12 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 106.
Aug 06 20:38:12 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:12 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:12 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.506081    2671 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.521858    2671 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.521886    2671 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.522100    2671 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.524540    2671 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.525428    2671 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: W0806 20:38:12.525434    2671 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: E0806 20:38:12.525523    2671 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.529556    2671 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.529606    2671 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.529628    2671 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.529640    2671 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.529663    2671 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:12 cka-02-worker2 systemd[1]: run-r297d809546df40099f687d6a2fd53d78.scope: Deactivated successfully.
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.531675    2671 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.531696    2671 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.531713    2671 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.531736    2671 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.532351    2671 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: E0806 20:38:12.536921    2671 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: E0806 20:38:12.536965    2671 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.537132    2671 server.go:1181] "Started kubelet"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.538021    2671 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.538782    2671 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.538950    2671 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.547605    2671 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: I0806 20:38:12.548002    2671 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: E0806 20:38:12.552667    2671 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: E0806 20:38:12.564581    2671 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: E0806 20:38:12.565801    2671 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:12 cka-02-worker2 kubelet[2671]: E0806 20:38:12.565930    2671 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:12 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:12 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:13 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 107.
Aug 06 20:38:13 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:13 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:13 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.760621    2695 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.774321    2695 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.774420    2695 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.774622    2695 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.775739    2695 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: W0806 20:38:13.776537    2695 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.776699    2695 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: E0806 20:38:13.776734    2695 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.780959    2695 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.781003    2695 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.781022    2695 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.781033    2695 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.781053    2695 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:13 cka-02-worker2 systemd[1]: run-re787c1762cf94d5292ce9978a812411f.scope: Deactivated successfully.
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.785123    2695 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.785142    2695 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.785161    2695 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.785172    2695 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: E0806 20:38:13.785311    2695 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.786031    2695 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: E0806 20:38:13.786183    2695 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.786332    2695 server.go:1181] "Started kubelet"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.787049    2695 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.787648    2695 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.789951    2695 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.795382    2695 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: I0806 20:38:13.795636    2695 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: E0806 20:38:13.796701    2695 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: E0806 20:38:13.797739    2695 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:13 cka-02-worker2 kubelet[2695]: E0806 20:38:13.797760    2695 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:13 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:13 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:14 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 108.
Aug 06 20:38:14 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:14 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:14 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.019797    2715 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.035518    2715 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.035537    2715 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.035747    2715 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.037232    2715 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: W0806 20:38:15.037852    2715 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.037949    2715 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: E0806 20:38:15.038009    2715 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:15 cka-02-worker2 systemd[1]: run-rfe621b3c12ca4a4e8fdecd8e1c97d609.scope: Deactivated successfully.
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.053509    2715 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.053560    2715 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.053579    2715 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.053590    2715 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.053609    2715 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.061784    2715 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.061808    2715 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.061825    2715 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.061837    2715 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.063843    2715 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: E0806 20:38:15.065008    2715 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.065251    2715 server.go:1181] "Started kubelet"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: E0806 20:38:15.065467    2715 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.065830    2715 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.067410    2715 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.067426    2715 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.072324    2715 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: I0806 20:38:15.072931    2715 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: E0806 20:38:15.077414    2715 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: E0806 20:38:15.079902    2715 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:15 cka-02-worker2 kubelet[2715]: E0806 20:38:15.079928    2715 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:15 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:15 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:16 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 109.
Aug 06 20:38:16 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:16 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:16 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.256042    2738 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.272770    2738 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.272810    2738 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.273054    2738 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.274392    2738 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: W0806 20:38:16.275420    2738 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.276001    2738 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: E0806 20:38:16.276057    2738 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:16 cka-02-worker2 systemd[1]: run-rc2cba64e9265410ea84469ca167e6266.scope: Deactivated successfully.
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.294198    2738 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.294247    2738 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.294265    2738 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.294278    2738 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.294297    2738 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.298283    2738 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.298304    2738 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.298321    2738 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.298332    2738 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.298683    2738 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: E0806 20:38:16.301957    2738 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: E0806 20:38:16.301997    2738 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.302189    2738 server.go:1181] "Started kubelet"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.302252    2738 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.303104    2738 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.305064    2738 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.307259    2738 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: I0806 20:38:16.307343    2738 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: E0806 20:38:16.314391    2738 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: E0806 20:38:16.315713    2738 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:16 cka-02-worker2 kubelet[2738]: E0806 20:38:16.315735    2738 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:16 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:16 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:17 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 110.
Aug 06 20:38:17 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:17 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:17 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.506799    2764 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.517748    2764 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.517767    2764 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.518034    2764 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.519300    2764 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: W0806 20:38:17.519898    2764 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.519979    2764 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: E0806 20:38:17.520343    2764 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.525249    2764 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.525301    2764 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.525323    2764 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.525335    2764 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.525354    2764 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:17 cka-02-worker2 systemd[1]: run-rd357b72e425f44a383ab38b03cd1ae30.scope: Deactivated successfully.
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.527737    2764 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.527759    2764 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.527777    2764 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.527789    2764 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.528220    2764 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: E0806 20:38:17.531984    2764 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: E0806 20:38:17.532042    2764 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.532298    2764 server.go:1181] "Started kubelet"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.536702    2764 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.537855    2764 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.540415    2764 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.541784    2764 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: I0806 20:38:17.541938    2764 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: E0806 20:38:17.544259    2764 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: E0806 20:38:17.548993    2764 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:17 cka-02-worker2 kubelet[2764]: E0806 20:38:17.549114    2764 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:17 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:17 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:18 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 111.
Aug 06 20:38:18 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:18 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:18 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.759646    2790 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.772644    2790 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.772741    2790 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.772966    2790 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.774229    2790 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: W0806 20:38:18.775192    2790 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.775762    2790 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: E0806 20:38:18.775803    2790 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.779473    2790 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.779527    2790 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.779546    2790 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.779557    2790 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.779589    2790 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.781737    2790 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.781757    2790 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.781775    2790 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.781786    2790 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: E0806 20:38:18.781843    2790 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:18 cka-02-worker2 systemd[1]: run-r92eb080ba7f34322961bd1eb02a32142.scope: Deactivated successfully.
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.782727    2790 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: E0806 20:38:18.787552    2790 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.787731    2790 server.go:1181] "Started kubelet"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.791483    2790 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.792949    2790 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.792962    2790 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.793924    2790 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: I0806 20:38:18.793026    2790 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: E0806 20:38:18.807583    2790 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: E0806 20:38:18.807805    2790 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: E0806 20:38:18.808957    2790 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:18 cka-02-worker2 kubelet[2790]: E0806 20:38:18.808980    2790 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:18 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:18 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:19 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 112.
Aug 06 20:38:19 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:19 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:19 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.015322    2816 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.023755    2816 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.023779    2816 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.024047    2816 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.025297    2816 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: W0806 20:38:20.025941    2816 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.026361    2816 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: E0806 20:38:20.026453    2816 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:20 cka-02-worker2 systemd[1]: run-rda85733fb47444da8225e6bc3d5d0809.scope: Deactivated successfully.
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.043262    2816 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.043314    2816 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.043358    2816 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.043371    2816 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.043399    2816 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.053711    2816 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.053734    2816 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.053751    2816 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.053762    2816 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.054956    2816 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: E0806 20:38:20.055000    2816 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: E0806 20:38:20.055127    2816 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.055330    2816 server.go:1181] "Started kubelet"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.055515    2816 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.056123    2816 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.062661    2816 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.063123    2816 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: I0806 20:38:20.063206    2816 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: E0806 20:38:20.064422    2816 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: E0806 20:38:20.065359    2816 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:20 cka-02-worker2 kubelet[2816]: E0806 20:38:20.065380    2816 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:20 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:20 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:21 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 113.
Aug 06 20:38:21 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:21 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:21 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.260612    2836 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.272548    2836 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.272567    2836 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.272743    2836 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.273976    2836 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: W0806 20:38:21.274589    2836 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.274628    2836 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: E0806 20:38:21.274707    2836 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.279116    2836 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.279279    2836 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.279365    2836 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.279437    2836 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.279511    2836 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.283579    2836 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.283610    2836 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.283632    2836 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.283644    2836 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: E0806 20:38:21.284943    2836 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:21 cka-02-worker2 systemd[1]: run-r97a2e420c79347a2b2e8557372ca0750.scope: Deactivated successfully.
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.285189    2836 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: E0806 20:38:21.285423    2836 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.285673    2836 server.go:1181] "Started kubelet"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.287193    2836 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.287722    2836 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.293490    2836 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.294281    2836 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: I0806 20:38:21.294429    2836 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: E0806 20:38:21.294850    2836 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: E0806 20:38:21.297368    2836 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:21 cka-02-worker2 kubelet[2836]: E0806 20:38:21.297392    2836 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:21 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:21 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:22 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 114.
Aug 06 20:38:22 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:22 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:22 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.516410    2856 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.531670    2856 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.531693    2856 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.531928    2856 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.533175    2856 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.533925    2856 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: W0806 20:38:22.533932    2856 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: E0806 20:38:22.533985    2856 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:22 cka-02-worker2 systemd[1]: run-r3e6dda94a9874d06ac28e5c21d71a616.scope: Deactivated successfully.
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.557737    2856 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.557788    2856 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.557808    2856 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.557820    2856 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.557845    2856 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.562002    2856 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.562027    2856 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.562044    2856 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.562055    2856 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.562480    2856 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: E0806 20:38:22.566950    2856 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: E0806 20:38:22.566983    2856 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.567108    2856 server.go:1181] "Started kubelet"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.567275    2856 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.567808    2856 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.567847    2856 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.568918    2856 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: I0806 20:38:22.568978    2856 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: E0806 20:38:22.572085    2856 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: E0806 20:38:22.573609    2856 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:22 cka-02-worker2 kubelet[2856]: E0806 20:38:22.573966    2856 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:22 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:22 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:23 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 115.
Aug 06 20:38:23 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:23 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:23 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.756654    2879 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.768815    2879 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.768839    2879 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.769083    2879 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.770495    2879 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.771153    2879 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: E0806 20:38:23.771283    2879 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: W0806 20:38:23.771171    2879 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:23 cka-02-worker2 systemd[1]: run-rff488c6c9bcf4c27ac599c6388f956f1.scope: Deactivated successfully.
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.789674    2879 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.789730    2879 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.789750    2879 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.789762    2879 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.789782    2879 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.792157    2879 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.792289    2879 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.792357    2879 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.792435    2879 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.793330    2879 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: E0806 20:38:23.793588    2879 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: E0806 20:38:23.793588    2879 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.794625    2879 server.go:1181] "Started kubelet"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.796072    2879 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.797063    2879 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.798999    2879 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.800358    2879 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: E0806 20:38:23.813413    2879 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: I0806 20:38:23.815581    2879 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: E0806 20:38:23.816183    2879 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:23 cka-02-worker2 kubelet[2879]: E0806 20:38:23.816213    2879 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:23 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:23 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:24 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 116.
Aug 06 20:38:24 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:24 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:24 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.013343    2903 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.027775    2903 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.027799    2903 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.028033    2903 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.029301    2903 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: W0806 20:38:25.029905    2903 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.030083    2903 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: E0806 20:38:25.030113    2903 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:25 cka-02-worker2 systemd[1]: run-r6f812bb3353a4dca9a05dd11bce90f7f.scope: Deactivated successfully.
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.046065    2903 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.046130    2903 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.046149    2903 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.046160    2903 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.046187    2903 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.057258    2903 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.057280    2903 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.057296    2903 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.057310    2903 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.057833    2903 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: E0806 20:38:25.058255    2903 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: E0806 20:38:25.058364    2903 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.058583    2903 server.go:1181] "Started kubelet"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.059695    2903 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.061575    2903 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.062130    2903 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.062692    2903 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: I0806 20:38:25.064826    2903 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: E0806 20:38:25.066102    2903 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: E0806 20:38:25.077492    2903 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:25 cka-02-worker2 kubelet[2903]: E0806 20:38:25.077517    2903 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:25 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:25 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:26 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 117.
Aug 06 20:38:26 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:26 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:26 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.260348    2926 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.274229    2926 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.274255    2926 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.274440    2926 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.275620    2926 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.276152    2926 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: W0806 20:38:26.276167    2926 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: E0806 20:38:26.276310    2926 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.280442    2926 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.280497    2926 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.280527    2926 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.280538    2926 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.280565    2926 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:26 cka-02-worker2 systemd[1]: run-r4cbc4159ce4b4c89a7c06c95150d5599.scope: Deactivated successfully.
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.284211    2926 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.284232    2926 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.284251    2926 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.284261    2926 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.284700    2926 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: E0806 20:38:26.291775    2926 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.291976    2926 server.go:1181] "Started kubelet"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: E0806 20:38:26.292060    2926 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.292150    2926 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.292804    2926 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.293589    2926 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.293768    2926 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: I0806 20:38:26.293838    2926 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: E0806 20:38:26.308051    2926 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: E0806 20:38:26.317363    2926 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:26 cka-02-worker2 kubelet[2926]: E0806 20:38:26.317492    2926 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:26 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:26 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:27 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 118.
Aug 06 20:38:27 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:27 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:27 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.534210    2951 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.541683    2951 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.541710    2951 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.541974    2951 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.543238    2951 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: W0806 20:38:27.543851    2951 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.543911    2951 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: E0806 20:38:27.543950    2951 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.547753    2951 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.547804    2951 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.547823    2951 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.547834    2951 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.547852    2951 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.550845    2951 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.551058    2951 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:27 cka-02-worker2 systemd[1]: run-rc506c19f6fe34c8ca939168c9a51d2e5.scope: Deactivated successfully.
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.551213    2951 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.551263    2951 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: E0806 20:38:27.551347    2951 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.551985    2951 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: E0806 20:38:27.556422    2951 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.556640    2951 server.go:1181] "Started kubelet"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.557247    2951 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.557959    2951 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.560087    2951 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.561005    2951 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: I0806 20:38:27.561070    2951 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: E0806 20:38:27.563352    2951 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: E0806 20:38:27.565357    2951 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:27 cka-02-worker2 kubelet[2951]: E0806 20:38:27.565379    2951 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:27 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:27 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:28 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 119.
Aug 06 20:38:28 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:28 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:28 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.769646    2973 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.784668    2973 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.784691    2973 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.784921    2973 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.786155    2973 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: W0806 20:38:28.786721    2973 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.786977    2973 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: E0806 20:38:28.787022    2973 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:28 cka-02-worker2 systemd[1]: run-r65b1a2833d884aba86f0299048b26a5b.scope: Deactivated successfully.
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.807052    2973 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.807110    2973 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.808167    2973 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.808198    2973 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.808238    2973 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.812058    2973 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.812083    2973 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.812107    2973 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.812123    2973 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: E0806 20:38:28.813522    2973 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.815247    2973 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: E0806 20:38:28.815462    2973 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.815650    2973 server.go:1181] "Started kubelet"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.815757    2973 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.817096    2973 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.818776    2973 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.820746    2973 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: I0806 20:38:28.820850    2973 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: E0806 20:38:28.821971    2973 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: E0806 20:38:28.823072    2973 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:28 cka-02-worker2 kubelet[2973]: E0806 20:38:28.823094    2973 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:28 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:28 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:29 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 120.
Aug 06 20:38:29 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:29 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:29 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.012496    2996 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.023733    2996 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.023758    2996 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.024092    2996 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.025514    2996 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: W0806 20:38:30.026197    2996 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.026275    2996 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: E0806 20:38:30.026335    2996 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:30 cka-02-worker2 systemd[1]: run-r15ddc9644743473db543bfbbe9d88612.scope: Deactivated successfully.
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.050986    2996 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.051045    2996 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.051063    2996 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.051075    2996 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.051095    2996 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.053557    2996 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.053578    2996 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.053594    2996 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.053615    2996 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.054131    2996 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: E0806 20:38:30.054934    2996 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.055084    2996 server.go:1181] "Started kubelet"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: E0806 20:38:30.055474    2996 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.056150    2996 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.056812    2996 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.056165    2996 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.060149    2996 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: I0806 20:38:30.060321    2996 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: E0806 20:38:30.061382    2996 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: E0806 20:38:30.068741    2996 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:30 cka-02-worker2 kubelet[2996]: E0806 20:38:30.068946    2996 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:30 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:30 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:31 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 121.
Aug 06 20:38:31 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:31 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:31 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.259006    3018 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.282902    3018 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.282921    3018 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.283138    3018 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.284253    3018 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: W0806 20:38:31.284859    3018 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.284920    3018 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: E0806 20:38:31.284970    3018 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:31 cka-02-worker2 systemd[1]: run-rca17e55813fe4c008693dfd99dca8dff.scope: Deactivated successfully.
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.302332    3018 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.302388    3018 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.302417    3018 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.302428    3018 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.302456    3018 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.306547    3018 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.306570    3018 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.307901    3018 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.307923    3018 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: E0806 20:38:31.307991    3018 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.314180    3018 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: E0806 20:38:31.314466    3018 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.314725    3018 server.go:1181] "Started kubelet"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.315152    3018 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.316388    3018 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.317143    3018 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.321345    3018 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: I0806 20:38:31.321497    3018 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: E0806 20:38:31.322242    3018 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: E0806 20:38:31.325392    3018 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:31 cka-02-worker2 kubelet[3018]: E0806 20:38:31.325535    3018 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:31 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:31 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:32 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 122.
Aug 06 20:38:32 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:32 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:32 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.513876    3039 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.526736    3039 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.526760    3039 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.526997    3039 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.528219    3039 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: W0806 20:38:32.528824    3039 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.528851    3039 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: E0806 20:38:32.529001    3039 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.533218    3039 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.533269    3039 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.533284    3039 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.533296    3039 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.533314    3039 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.535380    3039 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.535399    3039 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.535415    3039 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.535426    3039 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: E0806 20:38:32.535699    3039 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.535770    3039 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: E0806 20:38:32.536024    3039 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.536157    3039 server.go:1181] "Started kubelet"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.536515    3039 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.536873    3039 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:32 cka-02-worker2 systemd[1]: run-r4b29405babfc494ba907f2f66f172fb0.scope: Deactivated successfully.
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.538172    3039 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.537186    3039 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: I0806 20:38:32.538909    3039 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: E0806 20:38:32.539601    3039 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: E0806 20:38:32.551008    3039 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:32 cka-02-worker2 kubelet[3039]: E0806 20:38:32.551037    3039 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:32 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:32 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:33 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 123.
Aug 06 20:38:33 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:33 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:33 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.764339    3061 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.776228    3061 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.776329    3061 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.776522    3061 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.777782    3061 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: W0806 20:38:33.778389    3061 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.778487    3061 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: E0806 20:38:33.778545    3061 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.782535    3061 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.782585    3061 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.782601    3061 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.782616    3061 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.782635    3061 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:33 cka-02-worker2 systemd[1]: run-r09d274854bb7418c8cf0b99f4ddad76f.scope: Deactivated successfully.
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.786158    3061 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.786182    3061 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.786200    3061 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.786211    3061 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.786764    3061 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: E0806 20:38:33.789939    3061 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: E0806 20:38:33.789964    3061 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.790133    3061 server.go:1181] "Started kubelet"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.791068    3061 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.792644    3061 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.792652    3061 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: E0806 20:38:33.795388    3061 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: I0806 20:38:33.795835    3061 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: E0806 20:38:33.796238    3061 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:33 cka-02-worker2 kubelet[3061]: E0806 20:38:33.796270    3061 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:33 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:33 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:34 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 124.
Aug 06 20:38:34 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:34 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:34 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.007332    3082 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.020034    3082 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.020061    3082 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.020749    3082 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.022600    3082 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.023229    3082 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: E0806 20:38:35.023256    3082 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: W0806 20:38:35.023320    3082 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.027149    3082 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.027190    3082 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.027206    3082 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.027217    3082 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.027235    3082 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:35 cka-02-worker2 systemd[1]: run-r6c0e5295da524de78575293614f891e5.scope: Deactivated successfully.
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.029732    3082 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.029753    3082 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.029785    3082 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.029804    3082 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.030184    3082 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: E0806 20:38:35.032925    3082 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.033250    3082 server.go:1181] "Started kubelet"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.035868    3082 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.036536    3082 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.037160    3082 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: E0806 20:38:35.039529    3082 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.049538    3082 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: I0806 20:38:35.049800    3082 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: E0806 20:38:35.052100    3082 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: E0806 20:38:35.053554    3082 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:35 cka-02-worker2 kubelet[3082]: E0806 20:38:35.053580    3082 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:35 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:35 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:36 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 125.
Aug 06 20:38:36 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:36 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:36 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.259464    3106 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.277870    3106 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.277901    3106 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.278165    3106 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.279349    3106 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: W0806 20:38:36.279911    3106 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.280056    3106 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: E0806 20:38:36.280100    3106 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:36 cka-02-worker2 systemd[1]: run-r70a2b692310b4b0a8fc2929c4dee80fd.scope: Deactivated successfully.
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.297982    3106 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.298121    3106 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.298161    3106 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.298175    3106 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.298191    3106 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.301525    3106 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.301588    3106 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.301606    3106 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.301623    3106 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: E0806 20:38:36.301705    3106 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.302350    3106 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: E0806 20:38:36.302594    3106 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.302796    3106 server.go:1181] "Started kubelet"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.303869    3106 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.305603    3106 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.305760    3106 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.306780    3106 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: I0806 20:38:36.307439    3106 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: E0806 20:38:36.315274    3106 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: E0806 20:38:36.331663    3106 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:36 cka-02-worker2 kubelet[3106]: E0806 20:38:36.332762    3106 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:36 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:36 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:37 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 126.
Aug 06 20:38:37 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:37 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:37 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.516997    3135 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.524306    3135 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.524328    3135 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.524544    3135 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.525802    3135 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.526372    3135 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: W0806 20:38:37.526375    3135 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: E0806 20:38:37.526434    3135 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.530568    3135 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.530617    3135 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.530657    3135 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.530668    3135 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.530690    3135 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:37 cka-02-worker2 systemd[1]: run-r069852f6e3844d1891f2fe394a8d8ad9.scope: Deactivated successfully.
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.535142    3135 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.535163    3135 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.535179    3135 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.535190    3135 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.535592    3135 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: E0806 20:38:37.538488    3135 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: E0806 20:38:37.538652    3135 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.538845    3135 server.go:1181] "Started kubelet"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.538924    3135 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.539686    3135 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.541852    3135 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.548283    3135 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: I0806 20:38:37.548372    3135 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: E0806 20:38:37.550361    3135 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: E0806 20:38:37.552399    3135 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:37 cka-02-worker2 kubelet[3135]: E0806 20:38:37.552426    3135 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:37 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:37 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:38 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 127.
Aug 06 20:38:38 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:38 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:38 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.762730    3155 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.777876    3155 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.777910    3155 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.778088    3155 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.779710    3155 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: W0806 20:38:38.780446    3155 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.780909    3155 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: E0806 20:38:38.780977    3155 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:38 cka-02-worker2 systemd[1]: run-rd2c6c2f55b7a4bbea3e7c8713fcaa15e.scope: Deactivated successfully.
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.795499    3155 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.795670    3155 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.795694    3155 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.795708    3155 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.795735    3155 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.798922    3155 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.798944    3155 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.798961    3155 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.798973    3155 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: E0806 20:38:38.800150    3155 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.800323    3155 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: E0806 20:38:38.800597    3155 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.800797    3155 server.go:1181] "Started kubelet"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.801693    3155 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.801993    3155 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.802316    3155 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.802941    3155 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: I0806 20:38:38.802996    3155 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: E0806 20:38:38.815326    3155 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: E0806 20:38:38.820361    3155 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:38 cka-02-worker2 kubelet[3155]: E0806 20:38:38.820389    3155 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:38 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:38 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:39 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 128.
Aug 06 20:38:39 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:39 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:39 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.018054    3182 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.036047    3182 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.036069    3182 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.036295    3182 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.037552    3182 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.038128    3182 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: W0806 20:38:40.038139    3182 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: E0806 20:38:40.038273    3182 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.042239    3182 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.042280    3182 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.042303    3182 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.042314    3182 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.042337    3182 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.045036    3182 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:40 cka-02-worker2 systemd[1]: run-r3b0f5b7e4777419687e74ee84a86f6e8.scope: Deactivated successfully.
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.045683    3182 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.045730    3182 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.045743    3182 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.046610    3182 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: E0806 20:38:40.049924    3182 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: E0806 20:38:40.050022    3182 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.050112    3182 server.go:1181] "Started kubelet"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.051685    3182 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.052311    3182 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.052626    3182 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.057254    3182 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: I0806 20:38:40.057586    3182 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: E0806 20:38:40.059796    3182 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: E0806 20:38:40.060620    3182 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:40 cka-02-worker2 kubelet[3182]: E0806 20:38:40.060643    3182 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:40 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:40 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:41 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 129.
Aug 06 20:38:41 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:41 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:41 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.264397    3202 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.271754    3202 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.271776    3202 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.272057    3202 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.273423    3202 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.274055    3202 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: W0806 20:38:41.274068    3202 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: E0806 20:38:41.274101    3202 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:41 cka-02-worker2 systemd[1]: run-r81fb9e63e8954da0b16bda4383418764.scope: Deactivated successfully.
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.293618    3202 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.293669    3202 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.293686    3202 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.293699    3202 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.293718    3202 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.296614    3202 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.296638    3202 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.296656    3202 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.296667    3202 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.297344    3202 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: E0806 20:38:41.298059    3202 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.298308    3202 server.go:1181] "Started kubelet"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: E0806 20:38:41.298604    3202 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.301489    3202 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.302157    3202 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.303452    3202 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.312524    3202 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: I0806 20:38:41.314599    3202 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: E0806 20:38:41.321155    3202 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: E0806 20:38:41.324166    3202 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:41 cka-02-worker2 kubelet[3202]: E0806 20:38:41.324195    3202 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:41 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:41 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:42 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 130.
Aug 06 20:38:42 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:42 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:42 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.515971    3229 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.528737    3229 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.528763    3229 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.529032    3229 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.530269    3229 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: W0806 20:38:42.530832    3229 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.530999    3229 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: E0806 20:38:42.531043    3229 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:42 cka-02-worker2 systemd[1]: run-re01393665b284a37b73e372e4653d741.scope: Deactivated successfully.
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.547765    3229 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.547819    3229 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.547860    3229 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.548066    3229 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.548092    3229 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.554188    3229 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.554207    3229 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.554336    3229 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.554352    3229 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: E0806 20:38:42.555250    3229 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.555414    3229 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: E0806 20:38:42.555637    3229 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.555886    3229 server.go:1181] "Started kubelet"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.559982    3229 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.560592    3229 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.556739    3229 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.561916    3229 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: I0806 20:38:42.562411    3229 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: E0806 20:38:42.563610    3229 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: E0806 20:38:42.574461    3229 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:42 cka-02-worker2 kubelet[3229]: E0806 20:38:42.574492    3229 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:42 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:42 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:43 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 131.
Aug 06 20:38:43 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:43 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:43 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.760785    3252 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.779776    3252 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.779798    3252 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.780020    3252 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.781145    3252 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.781774    3252 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: W0806 20:38:43.781786    3252 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: E0806 20:38:43.781860    3252 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:43 cka-02-worker2 systemd[1]: run-r2e96f1b131544eedaf0a0595292d23c5.scope: Deactivated successfully.
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.798577    3252 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.798633    3252 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.798650    3252 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.798662    3252 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.798682    3252 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.803296    3252 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.803320    3252 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.803349    3252 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.803361    3252 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: E0806 20:38:43.803515    3252 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.803954    3252 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: E0806 20:38:43.804235    3252 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.804535    3252 server.go:1181] "Started kubelet"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.805497    3252 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.805730    3252 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.806010    3252 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.806118    3252 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: I0806 20:38:43.806203    3252 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: E0806 20:38:43.809707    3252 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: E0806 20:38:43.812825    3252 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:43 cka-02-worker2 kubelet[3252]: E0806 20:38:43.812850    3252 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:43 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:43 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:44 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 132.
Aug 06 20:38:44 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:44 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:44 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.016373    3275 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.035058    3275 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.035078    3275 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.035325    3275 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.036576    3275 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: W0806 20:38:45.037195    3275 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.037259    3275 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: E0806 20:38:45.037320    3275 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.041037    3275 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.041085    3275 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.041101    3275 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.041113    3275 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.041131    3275 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:45 cka-02-worker2 systemd[1]: run-r886cd33cb5c84dcc9d940fc6478b3bda.scope: Deactivated successfully.
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.043469    3275 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.043656    3275 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.043685    3275 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.043698    3275 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.045146    3275 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: E0806 20:38:45.047023    3275 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: E0806 20:38:45.047758    3275 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.048094    3275 server.go:1181] "Started kubelet"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.049701    3275 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.051144    3275 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.051697    3275 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: E0806 20:38:45.062853    3275 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.064063    3275 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: I0806 20:38:45.065235    3275 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: E0806 20:38:45.065088    3275 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:45 cka-02-worker2 kubelet[3275]: E0806 20:38:45.065266    3275 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:45 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:45 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:46 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 133.
Aug 06 20:38:46 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:46 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:46 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.255419    3296 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.269923    3296 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.269943    3296 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.270177    3296 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.271357    3296 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: W0806 20:38:46.271962    3296 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.272070    3296 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: E0806 20:38:46.272105    3296 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.275820    3296 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.275873    3296 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.275912    3296 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.275925    3296 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.275951    3296 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.278873    3296 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.278909    3296 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.278927    3296 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.278938    3296 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:46 cka-02-worker2 systemd[1]: run-rd82f5c52ca1b47b8a9484910fcdf332e.scope: Deactivated successfully.
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: E0806 20:38:46.279211    3296 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.279446    3296 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: E0806 20:38:46.283942    3296 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.284107    3296 server.go:1181] "Started kubelet"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.284476    3296 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.285103    3296 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.286567    3296 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.290912    3296 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: I0806 20:38:46.291094    3296 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: E0806 20:38:46.291661    3296 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: E0806 20:38:46.293073    3296 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:46 cka-02-worker2 kubelet[3296]: E0806 20:38:46.293199    3296 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:46 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:46 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:47 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 134.
Aug 06 20:38:47 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:47 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:47 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.538686    3318 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.556253    3318 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.556273    3318 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.556518    3318 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.557832    3318 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: W0806 20:38:47.558425    3318 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.558586    3318 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: E0806 20:38:47.558780    3318 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.562294    3318 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.562338    3318 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.562356    3318 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.562367    3318 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.562385    3318 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.564353    3318 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.564371    3318 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.564388    3318 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.564399    3318 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: E0806 20:38:47.564580    3318 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.564797    3318 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: E0806 20:38:47.564972    3318 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:47 cka-02-worker2 systemd[1]: run-ra279d3b7f4dd4b3d8a78f919407d5511.scope: Deactivated successfully.
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.565110    3318 server.go:1181] "Started kubelet"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.567280    3318 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.568080    3318 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.568659    3318 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.575112    3318 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: I0806 20:38:47.578084    3318 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: E0806 20:38:47.586409    3318 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: E0806 20:38:47.604085    3318 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:47 cka-02-worker2 kubelet[3318]: E0806 20:38:47.604113    3318 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:47 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:47 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:48 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 135.
Aug 06 20:38:48 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:48 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:48 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.757645    3347 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.770871    3347 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.770978    3347 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.771241    3347 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.772464    3347 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: W0806 20:38:48.773130    3347 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.773134    3347 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: E0806 20:38:48.773404    3347 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.777475    3347 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.777528    3347 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.777546    3347 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.777557    3347 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.777583    3347 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:48 cka-02-worker2 systemd[1]: run-rab3f2ef22f504e6eabbda99e6664d789.scope: Deactivated successfully.
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.780730    3347 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.780748    3347 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.780765    3347 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.780776    3347 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.781228    3347 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: E0806 20:38:48.784963    3347 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: E0806 20:38:48.785033    3347 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.785196    3347 server.go:1181] "Started kubelet"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.785862    3347 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.786529    3347 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.787322    3347 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.789606    3347 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: I0806 20:38:48.789706    3347 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: E0806 20:38:48.791914    3347 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: E0806 20:38:48.794680    3347 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:48 cka-02-worker2 kubelet[3347]: E0806 20:38:48.795400    3347 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:48 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:48 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:49 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 136.
Aug 06 20:38:49 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:49 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:49 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.024476    3369 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.039428    3369 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.039448    3369 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.039760    3369 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.041273    3369 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.041871    3369 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: E0806 20:38:50.041958    3369 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: W0806 20:38:50.041903    3369 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:50 cka-02-worker2 systemd[1]: run-r264e7a78c38f496a853d73bf965bcefe.scope: Deactivated successfully.
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.066728    3369 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.066781    3369 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.066800    3369 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.066812    3369 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.066833    3369 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.070339    3369 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.070381    3369 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.070400    3369 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.070412    3369 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.071527    3369 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: E0806 20:38:50.071797    3369 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: E0806 20:38:50.071918    3369 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.073458    3369 server.go:1181] "Started kubelet"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.075096    3369 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.075431    3369 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.075994    3369 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.083509    3369 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: I0806 20:38:50.083853    3369 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: E0806 20:38:50.085024    3369 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: E0806 20:38:50.088162    3369 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:50 cka-02-worker2 kubelet[3369]: E0806 20:38:50.088196    3369 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:50 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:50 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:51 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 137.
Aug 06 20:38:51 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:51 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:51 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.262702    3393 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.276843    3393 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.276870    3393 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.277167    3393 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.278406    3393 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: W0806 20:38:51.279004    3393 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.279260    3393 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: E0806 20:38:51.279314    3393 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:51 cka-02-worker2 systemd[1]: run-rcec64e0a7a554ce7aba4ea1f4851550d.scope: Deactivated successfully.
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.294966    3393 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.295414    3393 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.295440    3393 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.295457    3393 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.295489    3393 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.304866    3393 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.304945    3393 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.304980    3393 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.304993    3393 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: E0806 20:38:51.305209    3393 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.306098    3393 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: E0806 20:38:51.306341    3393 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.306529    3393 server.go:1181] "Started kubelet"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.307267    3393 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.307320    3393 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.307909    3393 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.308594    3393 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: I0806 20:38:51.308728    3393 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: E0806 20:38:51.313693    3393 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: E0806 20:38:51.315053    3393 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:51 cka-02-worker2 kubelet[3393]: E0806 20:38:51.315169    3393 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:51 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:51 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:52 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 138.
Aug 06 20:38:52 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:52 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:52 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.512833    3415 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.528915    3415 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.529012    3415 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.529248    3415 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.530479    3415 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.532581    3415 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: W0806 20:38:52.532596    3415 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: E0806 20:38:52.532631    3415 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.536428    3415 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.536474    3415 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.536498    3415 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.536509    3415 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.536528    3415 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:52 cka-02-worker2 systemd[1]: run-raf9a0f95571a4a49b77a96e64231fa3f.scope: Deactivated successfully.
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.538743    3415 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.538761    3415 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.538792    3415 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.538803    3415 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.539226    3415 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: E0806 20:38:52.541969    3415 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: E0806 20:38:52.541970    3415 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.542140    3415 server.go:1181] "Started kubelet"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.542719    3415 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.543243    3415 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.543491    3415 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.552548    3415 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: I0806 20:38:52.552643    3415 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: E0806 20:38:52.555551    3415 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: E0806 20:38:52.558460    3415 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:52 cka-02-worker2 kubelet[3415]: E0806 20:38:52.558587    3415 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:52 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:52 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:53 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 139.
Aug 06 20:38:53 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:53 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:53 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.811251    3440 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.818935    3440 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.818975    3440 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.819158    3440 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.820356    3440 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: W0806 20:38:53.821312    3440 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.822234    3440 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: E0806 20:38:53.822482    3440 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.825748    3440 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.825796    3440 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.825818    3440 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.825830    3440 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.825849    3440 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:53 cka-02-worker2 systemd[1]: run-r0a92c0f07836476da711343ce27a2f43.scope: Deactivated successfully.
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.829911    3440 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.829937    3440 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.829955    3440 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.829967    3440 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.853286    3440 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: E0806 20:38:53.853584    3440 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.853725    3440 server.go:1181] "Started kubelet"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: E0806 20:38:53.853786    3440 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.854562    3440 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.854873    3440 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.856730    3440 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.869281    3440 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: I0806 20:38:53.869351    3440 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: E0806 20:38:53.870211    3440 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: E0806 20:38:53.874950    3440 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:53 cka-02-worker2 kubelet[3440]: E0806 20:38:53.874972    3440 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:53 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:53 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:54 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 140.
Aug 06 20:38:54 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:54 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:54 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.012814    3463 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.026469    3463 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.026496    3463 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.027023    3463 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.031384    3463 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: W0806 20:38:55.032085    3463 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.032320    3463 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: E0806 20:38:55.032422    3463 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:55 cka-02-worker2 systemd[1]: run-r066d01113bd749389a93086c5a8f4348.scope: Deactivated successfully.
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.037013    3463 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.037064    3463 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.037090    3463 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.037101    3463 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.037125    3463 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.039659    3463 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.039681    3463 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.039697    3463 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.039708    3463 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: E0806 20:38:55.039969    3463 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.040372    3463 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: E0806 20:38:55.040573    3463 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.040758    3463 server.go:1181] "Started kubelet"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.042432    3463 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.046338    3463 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.056806    3463 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.060358    3463 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: I0806 20:38:55.060431    3463 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: E0806 20:38:55.070122    3463 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: E0806 20:38:55.071340    3463 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:55 cka-02-worker2 kubelet[3463]: E0806 20:38:55.071366    3463 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:55 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:55 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:56 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 141.
Aug 06 20:38:56 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:56 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:56 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.283895    3483 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.308901    3483 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.309009    3483 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.309302    3483 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.310554    3483 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: W0806 20:38:56.311151    3483 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.311214    3483 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: E0806 20:38:56.311272    3483 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:56 cka-02-worker2 systemd[1]: run-r4e2b75faa2724d7cab4ebcccb98efd48.scope: Deactivated successfully.
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.326669    3483 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.326722    3483 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.326742    3483 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.326754    3483 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.326778    3483 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.329678    3483 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.329708    3483 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.329727    3483 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.329769    3483 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: E0806 20:38:56.330250    3483 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.331408    3483 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: E0806 20:38:56.331868    3483 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.332116    3483 server.go:1181] "Started kubelet"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.333732    3483 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.335578    3483 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.335990    3483 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.341967    3483 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: I0806 20:38:56.342610    3483 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: E0806 20:38:56.347591    3483 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: E0806 20:38:56.361975    3483 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:56 cka-02-worker2 kubelet[3483]: E0806 20:38:56.362012    3483 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:56 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:56 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:57 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 142.
Aug 06 20:38:57 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:57 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:57 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.517032    3514 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.534285    3514 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.534310    3514 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.534711    3514 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.536013    3514 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: W0806 20:38:57.536598    3514 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.536856    3514 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: E0806 20:38:57.536994    3514 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:57 cka-02-worker2 systemd[1]: run-r59bc7457bd574e069b1ed3d2c955bacb.scope: Deactivated successfully.
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.553112    3514 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.553169    3514 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.553191    3514 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.553203    3514 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.553266    3514 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.562960    3514 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.562985    3514 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.563009    3514 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.563021    3514 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: E0806 20:38:57.565258    3514 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.565426    3514 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: E0806 20:38:57.565584    3514 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.565736    3514 server.go:1181] "Started kubelet"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.571057    3514 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.571783    3514 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.571820    3514 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.583631    3514 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: I0806 20:38:57.583703    3514 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: E0806 20:38:57.591431    3514 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: E0806 20:38:57.596192    3514 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:57 cka-02-worker2 kubelet[3514]: E0806 20:38:57.596352    3514 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:57 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:57 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:58 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 143.
Aug 06 20:38:58 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:58 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:58 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.775745    3536 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.795438    3536 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.795463    3536 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.796704    3536 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.798016    3536 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: W0806 20:38:58.798625    3536 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.798800    3536 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: E0806 20:38:58.798927    3536 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:58 cka-02-worker2 systemd[1]: run-rc7e7228fe642487d9cc94cbd42df79ef.scope: Deactivated successfully.
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.825136    3536 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.825349    3536 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.825453    3536 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.825532    3536 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.825605    3536 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.832594    3536 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.832739    3536 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.832822    3536 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.832898    3536 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: E0806 20:38:58.834562    3536 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.841393    3536 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: E0806 20:38:58.841871    3536 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.842127    3536 server.go:1181] "Started kubelet"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.843175    3536 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.843948    3536 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.845473    3536 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.846757    3536 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: I0806 20:38:58.847076    3536 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: E0806 20:38:58.851152    3536 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: E0806 20:38:58.853657    3536 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:58 cka-02-worker2 kubelet[3536]: E0806 20:38:58.853680    3536 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:58 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:58 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:59 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 144.
Aug 06 20:38:59 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:59 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:59 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.014009    3557 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.026685    3557 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.026712    3557 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.026946    3557 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.028243    3557 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: W0806 20:39:00.028842    3557 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.029468    3557 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: E0806 20:39:00.029515    3557 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:00 cka-02-worker2 systemd[1]: run-r233b283e69da4509a2a5b4ddd723fa22.scope: Deactivated successfully.
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.047928    3557 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.047978    3557 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.047996    3557 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.048007    3557 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.048031    3557 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.050746    3557 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.050768    3557 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.050805    3557 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.050817    3557 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.053240    3557 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: E0806 20:39:00.053474    3557 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: E0806 20:39:00.053608    3557 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.053688    3557 server.go:1181] "Started kubelet"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.055532    3557 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.058300    3557 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.058663    3557 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.059325    3557 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: I0806 20:39:00.059397    3557 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: E0806 20:39:00.062388    3557 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: E0806 20:39:00.063727    3557 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:00 cka-02-worker2 kubelet[3557]: E0806 20:39:00.063837    3557 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:00 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:00 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:01 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 145.
Aug 06 20:39:01 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:01 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:01 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.265013    3579 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.281861    3579 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.281890    3579 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.282145    3579 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.283337    3579 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.283875    3579 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: W0806 20:39:01.283906    3579 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: E0806 20:39:01.283927    3579 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:01 cka-02-worker2 systemd[1]: run-ra73b19491b394e9da08bb002c68d8e97.scope: Deactivated successfully.
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.304462    3579 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.304521    3579 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.304549    3579 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.304562    3579 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.304589    3579 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.309409    3579 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.309429    3579 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.309446    3579 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.309458    3579 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: E0806 20:39:01.309509    3579 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.310313    3579 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: E0806 20:39:01.310479    3579 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.310616    3579 server.go:1181] "Started kubelet"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.311000    3579 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.311327    3579 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.311442    3579 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.311495    3579 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: I0806 20:39:01.311854    3579 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: E0806 20:39:01.320101    3579 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: E0806 20:39:01.323777    3579 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:01 cka-02-worker2 kubelet[3579]: E0806 20:39:01.323805    3579 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:01 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:01 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:02 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 146.
Aug 06 20:39:02 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:02 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:02 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.511712    3603 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.527723    3603 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.527821    3603 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.528072    3603 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.529261    3603 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.529824    3603 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: E0806 20:39:02.529884    3603 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: W0806 20:39:02.529827    3603 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.534014    3603 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.534063    3603 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.534093    3603 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.534104    3603 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.534131    3603 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:02 cka-02-worker2 systemd[1]: run-r57cf7a54b6094b618df49b51befdf9c7.scope: Deactivated successfully.
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.537241    3603 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.537261    3603 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.537278    3603 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.537289    3603 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.537631    3603 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: E0806 20:39:02.541939    3603 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.542146    3603 server.go:1181] "Started kubelet"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.542220    3603 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.542948    3603 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.543515    3603 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.543638    3603 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: I0806 20:39:02.543700    3603 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: E0806 20:39:02.548393    3603 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: E0806 20:39:02.550197    3603 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:02 cka-02-worker2 kubelet[3603]: E0806 20:39:02.550223    3603 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:02 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:02 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:03 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 147.
Aug 06 20:39:03 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:03 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:03 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.767107    3623 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.779766    3623 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.779786    3623 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.780076    3623 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.781551    3623 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: W0806 20:39:03.782233    3623 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.782669    3623 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: E0806 20:39:03.782981    3623 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.786687    3623 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.786734    3623 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.786752    3623 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.786763    3623 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.786780    3623 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.788976    3623 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.788996    3623 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.789014    3623 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.789025    3623 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:03 cka-02-worker2 systemd[1]: run-rfbc9dc6b8c3a449e87a791e7026a41d1.scope: Deactivated successfully.
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.789503    3623 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: E0806 20:39:03.794944    3623 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: E0806 20:39:03.800605    3623 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.800864    3623 server.go:1181] "Started kubelet"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.802771    3623 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.803150    3623 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.804170    3623 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.805383    3623 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: I0806 20:39:03.810429    3623 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: E0806 20:39:03.815730    3623 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: E0806 20:39:03.817027    3623 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: E0806 20:39:03.819319    3623 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:03 cka-02-worker2 kubelet[3623]: E0806 20:39:03.819348    3623 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:03 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:03 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:04 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 148.
Aug 06 20:39:04 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:04 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:04 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.017983    3647 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.032057    3647 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.032079    3647 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.032280    3647 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.033509    3647 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: W0806 20:39:05.034542    3647 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.035965    3647 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: E0806 20:39:05.036006    3647 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:05 cka-02-worker2 systemd[1]: run-r49ce149691154f1a8742f195d491f634.scope: Deactivated successfully.
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.058210    3647 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.058267    3647 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.058288    3647 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.058300    3647 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.058320    3647 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.063935    3647 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.064110    3647 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.064211    3647 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.064285    3647 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: E0806 20:39:05.064706    3647 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.065445    3647 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: E0806 20:39:05.068840    3647 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.071596    3647 server.go:1181] "Started kubelet"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.072266    3647 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.075982    3647 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.078440    3647 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.079335    3647 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: I0806 20:39:05.079691    3647 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: E0806 20:39:05.086055    3647 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: E0806 20:39:05.095110    3647 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:05 cka-02-worker2 kubelet[3647]: E0806 20:39:05.095722    3647 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:05 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:05 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:06 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 149.
Aug 06 20:39:06 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:06 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:06 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.261838    3674 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.275787    3674 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.275817    3674 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.276407    3674 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.278077    3674 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.278912    3674 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: W0806 20:39:06.278928    3674 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: E0806 20:39:06.278956    3674 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.282948    3674 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.282996    3674 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.283015    3674 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.283027    3674 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.283045    3674 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.284992    3674 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.285014    3674 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.285030    3674 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.285041    3674 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: E0806 20:39:06.285195    3674 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:06 cka-02-worker2 systemd[1]: run-rc9f0e2a74c9d454ba8092bab9ffe64af.scope: Deactivated successfully.
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.285754    3674 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: E0806 20:39:06.288920    3674 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.289149    3674 server.go:1181] "Started kubelet"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.290435    3674 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.291290    3674 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.291503    3674 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: E0806 20:39:06.298202    3674 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.298519    3674 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: I0806 20:39:06.299834    3674 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: E0806 20:39:06.305957    3674 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:06 cka-02-worker2 kubelet[3674]: E0806 20:39:06.305985    3674 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:06 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:06 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:07 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 150.
Aug 06 20:39:07 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:07 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:07 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.515986    3695 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.527843    3695 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.527868    3695 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.528105    3695 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.529302    3695 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: W0806 20:39:07.529837    3695 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.529917    3695 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: E0806 20:39:07.529965    3695 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.534081    3695 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.534139    3695 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.534162    3695 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.534182    3695 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.534206    3695 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.538006    3695 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.538029    3695 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.538046    3695 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.538057    3695 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:07 cka-02-worker2 systemd[1]: run-ra7b69f97d79f410c91303245a05962c4.scope: Deactivated successfully.
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.538678    3695 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: E0806 20:39:07.542561    3695 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: E0806 20:39:07.547919    3695 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.548098    3695 server.go:1181] "Started kubelet"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.551634    3695 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.556592    3695 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.560792    3695 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.558310    3695 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: I0806 20:39:07.558322    3695 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: E0806 20:39:07.564538    3695 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: E0806 20:39:07.568003    3695 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:07 cka-02-worker2 kubelet[3695]: E0806 20:39:07.568130    3695 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:07 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:07 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:08 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 151.
Aug 06 20:39:08 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:08 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:08 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.768475    3716 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.782806    3716 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.782830    3716 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.783136    3716 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.784486    3716 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: W0806 20:39:08.786150    3716 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.786265    3716 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: E0806 20:39:08.786369    3716 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.790765    3716 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.790819    3716 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.790838    3716 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.790850    3716 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.790868    3716 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:08 cka-02-worker2 systemd[1]: run-r9ebbfc7d0c0f4c1d8a26815f9f5d2ff6.scope: Deactivated successfully.
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.793811    3716 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.793833    3716 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.793867    3716 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.793886    3716 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.794289    3716 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: E0806 20:39:08.797922    3716 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: E0806 20:39:08.798221    3716 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.798490    3716 server.go:1181] "Started kubelet"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.798638    3716 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.799799    3716 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.801622    3716 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.808830    3716 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: I0806 20:39:08.809066    3716 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: E0806 20:39:08.819293    3716 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: E0806 20:39:08.821037    3716 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:08 cka-02-worker2 kubelet[3716]: E0806 20:39:08.821184    3716 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:08 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:08 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:09 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 152.
Aug 06 20:39:09 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:09 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:09 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.016097    3740 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.030948    3740 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.030969    3740 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.031196    3740 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.032528    3740 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: W0806 20:39:10.033106    3740 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.033175    3740 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: E0806 20:39:10.033226    3740 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:10 cka-02-worker2 systemd[1]: run-r542b09c500d94cd48d04f1ff97af00cc.scope: Deactivated successfully.
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.048349    3740 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.048496    3740 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.048585    3740 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.048650    3740 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.048723    3740 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.057633    3740 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.057755    3740 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.057838    3740 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.057856    3740 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.059488    3740 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: E0806 20:39:10.059703    3740 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: E0806 20:39:10.060378    3740 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.063438    3740 server.go:1181] "Started kubelet"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.064832    3740 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.065018    3740 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.065648    3740 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.068732    3740 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: I0806 20:39:10.068809    3740 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: E0806 20:39:10.072365    3740 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: E0806 20:39:10.073828    3740 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:10 cka-02-worker2 kubelet[3740]: E0806 20:39:10.073966    3740 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:10 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:10 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:11 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 153.
Aug 06 20:39:11 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:11 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:11 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.263288    3762 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.274754    3762 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.274776    3762 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.275038    3762 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.276284    3762 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.276908    3762 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: W0806 20:39:11.276953    3762 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: E0806 20:39:11.276959    3762 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:11 cka-02-worker2 systemd[1]: run-rbeefb6dc4bc440d98659dd0a60f886fa.scope: Deactivated successfully.
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.292622    3762 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.292815    3762 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.292919    3762 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.292984    3762 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.293061    3762 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.302226    3762 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.302416    3762 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.302507    3762 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.302585    3762 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: E0806 20:39:11.303486    3762 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.305090    3762 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: E0806 20:39:11.305284    3762 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.305468    3762 server.go:1181] "Started kubelet"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.306187    3762 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.306795    3762 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.307157    3762 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.307361    3762 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: I0806 20:39:11.307741    3762 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: E0806 20:39:11.310185    3762 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: E0806 20:39:11.318719    3762 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:11 cka-02-worker2 kubelet[3762]: E0806 20:39:11.318759    3762 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:11 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:11 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:12 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 154.
Aug 06 20:39:12 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:12 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:12 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.522051    3788 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.535835    3788 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.535852    3788 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.536077    3788 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.537346    3788 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: W0806 20:39:12.537921    3788 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.538102    3788 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: E0806 20:39:12.538150    3788 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:12 cka-02-worker2 systemd[1]: run-r3e12f814217b4e9d8a2f0a2da330df69.scope: Deactivated successfully.
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.553634    3788 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.553684    3788 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.553700    3788 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.553711    3788 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.553730    3788 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.557367    3788 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.557392    3788 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.557424    3788 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.557440    3788 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.558130    3788 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: E0806 20:39:12.558508    3788 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.558776    3788 server.go:1181] "Started kubelet"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: E0806 20:39:12.559156    3788 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.559467    3788 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.560187    3788 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.567637    3788 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.573180    3788 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: I0806 20:39:12.573243    3788 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: E0806 20:39:12.575539    3788 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: E0806 20:39:12.576877    3788 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:12 cka-02-worker2 kubelet[3788]: E0806 20:39:12.576974    3788 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:12 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:12 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:13 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 155.
Aug 06 20:39:13 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:13 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:13 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.764065    3809 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.775675    3809 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.775698    3809 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.775926    3809 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.777321    3809 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.777905    3809 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: W0806 20:39:13.777923    3809 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: E0806 20:39:13.777955    3809 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:13 cka-02-worker2 systemd[1]: run-r31081067a9554740bb08db076a0ffcab.scope: Deactivated successfully.
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.795266    3809 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.795326    3809 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.795348    3809 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.795360    3809 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.795379    3809 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.798689    3809 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.798721    3809 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.798739    3809 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.798818    3809 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.800060    3809 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: E0806 20:39:13.800224    3809 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.800358    3809 server.go:1181] "Started kubelet"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.802213    3809 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: E0806 20:39:13.802608    3809 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.805432    3809 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.806620    3809 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.807948    3809 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: I0806 20:39:13.808126    3809 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: E0806 20:39:13.813913    3809 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: E0806 20:39:13.821618    3809 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:13 cka-02-worker2 kubelet[3809]: E0806 20:39:13.821645    3809 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:13 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:13 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:14 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 156.
Aug 06 20:39:14 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:14 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:14 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.016616    3835 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.027099    3835 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.027124    3835 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.027342    3835 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.028568    3835 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: W0806 20:39:15.029150    3835 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.029262    3835 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: E0806 20:39:15.029304    3835 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.033265    3835 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.033316    3835 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.033334    3835 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.033347    3835 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.033366    3835 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:15 cka-02-worker2 systemd[1]: run-r6a8d18faad7c4ab68a8db0e3441803b5.scope: Deactivated successfully.
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.036980    3835 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.037004    3835 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.037022    3835 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.037033    3835 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: E0806 20:39:15.037208    3835 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.038675    3835 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: E0806 20:39:15.038932    3835 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.039163    3835 server.go:1181] "Started kubelet"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.040441    3835 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.042225    3835 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.043674    3835 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.047710    3835 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: I0806 20:39:15.048872    3835 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: E0806 20:39:15.049558    3835 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: E0806 20:39:15.052052    3835 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:15 cka-02-worker2 kubelet[3835]: E0806 20:39:15.052076    3835 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:15 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:15 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:16 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 157.
Aug 06 20:39:16 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:16 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:16 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.263051    3857 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.279798    3857 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.279822    3857 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.280072    3857 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.281326    3857 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: W0806 20:39:16.281872    3857 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.281995    3857 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: E0806 20:39:16.282054    3857 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:16 cka-02-worker2 systemd[1]: run-race4904dbfe1435f8498d71f7abf9a93.scope: Deactivated successfully.
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.309370    3857 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.309440    3857 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.309458    3857 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.309480    3857 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.309501    3857 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.313111    3857 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.313135    3857 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.313156    3857 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.313167    3857 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.313536    3857 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: E0806 20:39:16.315941    3857 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: E0806 20:39:16.315959    3857 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.316099    3857 server.go:1181] "Started kubelet"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.316861    3857 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.317276    3857 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.317940    3857 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.318470    3857 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: I0806 20:39:16.318553    3857 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: E0806 20:39:16.320018    3857 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: E0806 20:39:16.326002    3857 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:16 cka-02-worker2 kubelet[3857]: E0806 20:39:16.326027    3857 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:16 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:16 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:17 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 158.
Aug 06 20:39:17 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:17 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:17 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.515384    3879 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.526815    3879 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.526843    3879 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.527088    3879 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.528328    3879 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: W0806 20:39:17.528954    3879 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.528959    3879 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: E0806 20:39:17.529028    3879 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:17 cka-02-worker2 systemd[1]: run-rd6d34499b13d47e6a057cdd5396dc818.scope: Deactivated successfully.
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.547631    3879 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.547843    3879 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.547951    3879 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.548128    3879 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.548161    3879 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.550728    3879 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.551432    3879 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.551532    3879 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.562739    3879 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: E0806 20:39:17.551693    3879 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.569648    3879 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: E0806 20:39:17.569993    3879 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.570215    3879 server.go:1181] "Started kubelet"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.570611    3879 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.571305    3879 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.576665    3879 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.580555    3879 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: I0806 20:39:17.580650    3879 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: E0806 20:39:17.582729    3879 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: E0806 20:39:17.585204    3879 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:17 cka-02-worker2 kubelet[3879]: E0806 20:39:17.585235    3879 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:17 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:17 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:18 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 159.
Aug 06 20:39:18 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:18 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:18 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.766667    3901 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.784019    3901 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.784160    3901 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.784384    3901 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.785552    3901 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: W0806 20:39:18.786147    3901 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.786306    3901 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: E0806 20:39:18.786334    3901 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.790074    3901 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.790125    3901 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.790142    3901 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.790153    3901 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.790177    3901 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.792224    3901 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.792242    3901 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.792262    3901 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.792274    3901 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: E0806 20:39:18.792378    3901 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.792648    3901 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: E0806 20:39:18.792819    3901 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:18 cka-02-worker2 systemd[1]: run-rd5d89c73077f48b0943116b0cca78615.scope: Deactivated successfully.
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.793434    3901 server.go:1181] "Started kubelet"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.793780    3901 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.794839    3901 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.797133    3901 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.798848    3901 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: I0806 20:39:18.798915    3901 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: E0806 20:39:18.809188    3901 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: E0806 20:39:18.810439    3901 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:18 cka-02-worker2 kubelet[3901]: E0806 20:39:18.810463    3901 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:18 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:18 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:19 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 160.
Aug 06 20:39:19 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:19 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:19 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.014694    3923 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.030976    3923 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.031002    3923 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.031306    3923 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.033344    3923 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: W0806 20:39:20.034072    3923 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.034201    3923 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: E0806 20:39:20.034259    3923 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:20 cka-02-worker2 systemd[1]: run-r370fdbf64cc84db4a532bcc012ba3af7.scope: Deactivated successfully.
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.055826    3923 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.055946    3923 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.055967    3923 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.055980    3923 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.056006    3923 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.059260    3923 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.059287    3923 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.059303    3923 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.059314    3923 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: E0806 20:39:20.059484    3923 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.060021    3923 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: E0806 20:39:20.060293    3923 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.060539    3923 server.go:1181] "Started kubelet"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.061259    3923 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.061507    3923 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.065810    3923 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.067360    3923 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: E0806 20:39:20.068716    3923 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: I0806 20:39:20.061817    3923 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: E0806 20:39:20.076815    3923 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:20 cka-02-worker2 kubelet[3923]: E0806 20:39:20.076843    3923 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:20 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:20 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:21 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 161.
Aug 06 20:39:21 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:21 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:21 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.263380    3946 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.278740    3946 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.278761    3946 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.278997    3946 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.280200    3946 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: W0806 20:39:21.280804    3946 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.280926    3946 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: E0806 20:39:21.281018    3946 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.284821    3946 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.284874    3946 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.284903    3946 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.284915    3946 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.284934    3946 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.287964    3946 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.287988    3946 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.288006    3946 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.288017    3946 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.288517    3946 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:21 cka-02-worker2 systemd[1]: run-r86e88ef873484cdb985921e9d9953567.scope: Deactivated successfully.
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: E0806 20:39:21.291963    3946 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: E0806 20:39:21.291968    3946 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.292123    3946 server.go:1181] "Started kubelet"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.293431    3946 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.296618    3946 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.297227    3946 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.297753    3946 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: I0806 20:39:21.299154    3946 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: E0806 20:39:21.305410    3946 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: E0806 20:39:21.306499    3946 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:21 cka-02-worker2 kubelet[3946]: E0806 20:39:21.306520    3946 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:21 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:21 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:22 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 162.
Aug 06 20:39:22 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:22 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:22 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.520632    3970 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.536658    3970 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.536685    3970 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.536886    3970 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.538114    3970 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.538657    3970 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: W0806 20:39:22.538666    3970 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: E0806 20:39:22.538708    3970 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:22 cka-02-worker2 systemd[1]: run-r0b68128a76a343cf848bc4c4db7ac442.scope: Deactivated successfully.
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.558047    3970 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.558125    3970 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.558149    3970 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.558162    3970 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.559242    3970 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.564351    3970 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.564380    3970 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.564400    3970 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.564412    3970 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: E0806 20:39:22.565357    3970 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.565775    3970 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: E0806 20:39:22.566028    3970 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.566270    3970 server.go:1181] "Started kubelet"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.566705    3970 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.567029    3970 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.567480    3970 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.568181    3970 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: I0806 20:39:22.568329    3970 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: E0806 20:39:22.570274    3970 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: E0806 20:39:22.573428    3970 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:22 cka-02-worker2 kubelet[3970]: E0806 20:39:22.573563    3970 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:22 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:22 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:23 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 163.
Aug 06 20:39:23 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:23 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:23 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.764848    3993 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.779013    3993 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.779032    3993 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.779248    3993 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.781573    3993 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: W0806 20:39:23.782428    3993 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.782544    3993 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: E0806 20:39:23.782699    3993 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:23 cka-02-worker2 systemd[1]: run-r52693a1ffc4f4fc9916019994b68fbb5.scope: Deactivated successfully.
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.803895    3993 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.803967    3993 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.803990    3993 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.804002    3993 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.804022    3993 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.810760    3993 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.810792    3993 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.810831    3993 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.810850    3993 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: E0806 20:39:23.811177    3993 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.811515    3993 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: E0806 20:39:23.811678    3993 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.811836    3993 server.go:1181] "Started kubelet"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.812520    3993 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.813378    3993 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.814792    3993 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.821461    3993 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: I0806 20:39:23.821707    3993 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: E0806 20:39:23.824094    3993 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: E0806 20:39:23.829602    3993 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:23 cka-02-worker2 kubelet[3993]: E0806 20:39:23.833447    3993 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:23 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:23 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:24 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 164.
Aug 06 20:39:24 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:24 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:24 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.016678    4013 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.028757    4013 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.028856    4013 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.029127    4013 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.031488    4013 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: W0806 20:39:25.032965    4013 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.034639    4013 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: E0806 20:39:25.034700    4013 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:25 cka-02-worker2 systemd[1]: run-rf1df1ee496cd42859d3a8d415ed256db.scope: Deactivated successfully.
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.038545    4013 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.038596    4013 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.038612    4013 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.038624    4013 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.038643    4013 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.041726    4013 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.041747    4013 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.041766    4013 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.041777    4013 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.042204    4013 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: E0806 20:39:25.043131    4013 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.043283    4013 server.go:1181] "Started kubelet"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.044239    4013 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.044452    4013 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: E0806 20:39:25.048615    4013 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.049985    4013 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.052408    4013 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: I0806 20:39:25.063838    4013 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: E0806 20:39:25.066085    4013 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: E0806 20:39:25.074554    4013 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: E0806 20:39:25.076102    4013 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:25 cka-02-worker2 kubelet[4013]: E0806 20:39:25.076136    4013 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:25 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:25 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:26 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 165.
Aug 06 20:39:26 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:26 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:26 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.267473    4036 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.279861    4036 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.279895    4036 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.280192    4036 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.281487    4036 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.283600    4036 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: E0806 20:39:26.283647    4036 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: W0806 20:39:26.283690    4036 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.287631    4036 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.287682    4036 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.287699    4036 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.287711    4036 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.287731    4036 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:26 cka-02-worker2 systemd[1]: run-r54ed4e78524e47a486faa2ebd55448df.scope: Deactivated successfully.
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.289904    4036 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.289923    4036 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.289939    4036 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.289951    4036 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.294860    4036 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: E0806 20:39:26.295013    4036 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: E0806 20:39:26.295256    4036 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.295472    4036 server.go:1181] "Started kubelet"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.295984    4036 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.301093    4036 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.303577    4036 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.307307    4036 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: I0806 20:39:26.307600    4036 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: E0806 20:39:26.313355    4036 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: E0806 20:39:26.315058    4036 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:26 cka-02-worker2 kubelet[4036]: E0806 20:39:26.315200    4036 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:26 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:26 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:27 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 166.
Aug 06 20:39:27 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:27 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:27 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.509228    4058 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.529088    4058 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.529205    4058 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.529464    4058 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.530826    4058 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: W0806 20:39:27.531565    4058 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.531615    4058 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: E0806 20:39:27.531774    4058 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.535860    4058 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.535941    4058 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.535960    4058 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.535972    4058 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.536000    4058 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:27 cka-02-worker2 systemd[1]: run-r585b22f257e040279e5ad345362a39b7.scope: Deactivated successfully.
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.538723    4058 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.538747    4058 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.538764    4058 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.538776    4058 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: E0806 20:39:27.542338    4058 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.542371    4058 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: E0806 20:39:27.542740    4058 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.542928    4058 server.go:1181] "Started kubelet"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.544263    4058 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.546326    4058 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.550003    4058 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.554192    4058 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: I0806 20:39:27.554267    4058 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: E0806 20:39:27.557105    4058 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: E0806 20:39:27.558248    4058 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:27 cka-02-worker2 kubelet[4058]: E0806 20:39:27.558354    4058 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:27 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:27 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:28 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 167.
Aug 06 20:39:28 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:28 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:28 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.765124    4079 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.779770    4079 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.779792    4079 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.780725    4079 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.782580    4079 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: W0806 20:39:28.783134    4079 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.783197    4079 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: E0806 20:39:28.783252    4079 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.787189    4079 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.787238    4079 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.787264    4079 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.787275    4079 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.787299    4079 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:28 cka-02-worker2 systemd[1]: run-r362e63611b404ee3bcd28136bf0c100e.scope: Deactivated successfully.
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.789437    4079 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.789471    4079 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.789497    4079 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.789519    4079 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.789852    4079 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: E0806 20:39:28.792937    4079 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: E0806 20:39:28.792945    4079 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.793452    4079 server.go:1181] "Started kubelet"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.794416    4079 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.797250    4079 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.801210    4079 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.804083    4079 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: I0806 20:39:28.804361    4079 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: E0806 20:39:28.806195    4079 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: E0806 20:39:28.810250    4079 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:28 cka-02-worker2 kubelet[4079]: E0806 20:39:28.810365    4079 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:28 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:28 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:29 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 168.
Aug 06 20:39:29 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:29 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:29 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.012508    4104 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.027924    4104 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.027947    4104 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.028151    4104 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.029425    4104 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: W0806 20:39:30.030003    4104 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.030077    4104 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: E0806 20:39:30.030115    4104 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:30 cka-02-worker2 systemd[1]: run-r1e9b2703f095425f95562de1994d2405.scope: Deactivated successfully.
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.049378    4104 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.049442    4104 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.049459    4104 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.049470    4104 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.049492    4104 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.052402    4104 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.052425    4104 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.052469    4104 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.052482    4104 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: E0806 20:39:30.055559    4104 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.055958    4104 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: E0806 20:39:30.056300    4104 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.056784    4104 server.go:1181] "Started kubelet"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.058133    4104 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.058781    4104 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.060604    4104 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.063147    4104 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: I0806 20:39:30.063316    4104 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: E0806 20:39:30.067390    4104 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: E0806 20:39:30.074562    4104 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:30 cka-02-worker2 kubelet[4104]: E0806 20:39:30.074588    4104 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:30 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:30 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:31 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 169.
Aug 06 20:39:31 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:31 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:31 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.278203    4128 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.287114    4128 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.287149    4128 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.287415    4128 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.288815    4128 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.290727    4128 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: W0806 20:39:31.290752    4128 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: E0806 20:39:31.290788    4128 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.295101    4128 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.295156    4128 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.295172    4128 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.295184    4128 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.295203    4128 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:31 cka-02-worker2 systemd[1]: run-r9846340d88f148a483c2388ac4aa9ed2.scope: Deactivated successfully.
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.298071    4128 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.298110    4128 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.298127    4128 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.298138    4128 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: E0806 20:39:31.298397    4128 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.299041    4128 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: E0806 20:39:31.299218    4128 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.299374    4128 server.go:1181] "Started kubelet"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.304654    4128 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.305822    4128 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.311042    4128 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.316653    4128 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: I0806 20:39:31.320838    4128 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: E0806 20:39:31.321628    4128 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: E0806 20:39:31.329187    4128 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:31 cka-02-worker2 kubelet[4128]: E0806 20:39:31.329218    4128 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:31 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:31 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:32 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 170.
Aug 06 20:39:32 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:32 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:32 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.522000    4152 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.534775    4152 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.534799    4152 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.535020    4152 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.536244    4152 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: W0806 20:39:32.536826    4152 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.536924    4152 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: E0806 20:39:32.536999    4152 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:32 cka-02-worker2 systemd[1]: run-r12893cb2fae14842bbdd56e3b3280e7d.scope: Deactivated successfully.
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.557555    4152 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.557609    4152 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.557628    4152 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.557640    4152 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.557659    4152 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.562100    4152 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.562130    4152 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.562146    4152 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.562157    4152 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: E0806 20:39:32.562288    4152 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.562500    4152 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: E0806 20:39:32.562667    4152 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.562824    4152 server.go:1181] "Started kubelet"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.562934    4152 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.563529    4152 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.564168    4152 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.564233    4152 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: I0806 20:39:32.564379    4152 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: E0806 20:39:32.566376    4152 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: E0806 20:39:32.567936    4152 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:32 cka-02-worker2 kubelet[4152]: E0806 20:39:32.567958    4152 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:32 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:32 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:33 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 171.
Aug 06 20:39:33 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:33 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:33 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.763290    4173 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.776918    4173 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.776944    4173 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.777221    4173 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.778542    4173 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: W0806 20:39:33.779123    4173 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.779125    4173 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: E0806 20:39:33.779184    4173 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:33 cka-02-worker2 systemd[1]: run-rd9df513372914905b2a83552d8797ad8.scope: Deactivated successfully.
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.806017    4173 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.806098    4173 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.806117    4173 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.806130    4173 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.806163    4173 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.809560    4173 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.809584    4173 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.809601    4173 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.809628    4173 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: E0806 20:39:33.810674    4173 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.812012    4173 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: E0806 20:39:33.812207    4173 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.812361    4173 server.go:1181] "Started kubelet"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.812948    4173 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.813398    4173 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.813547    4173 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.815303    4173 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: I0806 20:39:33.815366    4173 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: E0806 20:39:33.817161    4173 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: E0806 20:39:33.819107    4173 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:33 cka-02-worker2 kubelet[4173]: E0806 20:39:33.819137    4173 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:33 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:33 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:34 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 172.
Aug 06 20:39:34 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:34 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:34 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.054230    4193 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.074239    4193 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.074259    4193 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.074505    4193 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.075965    4193 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: W0806 20:39:35.076729    4193 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.077082    4193 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: E0806 20:39:35.077141    4193 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:35 cka-02-worker2 systemd[1]: run-rad53363aae08405c9b35ad09db9737f0.scope: Deactivated successfully.
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.093380    4193 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.093444    4193 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.093462    4193 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.093473    4193 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.093508    4193 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.098163    4193 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.098195    4193 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.098213    4193 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.098224    4193 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.101157    4193 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: E0806 20:39:35.103959    4193 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: E0806 20:39:35.104212    4193 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.105048    4193 server.go:1181] "Started kubelet"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.106240    4193 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.106865    4193 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.107036    4193 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.107724    4193 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: I0806 20:39:35.107794    4193 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: E0806 20:39:35.122527    4193 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: E0806 20:39:35.123334    4193 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:35 cka-02-worker2 kubelet[4193]: E0806 20:39:35.123447    4193 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:35 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:35 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:36 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 173.
Aug 06 20:39:36 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:36 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:36 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.267417    4216 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.279698    4216 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.279803    4216 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.281728    4216 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.283212    4216 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.283836    4216 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: W0806 20:39:36.283847    4216 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: E0806 20:39:36.283907    4216 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:36 cka-02-worker2 systemd[1]: run-rec3699e197124c2e9bd60798436d8967.scope: Deactivated successfully.
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.299410    4216 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.299553    4216 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.299576    4216 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.299587    4216 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.299605    4216 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.302833    4216 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.302854    4216 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.302871    4216 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.302897    4216 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: E0806 20:39:36.303121    4216 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.307226    4216 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: E0806 20:39:36.308727    4216 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.308934    4216 server.go:1181] "Started kubelet"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.322066    4216 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.323363    4216 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.322142    4216 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.325173    4216 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: I0806 20:39:36.325241    4216 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: E0806 20:39:36.326239    4216 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: E0806 20:39:36.331194    4216 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:36 cka-02-worker2 kubelet[4216]: E0806 20:39:36.331236    4216 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:36 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:36 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:37 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 174.
Aug 06 20:39:37 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:37 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:37 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.509236    4237 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.522105    4237 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.522134    4237 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.522333    4237 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.523512    4237 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: W0806 20:39:37.524189    4237 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.524374    4237 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: E0806 20:39:37.524480    4237 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:37 cka-02-worker2 systemd[1]: run-rb5d74bd21fc84255a7935222e8ce9222.scope: Deactivated successfully.
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.541440    4237 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.541492    4237 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.541513    4237 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.541525    4237 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.541543    4237 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.545097    4237 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.545237    4237 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.545311    4237 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.545374    4237 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: E0806 20:39:37.545517    4237 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.546325    4237 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: E0806 20:39:37.546782    4237 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.547349    4237 server.go:1181] "Started kubelet"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.550431    4237 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.551941    4237 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.553110    4237 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.556465    4237 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: I0806 20:39:37.559104    4237 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: E0806 20:39:37.580010    4237 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: E0806 20:39:37.582376    4237 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:37 cka-02-worker2 kubelet[4237]: E0806 20:39:37.582410    4237 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:37 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:37 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:38 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 175.
Aug 06 20:39:38 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:38 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:38 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.760050    4264 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.771786    4264 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.771811    4264 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.772042    4264 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.773367    4264 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: W0806 20:39:38.774106    4264 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.774577    4264 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: E0806 20:39:38.774699    4264 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:38 cka-02-worker2 systemd[1]: run-r4aca19969c2a4191859b5b9990a039d2.scope: Deactivated successfully.
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.789668    4264 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.789850    4264 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.789992    4264 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.790071    4264 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.790156    4264 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.794520    4264 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.794664    4264 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.794750    4264 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.795173    4264 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: E0806 20:39:38.794946    4264 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.796543    4264 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: E0806 20:39:38.796878    4264 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.797191    4264 server.go:1181] "Started kubelet"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.797675    4264 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.798369    4264 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.802239    4264 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.807113    4264 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: I0806 20:39:38.807557    4264 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: E0806 20:39:38.808811    4264 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: E0806 20:39:38.811724    4264 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:38 cka-02-worker2 kubelet[4264]: E0806 20:39:38.811866    4264 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:38 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:38 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:39 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 176.
Aug 06 20:39:39 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:39 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:39 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.002073    4287 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.014830    4287 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.014865    4287 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.015348    4287 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.017231    4287 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: W0806 20:39:40.017769    4287 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.017809    4287 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: E0806 20:39:40.017869    4287 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.021975    4287 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.022027    4287 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.022050    4287 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.022061    4287 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.022085    4287 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:40 cka-02-worker2 systemd[1]: run-ra384c1813d3d4077a74e7a7351a52291.scope: Deactivated successfully.
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.026473    4287 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.026495    4287 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.026515    4287 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.026535    4287 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: E0806 20:39:40.026637    4287 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.026980    4287 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: E0806 20:39:40.027187    4287 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.027368    4287 server.go:1181] "Started kubelet"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.027424    4287 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.028592    4287 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.028653    4287 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.043269    4287 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: I0806 20:39:40.043351    4287 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: E0806 20:39:40.047860    4287 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: E0806 20:39:40.048878    4287 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:40 cka-02-worker2 kubelet[4287]: E0806 20:39:40.048937    4287 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:40 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:40 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:41 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 177.
Aug 06 20:39:41 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:41 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:41 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.266835    4308 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.280846    4308 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.280868    4308 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.281265    4308 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.282538    4308 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: W0806 20:39:41.283149    4308 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.283357    4308 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: E0806 20:39:41.283454    4308 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:41 cka-02-worker2 systemd[1]: run-r3298a6afd3164c789a448239fb94d3f6.scope: Deactivated successfully.
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.299426    4308 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.299485    4308 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.299503    4308 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.299514    4308 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.299534    4308 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.303430    4308 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.303552    4308 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.303629    4308 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.303800    4308 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: E0806 20:39:41.304491    4308 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.305583    4308 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: E0806 20:39:41.306018    4308 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.306213    4308 server.go:1181] "Started kubelet"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.307725    4308 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.308008    4308 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.309015    4308 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.314669    4308 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: I0806 20:39:41.314738    4308 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: E0806 20:39:41.319293    4308 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: E0806 20:39:41.321106    4308 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:41 cka-02-worker2 kubelet[4308]: E0806 20:39:41.321304    4308 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:41 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:41 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:42 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 178.
Aug 06 20:39:42 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:42 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:42 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.512244    4329 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.524609    4329 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.524628    4329 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.524860    4329 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.527779    4329 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: W0806 20:39:42.528412    4329 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.528508    4329 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: E0806 20:39:42.528556    4329 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.532404    4329 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.532454    4329 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.532472    4329 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.532482    4329 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.532501    4329 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:42 cka-02-worker2 systemd[1]: run-r59b31c42bc554ccda615f5653f0cea1a.scope: Deactivated successfully.
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.534623    4329 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.534643    4329 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.534662    4329 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.534674    4329 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.535124    4329 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: E0806 20:39:42.537936    4329 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: E0806 20:39:42.537934    4329 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.538099    4329 server.go:1181] "Started kubelet"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.538182    4329 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.538822    4329 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.540783    4329 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.546112    4329 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: I0806 20:39:42.546558    4329 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: E0806 20:39:42.548073    4329 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: E0806 20:39:42.550674    4329 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:42 cka-02-worker2 kubelet[4329]: E0806 20:39:42.550701    4329 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:42 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:42 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:43 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 179.
Aug 06 20:39:43 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:43 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:43 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.762530    4350 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.776619    4350 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.776644    4350 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.777015    4350 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.778205    4350 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: W0806 20:39:43.778792    4350 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.778865    4350 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: E0806 20:39:43.778937    4350 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:43 cka-02-worker2 systemd[1]: run-r37f94874e9744b0bb9f1176d0741db35.scope: Deactivated successfully.
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.801310    4350 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.801378    4350 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.801407    4350 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.801422    4350 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.801444    4350 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.808567    4350 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.808592    4350 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.808609    4350 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.808620    4350 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: E0806 20:39:43.808840    4350 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.809194    4350 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: E0806 20:39:43.809716    4350 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.809918    4350 server.go:1181] "Started kubelet"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.810892    4350 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.811032    4350 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.812972    4350 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.813252    4350 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: I0806 20:39:43.813315    4350 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: E0806 20:39:43.815719    4350 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: E0806 20:39:43.821495    4350 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:43 cka-02-worker2 kubelet[4350]: E0806 20:39:43.821537    4350 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:43 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:43 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:44 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 180.
Aug 06 20:39:44 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:44 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:44 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.049111    4371 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.067732    4371 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.067757    4371 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.067979    4371 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.069237    4371 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: W0806 20:39:45.069823    4371 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.069972    4371 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: E0806 20:39:45.070084    4371 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:45 cka-02-worker2 systemd[1]: run-r867197102f934361bb7d0206dc8e2a32.scope: Deactivated successfully.
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.086060    4371 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.086209    4371 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.086244    4371 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.086256    4371 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.086284    4371 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.092082    4371 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.092275    4371 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.092360    4371 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.092441    4371 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: E0806 20:39:45.095074    4371 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.095228    4371 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: E0806 20:39:45.095401    4371 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.095570    4371 server.go:1181] "Started kubelet"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.095633    4371 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.096291    4371 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.096431    4371 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.097021    4371 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: I0806 20:39:45.097167    4371 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: E0806 20:39:45.101948    4371 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: E0806 20:39:45.103247    4371 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:45 cka-02-worker2 kubelet[4371]: E0806 20:39:45.103522    4371 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:45 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:45 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:46 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 181.
Aug 06 20:39:46 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:46 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:46 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.254322    4395 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.268721    4395 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.268742    4395 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.269073    4395 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.270314    4395 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: W0806 20:39:46.270877    4395 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.271062    4395 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: E0806 20:39:46.271102    4395 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:46 cka-02-worker2 systemd[1]: run-r522979e93b5149c8a7d0d0c46532501d.scope: Deactivated successfully.
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.291541    4395 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.291597    4395 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.291628    4395 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.291641    4395 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.291676    4395 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.297936    4395 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.297959    4395 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.297977    4395 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.297989    4395 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: E0806 20:39:46.300166    4395 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.301393    4395 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: E0806 20:39:46.301719    4395 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.301982    4395 server.go:1181] "Started kubelet"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.304210    4395 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.304321    4395 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.305012    4395 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.305072    4395 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: I0806 20:39:46.308473    4395 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: E0806 20:39:46.310644    4395 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: E0806 20:39:46.311793    4395 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:46 cka-02-worker2 kubelet[4395]: E0806 20:39:46.311827    4395 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:46 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:46 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:47 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 182.
Aug 06 20:39:47 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:47 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:47 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.513866    4416 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.530745    4416 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.530771    4416 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.531010    4416 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.532214    4416 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: W0806 20:39:47.532785    4416 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.532986    4416 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: E0806 20:39:47.533035    4416 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:47 cka-02-worker2 systemd[1]: run-r22b43911a9aa41fd9a1e66fc1d72dbba.scope: Deactivated successfully.
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.553661    4416 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.553818    4416 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.553958    4416 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.554028    4416 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.554112    4416 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.558152    4416 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.558177    4416 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.558199    4416 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.558212    4416 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.558972    4416 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: E0806 20:39:47.562968    4416 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: E0806 20:39:47.563314    4416 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.563481    4416 server.go:1181] "Started kubelet"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.563601    4416 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.564205    4416 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.564772    4416 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.565232    4416 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: I0806 20:39:47.573207    4416 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: E0806 20:39:47.574248    4416 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: E0806 20:39:47.578666    4416 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:47 cka-02-worker2 kubelet[4416]: E0806 20:39:47.578888    4416 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:47 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:47 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:48 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 183.
Aug 06 20:39:48 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:48 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:48 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.762818    4448 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.774071    4448 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.774091    4448 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.774269    4448 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.775517    4448 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.776075    4448 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: W0806 20:39:48.776088    4448 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: E0806 20:39:48.776154    4448 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.780450    4448 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.780549    4448 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.780575    4448 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.780588    4448 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.780630    4448 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:48 cka-02-worker2 systemd[1]: run-rc4ea34437dd442d5b832bb6acd9416b2.scope: Deactivated successfully.
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.783774    4448 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.783792    4448 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.783819    4448 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.783832    4448 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.784450    4448 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: E0806 20:39:48.787918    4448 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: E0806 20:39:48.787936    4448 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.788181    4448 server.go:1181] "Started kubelet"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.788746    4448 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.789370    4448 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.791243    4448 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.795506    4448 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: I0806 20:39:48.795726    4448 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: E0806 20:39:48.797617    4448 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: E0806 20:39:48.799934    4448 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:48 cka-02-worker2 kubelet[4448]: E0806 20:39:48.799977    4448 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:48 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:48 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:49 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 184.
Aug 06 20:39:49 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:49 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:49 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.014022    4470 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.030986    4470 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.031008    4470 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.031593    4470 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.033213    4470 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: W0806 20:39:50.034299    4470 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.034329    4470 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: E0806 20:39:50.034364    4470 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.038331    4470 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.038377    4470 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.038392    4470 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.038403    4470 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.038429    4470 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:50 cka-02-worker2 systemd[1]: run-r6974cb9271024fd0978d9fda6af66938.scope: Deactivated successfully.
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.040821    4470 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.040840    4470 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.040858    4470 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.040869    4470 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.041258    4470 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: E0806 20:39:50.043970    4470 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: E0806 20:39:50.043976    4470 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.044128    4470 server.go:1181] "Started kubelet"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.044174    4470 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.045664    4470 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.049825    4470 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.055256    4470 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: I0806 20:39:50.055781    4470 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: E0806 20:39:50.068745    4470 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: E0806 20:39:50.074436    4470 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: E0806 20:39:50.074670    4470 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker2\" not found" node="cka-02-worker2"
Aug 06 20:39:50 cka-02-worker2 kubelet[4470]: E0806 20:39:50.074462    4470 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:50 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:50 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:51 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 185.
Aug 06 20:39:51 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:51 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:51 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.266048    4494 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.274870    4494 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.274997    4494 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.275253    4494 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.276507    4494 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: W0806 20:39:51.277167    4494 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.277465    4494 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: E0806 20:39:51.277582    4494 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.282059    4494 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.282120    4494 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.282136    4494 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.282148    4494 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.282167    4494 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:51 cka-02-worker2 systemd[1]: run-r60f3fe90dbdb42deb58f16aee4800e0a.scope: Deactivated successfully.
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.284665    4494 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.284684    4494 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.284703    4494 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.284714    4494 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.285118    4494 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: E0806 20:39:51.289064    4494 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: E0806 20:39:51.289135    4494 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.289631    4494 server.go:1181] "Started kubelet"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.290711    4494 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.291557    4494 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.292435    4494 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.292615    4494 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: I0806 20:39:51.292868    4494 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: E0806 20:39:51.299542    4494 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: E0806 20:39:51.305584    4494 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:51 cka-02-worker2 kubelet[4494]: E0806 20:39:51.305610    4494 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:51 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:51 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:52 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 186.
Aug 06 20:39:52 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:52 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:52 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.513669    4517 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.530969    4517 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.531070    4517 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.532870    4517 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.534028    4517 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: W0806 20:39:52.534623    4517 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.534690    4517 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: E0806 20:39:52.534750    4517 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:52 cka-02-worker2 systemd[1]: run-reccb6ecaa1014c85ba3126a9b5a3d423.scope: Deactivated successfully.
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.551384    4517 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.551439    4517 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.551454    4517 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.551465    4517 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.551486    4517 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.555233    4517 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.555253    4517 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.555269    4517 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.555281    4517 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.556507    4517 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: E0806 20:39:52.556714    4517 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.556936    4517 server.go:1181] "Started kubelet"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.557202    4517 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.558932    4517 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.559725    4517 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: E0806 20:39:52.565283    4517 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: E0806 20:39:52.566972    4517 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: I0806 20:39:52.567963    4517 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: E0806 20:39:52.570525    4517 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:52 cka-02-worker2 kubelet[4517]: E0806 20:39:52.570546    4517 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:52 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:52 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:53 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 187.
Aug 06 20:39:53 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:53 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:53 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.765264    4541 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.781791    4541 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.781900    4541 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.782168    4541 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.783410    4541 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: W0806 20:39:53.783977    4541 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.784147    4541 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: E0806 20:39:53.784190    4541 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:53 cka-02-worker2 systemd[1]: run-rf4b40494d421472f8cf2908d3de508d6.scope: Deactivated successfully.
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.799867    4541 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.799924    4541 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.799943    4541 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.799954    4541 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.799977    4541 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.805016    4541 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.805037    4541 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.805051    4541 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.805061    4541 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: E0806 20:39:53.805316    4541 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.805434    4541 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: E0806 20:39:53.805643    4541 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.806573    4541 server.go:1181] "Started kubelet"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.807209    4541 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.807629    4541 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.807783    4541 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.809761    4541 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: I0806 20:39:53.809888    4541 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: E0806 20:39:53.823317    4541 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: E0806 20:39:53.826633    4541 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:53 cka-02-worker2 kubelet[4541]: E0806 20:39:53.826687    4541 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:53 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:53 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:54 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 188.
Aug 06 20:39:54 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:54 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:54 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.014902    4564 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.028738    4564 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.028756    4564 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.028974    4564 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.030497    4564 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: W0806 20:39:55.031113    4564 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.031530    4564 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: E0806 20:39:55.031583    4564 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:55 cka-02-worker2 systemd[1]: run-rf619203742ca4e8ba8dca0a2236eff71.scope: Deactivated successfully.
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.046828    4564 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.046886    4564 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.046905    4564 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.046916    4564 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.046934    4564 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.049894    4564 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.049916    4564 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.049934    4564 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.049946    4564 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.052543    4564 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: E0806 20:39:55.052987    4564 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.053491    4564 server.go:1181] "Started kubelet"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.057352    4564 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: E0806 20:39:55.057761    4564 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.057947    4564 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.058466    4564 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.061428    4564 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: I0806 20:39:55.061525    4564 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: E0806 20:39:55.063741    4564 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: E0806 20:39:55.065558    4564 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:55 cka-02-worker2 kubelet[4564]: E0806 20:39:55.065592    4564 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:55 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:55 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:56 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 189.
Aug 06 20:39:56 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:56 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:56 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.262365    4585 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.283792    4585 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.283811    4585 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.284070    4585 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.286425    4585 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: W0806 20:39:56.286981    4585 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.287050    4585 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: E0806 20:39:56.287102    4585 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.290804    4585 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.290848    4585 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.290864    4585 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.290875    4585 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.290920    4585 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:56 cka-02-worker2 systemd[1]: run-r85b736e08b2344ba87b70970ef8e8d03.scope: Deactivated successfully.
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.294610    4585 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.294630    4585 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.294651    4585 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.294664    4585 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.295291    4585 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: E0806 20:39:56.298028    4585 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: E0806 20:39:56.298452    4585 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.298743    4585 server.go:1181] "Started kubelet"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.300292    4585 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.301613    4585 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.303726    4585 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.308776    4585 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: I0806 20:39:56.308975    4585 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: E0806 20:39:56.315977    4585 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: E0806 20:39:56.317785    4585 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:56 cka-02-worker2 kubelet[4585]: E0806 20:39:56.317870    4585 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:56 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:56 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:57 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 190.
Aug 06 20:39:57 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:57 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:57 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.512325    4609 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.523725    4609 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.523827    4609 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.524051    4609 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.525324    4609 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: W0806 20:39:57.525919    4609 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.525924    4609 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: E0806 20:39:57.525981    4609 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:57 cka-02-worker2 systemd[1]: run-r576983bf26ce43dca45a1a590bf5f37b.scope: Deactivated successfully.
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.544069    4609 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.544242    4609 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.544344    4609 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.544420    4609 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.544498    4609 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.554134    4609 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.554162    4609 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.554196    4609 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.554210    4609 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: E0806 20:39:57.554509    4609 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.555286    4609 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: E0806 20:39:57.555543    4609 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.555842    4609 server.go:1181] "Started kubelet"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.556503    4609 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.557109    4609 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.558432    4609 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.561765    4609 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: I0806 20:39:57.562016    4609 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: E0806 20:39:57.563504    4609 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: E0806 20:39:57.565947    4609 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:57 cka-02-worker2 kubelet[4609]: E0806 20:39:57.566079    4609 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:57 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:57 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:58 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 191.
Aug 06 20:39:58 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:58 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:58 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.761481    4632 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.774666    4632 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.774689    4632 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.774934    4632 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.776251    4632 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: W0806 20:39:58.776845    4632 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.776875    4632 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: E0806 20:39:58.776950    4632 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:58 cka-02-worker2 systemd[1]: run-r3b0114e52b0a43ba9edb1af1232f3017.scope: Deactivated successfully.
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.793014    4632 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.793071    4632 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.793091    4632 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.793102    4632 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.793125    4632 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.795681    4632 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.795702    4632 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.795717    4632 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.795728    4632 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: E0806 20:39:58.799742    4632 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.800970    4632 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: E0806 20:39:58.801253    4632 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.801427    4632 server.go:1181] "Started kubelet"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.802182    4632 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.802941    4632 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.803002    4632 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.804845    4632 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: I0806 20:39:58.805105    4632 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: E0806 20:39:58.812214    4632 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: E0806 20:39:58.814909    4632 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:58 cka-02-worker2 kubelet[4632]: E0806 20:39:58.814938    4632 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:58 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:58 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:59 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 192.
Aug 06 20:39:59 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:59 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:59 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.014943    4657 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.027613    4657 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.027637    4657 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.028068    4657 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.029876    4657 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.030463    4657 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: W0806 20:40:00.030487    4657 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: E0806 20:40:00.030512    4657 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.034374    4657 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.034418    4657 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.034438    4657 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.034448    4657 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.034472    4657 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.036518    4657 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.036538    4657 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.036567    4657 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.036578    4657 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: E0806 20:40:00.036976    4657 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:00 cka-02-worker2 systemd[1]: run-r7e4a94418ced45ceb367d855075e937f.scope: Deactivated successfully.
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.039349    4657 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: E0806 20:40:00.041936    4657 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.042113    4657 server.go:1181] "Started kubelet"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.043048    4657 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.043158    4657 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.044256    4657 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.047462    4657 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: I0806 20:40:00.047549    4657 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: E0806 20:40:00.052740    4657 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: E0806 20:40:00.056435    4657 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:00 cka-02-worker2 kubelet[4657]: E0806 20:40:00.056460    4657 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:00 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:00 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:01 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 193.
Aug 06 20:40:01 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:01 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:01 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.263533    4678 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.280861    4678 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.280913    4678 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.281914    4678 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.283636    4678 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: W0806 20:40:01.284607    4678 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.284920    4678 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: E0806 20:40:01.284995    4678 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.288541    4678 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.288585    4678 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.288609    4678 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.288620    4678 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.288643    4678 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:01 cka-02-worker2 systemd[1]: run-rc600edcf0d5e4a808674360ee9b0eef4.scope: Deactivated successfully.
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.290988    4678 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.291008    4678 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.291024    4678 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.291035    4678 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.291574    4678 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: E0806 20:40:01.293931    4678 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: E0806 20:40:01.293939    4678 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.295687    4678 server.go:1181] "Started kubelet"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.296287    4678 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.296989    4678 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.298565    4678 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.300638    4678 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: I0806 20:40:01.300971    4678 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: E0806 20:40:01.305858    4678 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: E0806 20:40:01.309983    4678 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:01 cka-02-worker2 kubelet[4678]: E0806 20:40:01.310129    4678 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:01 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:01 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:02 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 194.
Aug 06 20:40:02 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:02 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:02 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.513909    4701 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.528665    4701 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.528691    4701 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.528912    4701 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.530229    4701 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: W0806 20:40:02.530811    4701 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.531042    4701 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: E0806 20:40:02.531087    4701 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.535129    4701 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.535175    4701 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.535192    4701 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.535203    4701 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.535222    4701 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:02 cka-02-worker2 systemd[1]: run-rba7eccbbf8734488a9ec57b2b658b746.scope: Deactivated successfully.
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.540605    4701 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.540625    4701 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.540654    4701 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.540665    4701 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.542035    4701 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: E0806 20:40:02.543926    4701 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: E0806 20:40:02.543933    4701 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.544118    4701 server.go:1181] "Started kubelet"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.545918    4701 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.546178    4701 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.546638    4701 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.556229    4701 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: I0806 20:40:02.556313    4701 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: E0806 20:40:02.557002    4701 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: E0806 20:40:02.558107    4701 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:02 cka-02-worker2 kubelet[4701]: E0806 20:40:02.558128    4701 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:02 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:02 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:03 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 195.
Aug 06 20:40:03 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:03 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:03 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.759477    4722 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.778789    4722 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.778814    4722 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.779060    4722 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.780326    4722 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.780896    4722 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: W0806 20:40:03.780919    4722 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: E0806 20:40:03.781081    4722 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.785037    4722 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.785083    4722 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.785108    4722 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.785120    4722 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.785154    4722 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:03 cka-02-worker2 systemd[1]: run-r0d2fb05e42e449bfa3f9f005c5d0fdb9.scope: Deactivated successfully.
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.789955    4722 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.789976    4722 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.789993    4722 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.790004    4722 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.790458    4722 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: E0806 20:40:03.792818    4722 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: E0806 20:40:03.793026    4722 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.793038    4722 server.go:1181] "Started kubelet"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.793312    4722 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.793898    4722 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.794184    4722 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.795347    4722 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: I0806 20:40:03.795458    4722 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: E0806 20:40:03.797097    4722 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: E0806 20:40:03.803952    4722 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:03 cka-02-worker2 kubelet[4722]: E0806 20:40:03.804063    4722 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:03 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:03 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:04 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 196.
Aug 06 20:40:04 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:04 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:04 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.038619    4744 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.059923    4744 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.059944    4744 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.060145    4744 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.061469    4744 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: W0806 20:40:05.062208    4744 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.062564    4744 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: E0806 20:40:05.062606    4744 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:05 cka-02-worker2 systemd[1]: run-r4b458dbe383b443b8e5e904e6c1c5c23.scope: Deactivated successfully.
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.078241    4744 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.078299    4744 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.078326    4744 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.078338    4744 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.078365    4744 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.084698    4744 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.084726    4744 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.084745    4744 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.084765    4744 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: E0806 20:40:05.086762    4744 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.087061    4744 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: E0806 20:40:05.087246    4744 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.087421    4744 server.go:1181] "Started kubelet"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.098599    4744 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.100574    4744 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.102609    4744 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.103486    4744 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: I0806 20:40:05.107976    4744 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: E0806 20:40:05.108994    4744 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: E0806 20:40:05.118587    4744 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:05 cka-02-worker2 kubelet[4744]: E0806 20:40:05.118707    4744 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:05 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:05 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:06 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 197.
Aug 06 20:40:06 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:06 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:06 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.265046    4771 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.278720    4771 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.278743    4771 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.278977    4771 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.280227    4771 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.280791    4771 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: E0806 20:40:06.280919    4771 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: W0806 20:40:06.280818    4771 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.285029    4771 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.285074    4771 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.285092    4771 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.285103    4771 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.285121    4771 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.287372    4771 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.287392    4771 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.287409    4771 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.287420    4771 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:06 cka-02-worker2 systemd[1]: run-re629a894a106467d9980d257e5d001d4.scope: Deactivated successfully.
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: E0806 20:40:06.292106    4771 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.292148    4771 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: E0806 20:40:06.292327    4771 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.292477    4771 server.go:1181] "Started kubelet"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.292562    4771 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.293142    4771 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.293666    4771 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.293847    4771 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: I0806 20:40:06.297382    4771 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: E0806 20:40:06.299079    4771 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: E0806 20:40:06.301084    4771 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:06 cka-02-worker2 kubelet[4771]: E0806 20:40:06.301111    4771 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:06 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:06 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:07 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 198.
Aug 06 20:40:07 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:07 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:07 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.515350    4795 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.530007    4795 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.530044    4795 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.530254    4795 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.531404    4795 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: W0806 20:40:07.531958    4795 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.532166    4795 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: E0806 20:40:07.532230    4795 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.536001    4795 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.536050    4795 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.536067    4795 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.536078    4795 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.536106    4795 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.538961    4795 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.538980    4795 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.539016    4795 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.539073    4795 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: E0806 20:40:07.539155    4795 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.539432    4795 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: E0806 20:40:07.539580    4795 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.539714    4795 server.go:1181] "Started kubelet"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.539910    4795 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:07 cka-02-worker2 systemd[1]: run-r70b2bb4fae48493d86c5b106226cc8c2.scope: Deactivated successfully.
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.540519    4795 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.541431    4795 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.541831    4795 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: I0806 20:40:07.541975    4795 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: E0806 20:40:07.547716    4795 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: E0806 20:40:07.549008    4795 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:07 cka-02-worker2 kubelet[4795]: E0806 20:40:07.549031    4795 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:07 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:07 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:08 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 199.
Aug 06 20:40:08 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:08 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:08 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.761528    4817 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.778824    4817 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.778944    4817 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.779618    4817 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.781398    4817 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.782535    4817 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: E0806 20:40:08.782587    4817 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: W0806 20:40:08.782542    4817 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.786535    4817 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.786584    4817 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.786600    4817 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.786612    4817 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.786639    4817 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:08 cka-02-worker2 systemd[1]: run-r3c93b23102dd43909010108f424a34d5.scope: Deactivated successfully.
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.788837    4817 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.788855    4817 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.788871    4817 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.788893    4817 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.789391    4817 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: E0806 20:40:08.792937    4817 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: E0806 20:40:08.792983    4817 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.793190    4817 server.go:1181] "Started kubelet"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.793875    4817 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.799120    4817 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.802835    4817 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.803476    4817 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: I0806 20:40:08.803637    4817 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: E0806 20:40:08.804171    4817 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: E0806 20:40:08.808627    4817 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:08 cka-02-worker2 kubelet[4817]: E0806 20:40:08.808649    4817 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:08 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:08 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:09 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 200.
Aug 06 20:40:09 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:09 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:09 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.024530    4842 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.042321    4842 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.042484    4842 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.042848    4842 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.044728    4842 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: W0806 20:40:10.045351    4842 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.045398    4842 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: E0806 20:40:10.045561    4842 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.049289    4842 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.049346    4842 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.049367    4842 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.049379    4842 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.049405    4842 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:10 cka-02-worker2 systemd[1]: run-r43c0b10930f04dd3b1e77b32d2528346.scope: Deactivated successfully.
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.051855    4842 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.051876    4842 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.051910    4842 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.051928    4842 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.052506    4842 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: E0806 20:40:10.054119    4842 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: E0806 20:40:10.057756    4842 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.058047    4842 server.go:1181] "Started kubelet"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.062469    4842 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.064559    4842 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.070220    4842 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.066576    4842 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: I0806 20:40:10.071022    4842 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: E0806 20:40:10.071851    4842 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: E0806 20:40:10.075292    4842 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:10 cka-02-worker2 kubelet[4842]: E0806 20:40:10.075318    4842 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:10 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:10 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:11 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 201.
Aug 06 20:40:11 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:11 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:11 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.268017    4864 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.286728    4864 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.286753    4864 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.286997    4864 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.288269    4864 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: W0806 20:40:11.288873    4864 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.289006    4864 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: E0806 20:40:11.289105    4864 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:11 cka-02-worker2 systemd[1]: run-rbc6be4378882408c88d44b1649faaa3c.scope: Deactivated successfully.
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.309164    4864 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.309222    4864 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.309251    4864 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.309263    4864 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.309291    4864 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.316090    4864 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.316113    4864 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.316132    4864 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.316151    4864 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: E0806 20:40:11.316621    4864 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.317603    4864 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: E0806 20:40:11.317796    4864 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.318407    4864 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.317981    4864 server.go:1181] "Started kubelet"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.319037    4864 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.320846    4864 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.323126    4864 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: I0806 20:40:11.323193    4864 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: E0806 20:40:11.325347    4864 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: E0806 20:40:11.330949    4864 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:11 cka-02-worker2 kubelet[4864]: E0806 20:40:11.331107    4864 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:11 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:11 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:12 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 202.
Aug 06 20:40:12 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:12 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:12 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.514400    4890 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.530321    4890 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.530479    4890 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.530724    4890 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.532001    4890 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: W0806 20:40:12.532704    4890 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.533052    4890 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: E0806 20:40:12.533166    4890 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:12 cka-02-worker2 systemd[1]: run-rea34e031845d4bab810fb85a26d7b70b.scope: Deactivated successfully.
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.559178    4890 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.559229    4890 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.559249    4890 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.559261    4890 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.559279    4890 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.561454    4890 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.561601    4890 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.561626    4890 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.561639    4890 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: E0806 20:40:12.561842    4890 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.562193    4890 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: E0806 20:40:12.562482    4890 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.562693    4890 server.go:1181] "Started kubelet"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.563307    4890 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.563691    4890 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.563875    4890 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.564717    4890 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: I0806 20:40:12.564796    4890 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: E0806 20:40:12.571913    4890 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: E0806 20:40:12.574156    4890 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:12 cka-02-worker2 kubelet[4890]: E0806 20:40:12.574188    4890 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:12 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:12 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:13 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 203.
Aug 06 20:40:13 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:13 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:13 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.759863    4913 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.773028    4913 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.773048    4913 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.773283    4913 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.774492    4913 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: W0806 20:40:13.775064    4913 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.775067    4913 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: E0806 20:40:13.775255    4913 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:13 cka-02-worker2 systemd[1]: run-r30f8c00b2cf64832bcb87ab63e5887c7.scope: Deactivated successfully.
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.790727    4913 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.790786    4913 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.790807    4913 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.790822    4913 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.790841    4913 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.796295    4913 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.796319    4913 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.796335    4913 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.796345    4913 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: E0806 20:40:13.797569    4913 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.799961    4913 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: E0806 20:40:13.800175    4913 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.800321    4913 server.go:1181] "Started kubelet"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.802530    4913 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.803348    4913 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.803421    4913 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.804075    4913 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: I0806 20:40:13.806089    4913 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: E0806 20:40:13.807183    4913 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: E0806 20:40:13.808029    4913 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:13 cka-02-worker2 kubelet[4913]: E0806 20:40:13.808119    4913 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:13 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:13 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:14 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 204.
Aug 06 20:40:14 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:14 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:14 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.019552    4934 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.029636    4934 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.029658    4934 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.029874    4934 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.031281    4934 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: W0806 20:40:15.031962    4934 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.032372    4934 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: E0806 20:40:15.032420    4934 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:15 cka-02-worker2 systemd[1]: run-r7273ac2e6c774adc9d0e08f6657a2615.scope: Deactivated successfully.
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.051140    4934 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.051211    4934 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.051233    4934 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.051246    4934 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.051270    4934 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.058051    4934 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.058077    4934 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.058095    4934 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.058107    4934 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.058832    4934 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: E0806 20:40:15.061938    4934 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: E0806 20:40:15.061975    4934 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.062112    4934 server.go:1181] "Started kubelet"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.063050    4934 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.063967    4934 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.064101    4934 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.064574    4934 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: I0806 20:40:15.065168    4934 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: E0806 20:40:15.067662    4934 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: E0806 20:40:15.071250    4934 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:15 cka-02-worker2 kubelet[4934]: E0806 20:40:15.071285    4934 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:15 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:15 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:16 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 205.
Aug 06 20:40:16 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:16 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:16 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.261934    4955 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.276842    4955 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.276864    4955 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.277185    4955 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.278369    4955 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: W0806 20:40:16.278971    4955 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.279051    4955 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: E0806 20:40:16.279092    4955 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:16 cka-02-worker2 systemd[1]: run-raf28992b53794fa29c158a3cd3371191.scope: Deactivated successfully.
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.298019    4955 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.298079    4955 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.298104    4955 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.298116    4955 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.298142    4955 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.302510    4955 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.302530    4955 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.302549    4955 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.302568    4955 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.303116    4955 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: E0806 20:40:16.305944    4955 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: E0806 20:40:16.305946    4955 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.306124    4955 server.go:1181] "Started kubelet"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.306448    4955 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.306959    4955 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.307135    4955 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.308557    4955 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: I0806 20:40:16.308703    4955 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: E0806 20:40:16.313046    4955 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: E0806 20:40:16.315063    4955 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:16 cka-02-worker2 kubelet[4955]: E0806 20:40:16.315091    4955 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:16 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:16 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:17 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 206.
Aug 06 20:40:17 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:17 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:17 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.511676    4977 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.525871    4977 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.525901    4977 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.526195    4977 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.527359    4977 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: W0806 20:40:17.527932    4977 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.528053    4977 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: E0806 20:40:17.528150    4977 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.531974    4977 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.532019    4977 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.532037    4977 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.532048    4977 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.532066    4977 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:17 cka-02-worker2 systemd[1]: run-r1e5afa553a1f4bf981135002d243f8ab.scope: Deactivated successfully.
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.535667    4977 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.535686    4977 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.535717    4977 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.536293    4977 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.536732    4977 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: E0806 20:40:17.538930    4977 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: E0806 20:40:17.544926    4977 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.545110    4977 server.go:1181] "Started kubelet"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.546265    4977 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.547113    4977 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.547741    4977 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.552200    4977 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: I0806 20:40:17.552279    4977 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: E0806 20:40:17.554192    4977 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: E0806 20:40:17.557263    4977 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:17 cka-02-worker2 kubelet[4977]: E0806 20:40:17.557294    4977 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:17 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:17 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:18 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 207.
Aug 06 20:40:18 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:18 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:18 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.761618    5001 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.775725    5001 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.775748    5001 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.775980    5001 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.777302    5001 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: W0806 20:40:18.777923    5001 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.778121    5001 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: E0806 20:40:18.778166    5001 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:18 cka-02-worker2 systemd[1]: run-r05f5c9dc3bc94c2f846e8b38dc700a1c.scope: Deactivated successfully.
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.802290    5001 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.802341    5001 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.802361    5001 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.802372    5001 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.802391    5001 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.805428    5001 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.805619    5001 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.805705    5001 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: E0806 20:40:18.808367    5001 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.809015    5001 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.809808    5001 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: E0806 20:40:18.809997    5001 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.810170    5001 server.go:1181] "Started kubelet"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.810768    5001 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.812306    5001 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.813776    5001 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.816182    5001 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: I0806 20:40:18.816634    5001 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: E0806 20:40:18.821895    5001 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: E0806 20:40:18.823913    5001 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:18 cka-02-worker2 kubelet[5001]: E0806 20:40:18.824044    5001 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:18 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:18 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:19 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 208.
Aug 06 20:40:19 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:19 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:19 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.003427    5026 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.021918    5026 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.021940    5026 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.022176    5026 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.023374    5026 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: W0806 20:40:20.023974    5026 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.024269    5026 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: E0806 20:40:20.024307    5026 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.027892    5026 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.027939    5026 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.027969    5026 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.027980    5026 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.028004    5026 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:20 cka-02-worker2 systemd[1]: run-r7a622e35a3bb4dddab4c2f8b3938119a.scope: Deactivated successfully.
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.032976    5026 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.032999    5026 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.033018    5026 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.033029    5026 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.033395    5026 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: E0806 20:40:20.035998    5026 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.036195    5026 server.go:1181] "Started kubelet"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.036359    5026 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.036979    5026 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.037808    5026 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.038370    5026 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: I0806 20:40:20.038427    5026 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: E0806 20:40:20.047840    5026 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: E0806 20:40:20.048895    5026 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:20 cka-02-worker2 kubelet[5026]: E0806 20:40:20.048913    5026 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:20 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:20 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:21 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 209.
Aug 06 20:40:21 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:21 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:21 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.273957    5049 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.281277    5049 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.281297    5049 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.281523    5049 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.282696    5049 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.283284    5049 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: W0806 20:40:21.283304    5049 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: E0806 20:40:21.283335    5049 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.287393    5049 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.287445    5049 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.287475    5049 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.287487    5049 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.287514    5049 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.290735    5049 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.290755    5049 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.290776    5049 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.290787    5049 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: E0806 20:40:21.290834    5049 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:21 cka-02-worker2 systemd[1]: run-rcd7c4164b8864a8794350103196f4887.scope: Deactivated successfully.
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.291411    5049 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: E0806 20:40:21.291579    5049 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.291740    5049 server.go:1181] "Started kubelet"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.292637    5049 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.293105    5049 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.293368    5049 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.298788    5049 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: I0806 20:40:21.299445    5049 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: E0806 20:40:21.303875    5049 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: E0806 20:40:21.305370    5049 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:21 cka-02-worker2 kubelet[5049]: E0806 20:40:21.305396    5049 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:21 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:21 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:22 cka-02-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 210.
Aug 06 20:40:22 cka-02-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:22 cka-02-worker2 systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:22 cka-02-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.584667    5077 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker2 systemd[1]: Started Kubernetes systemd probe.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.597586    5077 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.597613    5077 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.597831    5077 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.599184    5077 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: W0806 20:40:22.599771    5077 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:22 cka-02-worker2 systemd[1]: run-rffd3d3c6b2e340588977d657a1f7df56.scope: Deactivated successfully.
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.609614    5077 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: E0806 20:40:22.609801    5077 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.624400    5077 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.627076    5077 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.627108    5077 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.627123    5077 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.627155    5077 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.632407    5077 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.632435    5077 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.632453    5077 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.632465    5077 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.635628    5077 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: E0806 20:40:22.635815    5077 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.635969    5077 server.go:1181] "Started kubelet"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: E0806 20:40:22.636518    5077 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.636836    5077 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.658364    5077 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.670377    5077 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.683915    5077 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: I0806 20:40:22.684158    5077 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: E0806 20:40:22.686697    5077 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: E0806 20:40:22.688383    5077 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:22 cka-02-worker2 kubelet[5077]: E0806 20:40:22.688527    5077 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:22 cka-02-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:22 cka-02-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.
