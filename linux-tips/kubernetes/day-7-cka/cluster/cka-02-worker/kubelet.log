-- Journal begins at Sat 2022-08-06 20:35:23 UTC, ends at Sat 2022-08-06 20:40:22 UTC. --
Aug 06 20:35:23 cka-02-worker systemd[1]: Condition check resulted in kubelet: The Kubernetes Node Agent being skipped.
Aug 06 20:35:58 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:35:58 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.435845     178 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker kubelet[178]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.830924     178 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.830944     178 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.831167     178 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:35:58 cka-02-worker kubelet[178]: W0806 20:35:58.832790     178 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.832877     178 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.832975     178 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.856851     178 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.857036     178 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.857066     178 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.857080     178 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.857170     178 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.863230     178 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.863252     178 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.863270     178 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.863282     178 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.863844     178 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.864122     178 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:35:58 cka-02-worker kubelet[178]: W0806 20:35:58.864430     178 probe.go:268] Flexvolume plugin directory at /usr/libexec/kubernetes/kubelet-plugins/volume/exec/ does not exist. Recreating.
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.864733     178 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.864897     178 server.go:1181] "Started kubelet"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.866777     178 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.868208     178 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.874016     178 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker.1708dbd246e24179", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker", UID:"cka-02-worker", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 35, 58, 864875897, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 35, 58, 864875897, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:35:58 cka-02-worker kubelet[178]: W0806 20:35:58.874155     178 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.874176     178 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:35:58 cka-02-worker kubelet[178]: W0806 20:35:58.874686     178 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.874712     178 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.875602     178 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.879566     178 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:35:58 cka-02-worker kubelet[178]: I0806 20:35:58.880074     178 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.880870     178 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:35:58 cka-02-worker kubelet[178]: W0806 20:35:58.880916     178 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.880932     178 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.881652     178 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.883017     178 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:35:58 cka-02-worker kubelet[178]: E0806 20:35:58.883039     178 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:35:58 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:35:58 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:35:59 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 1.
Aug 06 20:35:59 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:35:59 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:35:59 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.043839     203 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker kubelet[203]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.065393     203 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.065421     203 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.065714     203 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:00 cka-02-worker kubelet[203]: E0806 20:36:00.069331     203 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:00 cka-02-worker kubelet[203]: W0806 20:36:00.169977     203 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.170176     203 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:00 cka-02-worker kubelet[203]: E0806 20:36:00.170229     203 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.186897     203 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.186995     203 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.187025     203 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.187048     203 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.187072     203 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.190319     203 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.190339     203 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.190355     203 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.190367     203 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:00 cka-02-worker kubelet[203]: E0806 20:36:00.190435     203 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.190758     203 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:00 cka-02-worker kubelet[203]: E0806 20:36:00.190940     203 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.191121     203 server.go:1181] "Started kubelet"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.192035     203 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.192116     203 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.192632     203 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.195678     203 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:00 cka-02-worker kubelet[203]: I0806 20:36:00.197799     203 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:00 cka-02-worker kubelet[203]: E0806 20:36:00.202199     203 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:00 cka-02-worker kubelet[203]: E0806 20:36:00.204220     203 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:00 cka-02-worker kubelet[203]: E0806 20:36:00.204337     203 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:00 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:00 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:01 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 2.
Aug 06 20:36:01 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:01 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:01 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.512686     230 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker kubelet[230]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.526812     230 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.526841     230 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.527077     230 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.527683     230 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.529462     230 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.529525     230 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:01 cka-02-worker kubelet[230]: W0806 20:36:01.529756     230 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.535914     230 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.535969     230 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.535991     230 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.536003     230 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.536023     230 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.538243     230 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.538264     230 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.538300     230 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.538312     230 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.538518     230 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.539101     230 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.539271     230 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.539418     230 server.go:1181] "Started kubelet"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.539755     230 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.540420     230 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.540731     230 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.545865     230 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:01 cka-02-worker kubelet[230]: I0806 20:36:01.549055     230 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.548221     230 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker.1708dbd2e64c4476", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker", UID:"cka-02-worker", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 36, 1, 539400822, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 36, 1, 539400822, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:36:01 cka-02-worker kubelet[230]: W0806 20:36:01.548574     230 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.549093     230 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker kubelet[230]: W0806 20:36:01.548595     230 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.549108     230 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:anonymous" cannot list resource "services" in API group "" at the cluster scope
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.551541     230 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:36:01 cka-02-worker kubelet[230]: W0806 20:36:01.551746     230 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.551769     230 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:anonymous" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.553462     230 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.557162     230 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:01 cka-02-worker kubelet[230]: E0806 20:36:01.557194     230 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:01 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:01 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:02 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 3.
Aug 06 20:36:02 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:02 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:02 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.763226     256 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:02 cka-02-worker kubelet[256]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.780211     256 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.780239     256 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.780544     256 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:02 cka-02-worker kubelet[256]: E0806 20:36:02.781443     256 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:02 cka-02-worker kubelet[256]: W0806 20:36:02.783356     256 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.783363     256 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:02 cka-02-worker kubelet[256]: E0806 20:36:02.783499     256 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.798720     256 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.798779     256 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.798798     256 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.798809     256 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.798834     256 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.800927     256 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.800948     256 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.800964     256 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.800974     256 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:02 cka-02-worker kubelet[256]: E0806 20:36:02.801024     256 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.801759     256 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:02 cka-02-worker kubelet[256]: E0806 20:36:02.802203     256 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.802615     256 server.go:1181] "Started kubelet"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.804360     256 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.804520     256 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.805720     256 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.807127     256 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:02 cka-02-worker kubelet[256]: I0806 20:36:02.807224     256 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:02 cka-02-worker kubelet[256]: E0806 20:36:02.807399     256 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:02 cka-02-worker kubelet[256]: E0806 20:36:02.809138     256 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:02 cka-02-worker kubelet[256]: E0806 20:36:02.809256     256 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:02 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:02 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:03 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 4.
Aug 06 20:36:03 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:03 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:03 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.015569     279 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker kubelet[279]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.028867     279 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.028926     279 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.029132     279 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:04 cka-02-worker kubelet[279]: E0806 20:36:04.032207     279 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.033797     279 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:04 cka-02-worker kubelet[279]: E0806 20:36:04.033842     279 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:04 cka-02-worker kubelet[279]: W0806 20:36:04.033800     279 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.038506     279 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.038570     279 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.038593     279 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.038608     279 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.038627     279 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.042093     279 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.042117     279 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.042134     279 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:04 cka-02-worker kubelet[279]: E0806 20:36:04.042360     279 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.042586     279 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.043321     279 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:04 cka-02-worker kubelet[279]: E0806 20:36:04.043508     279 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.043663     279 server.go:1181] "Started kubelet"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.044390     279 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.045374     279 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.049341     279 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.050148     279 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:04 cka-02-worker kubelet[279]: I0806 20:36:04.050218     279 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:04 cka-02-worker kubelet[279]: E0806 20:36:04.052346     279 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:04 cka-02-worker kubelet[279]: E0806 20:36:04.054774     279 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:04 cka-02-worker kubelet[279]: E0806 20:36:04.054801     279 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:04 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:04 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:05 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 5.
Aug 06 20:36:05 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:05 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:05 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.264603     301 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker kubelet[301]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.278328     301 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.278352     301 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.278775     301 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.279756     301 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:05 cka-02-worker kubelet[301]: W0806 20:36:05.373339     301 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.373396     301 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.373440     301 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.380843     301 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.380914     301 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.380933     301 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.380945     301 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.380969     301 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.386448     301 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.386579     301 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.386651     301 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.386721     301 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.386896     301 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.387517     301 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.387709     301 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.388017     301 server.go:1181] "Started kubelet"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.388196     301 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.389088     301 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.392710     301 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.395001     301 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:05 cka-02-worker kubelet[301]: I0806 20:36:05.395234     301 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.395970     301 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:05 cka-02-worker kubelet[301]: W0806 20:36:05.398292     301 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes "cka-02-worker" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.398331     301 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes "cka-02-worker" is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.398343     301 event.go:267] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"cka-02-worker.1708dbd3cbb0e781", GenerateName:"", Namespace:"default", SelfLink:"", UID:"", ResourceVersion:"", Generation:0, CreationTimestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, InvolvedObject:v1.ObjectReference{Kind:"Node", Namespace:"", Name:"cka-02-worker", UID:"cka-02-worker", APIVersion:"", ResourceVersion:"", FieldPath:""}, Reason:"Starting", Message:"Starting kubelet.", Source:v1.EventSource{Component:"kubelet", Host:"cka-02-worker"}, FirstTimestamp:time.Date(2022, time.August, 6, 20, 36, 5, 387978625, time.Local), LastTimestamp:time.Date(2022, time.August, 6, 20, 36, 5, 387978625, time.Local), Count:1, Type:"Normal", EventTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Series:(*v1.EventSeries)(nil), Action:"", Related:(*v1.ObjectReference)(nil), ReportingController:"", ReportingInstance:""}': 'events is forbidden: User "system:anonymous" cannot create resource "events" in API group "" in the namespace "default"' (will not retry!)
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.398446     301 controller.go:144] failed to ensure lease exists, will retry in 200ms, error: leases.coordination.k8s.io "cka-02-worker" is forbidden: User "system:anonymous" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-node-lease"
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.399110     301 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:05 cka-02-worker kubelet[301]: E0806 20:36:05.399194     301 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:05 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:05 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:06 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 6.
Aug 06 20:36:06 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:06 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:06 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.514250     323 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker kubelet[323]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.527838     323 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.527867     323 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.528091     323 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:06 cka-02-worker kubelet[323]: E0806 20:36:06.528664     323 bootstrap.go:240] unable to read existing bootstrap client config from /etc/kubernetes/kubelet.conf: invalid configuration: [unable to read client-cert /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory, unable to read client-key /var/lib/kubelet/pki/kubelet-client-current.pem for default-auth due to open /var/lib/kubelet/pki/kubelet-client-current.pem: no such file or directory]
Aug 06 20:36:06 cka-02-worker kubelet[323]: W0806 20:36:06.530357     323 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.530634     323 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:06 cka-02-worker kubelet[323]: E0806 20:36:06.530762     323 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.553296     323 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.553348     323 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.553367     323 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.553379     323 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.553399     323 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.555733     323 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.555756     323 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.555773     323 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.555788     323 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:06 cka-02-worker kubelet[323]: E0806 20:36:06.556179     323 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.556478     323 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:06 cka-02-worker kubelet[323]: E0806 20:36:06.556858     323 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.557127     323 server.go:1181] "Started kubelet"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.558218     323 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.558469     323 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.558784     323 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.561865     323 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:06 cka-02-worker kubelet[323]: I0806 20:36:06.563646     323 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:06 cka-02-worker kubelet[323]: E0806 20:36:06.566428     323 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:06 cka-02-worker kubelet[323]: E0806 20:36:06.574311     323 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:06 cka-02-worker kubelet[323]: E0806 20:36:06.574453     323 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:06 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:06 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:07 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 7.
Aug 06 20:36:07 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:07 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:07 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.760871     352 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:07 cka-02-worker kubelet[352]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.773583     352 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.773606     352 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.773820     352 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.775100     352 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:07 cka-02-worker kubelet[352]: W0806 20:36:07.775802     352 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.775926     352 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:07 cka-02-worker kubelet[352]: E0806 20:36:07.775979     352 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.780015     352 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.780067     352 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.780085     352 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.780096     352 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.780114     352 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.782642     352 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.782668     352 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.782686     352 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.782702     352 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:07 cka-02-worker kubelet[352]: E0806 20:36:07.783055     352 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.783189     352 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:07 cka-02-worker kubelet[352]: E0806 20:36:07.783371     352 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.783553     352 server.go:1181] "Started kubelet"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.783820     352 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.786044     352 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.786316     352 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.786516     352 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:07 cka-02-worker kubelet[352]: I0806 20:36:07.793222     352 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:07 cka-02-worker kubelet[352]: E0806 20:36:07.798352     352 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:07 cka-02-worker kubelet[352]: E0806 20:36:07.799958     352 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:07 cka-02-worker kubelet[352]: E0806 20:36:07.799987     352 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:07 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:07 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:08 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 8.
Aug 06 20:36:08 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:08 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:08 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.019108     376 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker kubelet[376]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.032734     376 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.032757     376 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.033025     376 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.034207     376 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:09 cka-02-worker kubelet[376]: W0806 20:36:09.034796     376 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.034824     376 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:09 cka-02-worker kubelet[376]: E0806 20:36:09.034888     376 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.039021     376 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.039083     376 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.039107     376 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.039118     376 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.039158     376 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.042413     376 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.042436     376 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.042452     376 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.042464     376 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:09 cka-02-worker kubelet[376]: E0806 20:36:09.042717     376 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.044177     376 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:09 cka-02-worker kubelet[376]: E0806 20:36:09.047955     376 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.048142     376 server.go:1181] "Started kubelet"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.051401     376 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.053019     376 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.053612     376 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.054718     376 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:09 cka-02-worker kubelet[376]: I0806 20:36:09.054782     376 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:09 cka-02-worker kubelet[376]: E0806 20:36:09.058517     376 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:09 cka-02-worker kubelet[376]: E0806 20:36:09.060707     376 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:09 cka-02-worker kubelet[376]: E0806 20:36:09.060788     376 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:09 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:09 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:10 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 9.
Aug 06 20:36:10 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:10 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:10 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.259249     397 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker kubelet[397]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.274909     397 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.275025     397 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.275303     397 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.277226     397 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:10 cka-02-worker kubelet[397]: W0806 20:36:10.278185     397 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.278227     397 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:10 cka-02-worker kubelet[397]: E0806 20:36:10.278281     397 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.294936     397 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.294995     397 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.295015     397 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.295027     397 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.295405     397 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.298518     397 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.298539     397 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.298557     397 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.298569     397 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:10 cka-02-worker kubelet[397]: E0806 20:36:10.298682     397 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.298926     397 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:10 cka-02-worker kubelet[397]: E0806 20:36:10.299080     397 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.299214     397 server.go:1181] "Started kubelet"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.299833     397 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.300486     397 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.300564     397 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.303703     397 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:10 cka-02-worker kubelet[397]: I0806 20:36:10.306116     397 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:10 cka-02-worker kubelet[397]: E0806 20:36:10.306860     397 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:10 cka-02-worker kubelet[397]: E0806 20:36:10.308639     397 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:10 cka-02-worker kubelet[397]: E0806 20:36:10.308819     397 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:10 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:10 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:11 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 10.
Aug 06 20:36:11 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:11 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:11 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.506311     423 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker kubelet[423]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.519674     423 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.519698     423 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.519925     423 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.521136     423 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:11 cka-02-worker kubelet[423]: W0806 20:36:11.521716     423 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.521781     423 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:11 cka-02-worker kubelet[423]: E0806 20:36:11.521833     423 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.526120     423 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.526177     423 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.526195     423 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.526206     423 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.526234     423 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.529821     423 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.529844     423 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.529862     423 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.529906     423 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.531174     423 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:11 cka-02-worker kubelet[423]: E0806 20:36:11.532938     423 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:11 cka-02-worker kubelet[423]: E0806 20:36:11.532937     423 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.533213     423 server.go:1181] "Started kubelet"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.534949     423 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.535196     423 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.535776     423 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.539071     423 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:11 cka-02-worker kubelet[423]: I0806 20:36:11.539172     423 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:11 cka-02-worker kubelet[423]: E0806 20:36:11.540124     423 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:11 cka-02-worker kubelet[423]: E0806 20:36:11.551342     423 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:11 cka-02-worker kubelet[423]: E0806 20:36:11.551538     423 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:11 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:11 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:12 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 11.
Aug 06 20:36:12 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:12 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:12 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.766085     448 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:12 cka-02-worker kubelet[448]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.782030     448 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.782055     448 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.782343     448 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.784317     448 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.785314     448 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:12 cka-02-worker kubelet[448]: W0806 20:36:12.785316     448 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:12 cka-02-worker kubelet[448]: E0806 20:36:12.785361     448 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.800961     448 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.801011     448 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.801027     448 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.801038     448 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.801057     448 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.804584     448 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.804604     448 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.804620     448 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.804634     448 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:12 cka-02-worker kubelet[448]: E0806 20:36:12.804753     448 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.804966     448 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:12 cka-02-worker kubelet[448]: E0806 20:36:12.805149     448 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.805297     448 server.go:1181] "Started kubelet"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.805493     448 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.806097     448 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.807537     448 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.807978     448 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:12 cka-02-worker kubelet[448]: I0806 20:36:12.808843     448 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:12 cka-02-worker kubelet[448]: E0806 20:36:12.809624     448 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:12 cka-02-worker kubelet[448]: E0806 20:36:12.811148     448 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:12 cka-02-worker kubelet[448]: E0806 20:36:12.811170     448 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:12 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:12 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:13 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 12.
Aug 06 20:36:13 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:13 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:13 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.012779     470 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker kubelet[470]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.028841     470 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.028868     470 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.029142     470 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.030578     470 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:14 cka-02-worker kubelet[470]: W0806 20:36:14.031237     470 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.031256     470 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:14 cka-02-worker kubelet[470]: E0806 20:36:14.031297     470 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.035196     470 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.035247     470 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.035269     470 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.035280     470 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.035299     470 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.039530     470 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.039551     470 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.039568     470 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.039579     470 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:14 cka-02-worker kubelet[470]: E0806 20:36:14.039643     470 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.039974     470 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:14 cka-02-worker kubelet[470]: E0806 20:36:14.040198     470 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.040517     470 server.go:1181] "Started kubelet"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.041315     470 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.041435     470 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.042286     470 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.043350     470 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:14 cka-02-worker kubelet[470]: I0806 20:36:14.043529     470 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:14 cka-02-worker kubelet[470]: E0806 20:36:14.050725     470 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:14 cka-02-worker kubelet[470]: E0806 20:36:14.053233     470 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:14 cka-02-worker kubelet[470]: E0806 20:36:14.053285     470 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:14 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:14 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:15 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 13.
Aug 06 20:36:15 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:15 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:15 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.264026     493 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker kubelet[493]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.278693     493 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.278716     493 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.278940     493 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.280157     493 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.280726     493 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:15 cka-02-worker kubelet[493]: W0806 20:36:15.280769     493 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:15 cka-02-worker kubelet[493]: E0806 20:36:15.280773     493 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.284879     493 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.284932     493 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.284949     493 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.284960     493 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.284978     493 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.288048     493 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.288073     493 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.288096     493 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.288107     493 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:15 cka-02-worker kubelet[493]: E0806 20:36:15.288214     493 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.288473     493 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:15 cka-02-worker kubelet[493]: E0806 20:36:15.288630     493 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.288801     493 server.go:1181] "Started kubelet"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.290920     493 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.296108     493 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.297873     493 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.299222     493 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:15 cka-02-worker kubelet[493]: I0806 20:36:15.299415     493 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:15 cka-02-worker kubelet[493]: E0806 20:36:15.301292     493 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:15 cka-02-worker kubelet[493]: E0806 20:36:15.303945     493 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:15 cka-02-worker kubelet[493]: E0806 20:36:15.303974     493 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:15 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:15 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:16 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 14.
Aug 06 20:36:16 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:16 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:16 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.511296     517 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker kubelet[517]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.526801     517 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.526827     517 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.527041     517 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.528370     517 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.529053     517 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:16 cka-02-worker kubelet[517]: W0806 20:36:16.529064     517 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:16 cka-02-worker kubelet[517]: E0806 20:36:16.529115     517 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.544870     517 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.544946     517 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.544965     517 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.544976     517 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.544998     517 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.548579     517 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.548601     517 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.548619     517 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.548631     517 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:16 cka-02-worker kubelet[517]: E0806 20:36:16.548765     517 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.549191     517 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:16 cka-02-worker kubelet[517]: E0806 20:36:16.549360     517 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.549508     517 server.go:1181] "Started kubelet"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.549635     517 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.550537     517 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.551664     517 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.553453     517 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:16 cka-02-worker kubelet[517]: I0806 20:36:16.553787     517 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:16 cka-02-worker kubelet[517]: E0806 20:36:16.554890     517 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:16 cka-02-worker kubelet[517]: E0806 20:36:16.557095     517 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:16 cka-02-worker kubelet[517]: E0806 20:36:16.557122     517 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:16 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:16 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:17 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 15.
Aug 06 20:36:17 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:17 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:17 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.764555     540 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:17 cka-02-worker kubelet[540]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.776522     540 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.776545     540 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.776768     540 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.778196     540 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:17 cka-02-worker kubelet[540]: W0806 20:36:17.779015     540 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.779446     540 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:17 cka-02-worker kubelet[540]: E0806 20:36:17.779484     540 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.795225     540 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.795284     540 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.795304     540 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.795316     540 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.795335     540 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.797483     540 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.797501     540 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.797521     540 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.797532     540 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:17 cka-02-worker kubelet[540]: E0806 20:36:17.797637     540 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.798276     540 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:17 cka-02-worker kubelet[540]: E0806 20:36:17.798460     540 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.798636     540 server.go:1181] "Started kubelet"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.799575     540 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.800306     540 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.800834     540 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.801359     540 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:17 cka-02-worker kubelet[540]: I0806 20:36:17.802504     540 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:17 cka-02-worker kubelet[540]: E0806 20:36:17.804015     540 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:17 cka-02-worker kubelet[540]: E0806 20:36:17.805112     540 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:17 cka-02-worker kubelet[540]: E0806 20:36:17.805305     540 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:17 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:17 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:18 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 16.
Aug 06 20:36:18 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:18 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:18 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.012067     562 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker kubelet[562]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.027519     562 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.027542     562 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.027752     562 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.029049     562 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:19 cka-02-worker kubelet[562]: W0806 20:36:19.029669     562 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.029788     562 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:19 cka-02-worker kubelet[562]: E0806 20:36:19.029848     562 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.033704     562 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.033751     562 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.033766     562 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.033777     562 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.033795     562 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.036982     562 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.037002     562 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.037019     562 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.037030     562 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:19 cka-02-worker kubelet[562]: E0806 20:36:19.037205     562 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.037432     562 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:19 cka-02-worker kubelet[562]: E0806 20:36:19.037703     562 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.037947     562 server.go:1181] "Started kubelet"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.038244     562 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.038810     562 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.039323     562 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.044310     562 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:19 cka-02-worker kubelet[562]: I0806 20:36:19.044490     562 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:19 cka-02-worker kubelet[562]: E0806 20:36:19.046353     562 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:19 cka-02-worker kubelet[562]: E0806 20:36:19.047406     562 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:19 cka-02-worker kubelet[562]: E0806 20:36:19.047431     562 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:19 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:19 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:20 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 17.
Aug 06 20:36:20 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:20 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:20 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.259590     585 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker kubelet[585]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.271645     585 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.271668     585 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.271992     585 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.273267     585 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:20 cka-02-worker kubelet[585]: W0806 20:36:20.274337     585 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.274461     585 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:20 cka-02-worker kubelet[585]: E0806 20:36:20.274971     585 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.290540     585 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.290592     585 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.290610     585 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.290621     585 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.290640     585 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.295047     585 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.295072     585 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.295090     585 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.295103     585 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:20 cka-02-worker kubelet[585]: E0806 20:36:20.295155     585 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.295537     585 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:20 cka-02-worker kubelet[585]: E0806 20:36:20.295797     585 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.295980     585 server.go:1181] "Started kubelet"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.297106     585 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.297569     585 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.301642     585 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.301747     585 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:20 cka-02-worker kubelet[585]: I0806 20:36:20.303424     585 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:20 cka-02-worker kubelet[585]: E0806 20:36:20.307395     585 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:20 cka-02-worker kubelet[585]: E0806 20:36:20.309630     585 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:20 cka-02-worker kubelet[585]: E0806 20:36:20.309655     585 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:21 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:21 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:22 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 18.
Aug 06 20:36:22 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:22 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:22 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.512378     610 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker kubelet[610]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.529763     610 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.529986     610 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.530251     610 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.531516     610 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:22 cka-02-worker kubelet[610]: W0806 20:36:22.532474     610 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.532962     610 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:22 cka-02-worker kubelet[610]: E0806 20:36:22.533006     610 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.536699     610 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.536749     610 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.536765     610 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.536777     610 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.536796     610 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.538926     610 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.538945     610 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.538962     610 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.538973     610 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.539340     610 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:22 cka-02-worker kubelet[610]: E0806 20:36:22.542069     610 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:22 cka-02-worker kubelet[610]: E0806 20:36:22.542201     610 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.542413     610 server.go:1181] "Started kubelet"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.544723     610 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.545613     610 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.558400     610 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.560162     610 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:22 cka-02-worker kubelet[610]: I0806 20:36:22.561193     610 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:22 cka-02-worker kubelet[610]: E0806 20:36:22.566227     610 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:22 cka-02-worker kubelet[610]: E0806 20:36:22.567335     610 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:22 cka-02-worker kubelet[610]: E0806 20:36:22.567357     610 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:22 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:22 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:23 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 19.
Aug 06 20:36:23 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:23 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:23 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.762029     633 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker kubelet[633]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.775106     633 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.775130     633 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.775385     633 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.777241     633 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:23 cka-02-worker kubelet[633]: W0806 20:36:23.778272     633 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.778978     633 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:23 cka-02-worker kubelet[633]: E0806 20:36:23.779211     633 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.782716     633 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.782767     633 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.782786     633 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.782798     633 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.782817     633 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.784863     633 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.784902     633 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.784923     633 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.784934     633 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.785510     633 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:23 cka-02-worker kubelet[633]: E0806 20:36:23.787954     633 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:23 cka-02-worker kubelet[633]: E0806 20:36:23.787954     633 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.788207     633 server.go:1181] "Started kubelet"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.788638     633 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.789038     633 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.789441     633 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.795257     633 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:23 cka-02-worker kubelet[633]: I0806 20:36:23.795511     633 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:23 cka-02-worker kubelet[633]: E0806 20:36:23.796006     633 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:23 cka-02-worker kubelet[633]: E0806 20:36:23.799633     633 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:23 cka-02-worker kubelet[633]: E0806 20:36:23.800011     633 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:23 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:23 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:24 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 20.
Aug 06 20:36:24 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:24 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:24 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.018834     655 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker kubelet[655]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.047918     655 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.047941     655 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.048162     655 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.049384     655 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:25 cka-02-worker kubelet[655]: W0806 20:36:25.049951     655 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.049968     655 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:25 cka-02-worker kubelet[655]: E0806 20:36:25.050013     655 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.053899     655 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.053959     655 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.053983     655 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.053994     655 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.054024     655 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.071110     655 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.071131     655 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.071160     655 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.071171     655 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.072472     655 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:25 cka-02-worker kubelet[655]: E0806 20:36:25.072649     655 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:25 cka-02-worker kubelet[655]: E0806 20:36:25.072649     655 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.072896     655 server.go:1181] "Started kubelet"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.074016     655 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.079149     655 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.079919     655 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.081687     655 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:25 cka-02-worker kubelet[655]: I0806 20:36:25.081896     655 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:25 cka-02-worker kubelet[655]: E0806 20:36:25.085779     655 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:25 cka-02-worker kubelet[655]: E0806 20:36:25.089588     655 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:25 cka-02-worker kubelet[655]: E0806 20:36:25.089720     655 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:25 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:25 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:26 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 21.
Aug 06 20:36:26 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:26 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:26 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.262627     677 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker kubelet[677]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.274763     677 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.274786     677 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.275104     677 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.276498     677 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:26 cka-02-worker kubelet[677]: W0806 20:36:26.277132     677 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.277220     677 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:26 cka-02-worker kubelet[677]: E0806 20:36:26.277267     677 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.293640     677 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.293694     677 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.293716     677 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.293727     677 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.293758     677 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.299442     677 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.299570     677 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.299655     677 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.299869     677 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:26 cka-02-worker kubelet[677]: E0806 20:36:26.299816     677 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.300767     677 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:26 cka-02-worker kubelet[677]: E0806 20:36:26.301183     677 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.301378     677 server.go:1181] "Started kubelet"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.302092     677 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.302275     677 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.302869     677 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.305271     677 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:26 cka-02-worker kubelet[677]: I0806 20:36:26.305348     677 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:26 cka-02-worker kubelet[677]: E0806 20:36:26.309304     677 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:26 cka-02-worker kubelet[677]: E0806 20:36:26.315575     677 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:26 cka-02-worker kubelet[677]: E0806 20:36:26.315609     677 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:26 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:26 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:27 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 22.
Aug 06 20:36:27 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:27 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:27 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.508319     702 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker kubelet[702]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.521656     702 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.521681     702 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.521897     702 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.523132     702 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:27 cka-02-worker kubelet[702]: W0806 20:36:27.523751     702 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.523826     702 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:27 cka-02-worker kubelet[702]: E0806 20:36:27.523965     702 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.539992     702 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.540034     702 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.540050     702 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.540114     702 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.540132     702 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.547005     702 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.547028     702 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.547045     702 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.547058     702 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:27 cka-02-worker kubelet[702]: E0806 20:36:27.547330     702 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.547798     702 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:27 cka-02-worker kubelet[702]: E0806 20:36:27.548075     702 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.548265     702 server.go:1181] "Started kubelet"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.549017     702 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.549661     702 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.550758     702 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.557393     702 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:27 cka-02-worker kubelet[702]: I0806 20:36:27.557686     702 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:27 cka-02-worker kubelet[702]: E0806 20:36:27.559904     702 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:27 cka-02-worker kubelet[702]: E0806 20:36:27.563808     702 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:27 cka-02-worker kubelet[702]: E0806 20:36:27.563837     702 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:27 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:27 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:28 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 23.
Aug 06 20:36:28 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:28 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:28 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.767403     725 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker kubelet[725]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.780665     725 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.780758     725 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.781037     725 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.782303     725 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:28 cka-02-worker kubelet[725]: W0806 20:36:28.783019     725 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.783286     725 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:28 cka-02-worker kubelet[725]: E0806 20:36:28.783331     725 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.800851     725 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.800923     725 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.800943     725 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.800954     725 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.800972     725 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.810731     725 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.810755     725 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.810772     725 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.810785     725 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:28 cka-02-worker kubelet[725]: E0806 20:36:28.811028     725 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.812306     725 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:28 cka-02-worker kubelet[725]: E0806 20:36:28.812567     725 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.812730     725 server.go:1181] "Started kubelet"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.813363     725 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.813781     725 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.816247     725 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.821009     725 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:28 cka-02-worker kubelet[725]: I0806 20:36:28.821075     725 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:28 cka-02-worker kubelet[725]: E0806 20:36:28.824080     725 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:28 cka-02-worker kubelet[725]: E0806 20:36:28.827394     725 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:36:28 cka-02-worker kubelet[725]: E0806 20:36:28.833130     725 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:28 cka-02-worker kubelet[725]: E0806 20:36:28.833157     725 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:28 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:28 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:29 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 24.
Aug 06 20:36:29 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:29 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:29 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.026146     751 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker kubelet[751]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.038019     751 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.038114     751 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.038399     751 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.039625     751 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:30 cka-02-worker kubelet[751]: W0806 20:36:30.040147     751 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.040274     751 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:30 cka-02-worker kubelet[751]: E0806 20:36:30.040311     751 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.044281     751 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.044337     751 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.044353     751 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.044364     751 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.044388     751 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.048947     751 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.048969     751 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.048999     751 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.049011     751 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.049418     751 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:30 cka-02-worker kubelet[751]: E0806 20:36:30.051938     751 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:30 cka-02-worker kubelet[751]: E0806 20:36:30.051969     751 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.052130     751 server.go:1181] "Started kubelet"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.052908     751 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.053524     751 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.055365     751 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.055909     751 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:30 cka-02-worker kubelet[751]: I0806 20:36:30.056005     751 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:30 cka-02-worker kubelet[751]: E0806 20:36:30.061036     751 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:30 cka-02-worker kubelet[751]: E0806 20:36:30.062356     751 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:30 cka-02-worker kubelet[751]: E0806 20:36:30.062521     751 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:30 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:30 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:31 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 25.
Aug 06 20:36:31 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:31 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:31 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.268458     771 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker kubelet[771]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.280892     771 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.280916     771 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.281159     771 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.283160     771 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:31 cka-02-worker kubelet[771]: W0806 20:36:31.283729     771 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.283924     771 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:31 cka-02-worker kubelet[771]: E0806 20:36:31.283979     771 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.305093     771 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.305149     771 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.305176     771 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.305187     771 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.305211     771 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.312190     771 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.312219     771 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.312237     771 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.312249     771 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:31 cka-02-worker kubelet[771]: E0806 20:36:31.312408     771 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.312951     771 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:31 cka-02-worker kubelet[771]: E0806 20:36:31.313111     771 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.313248     771 server.go:1181] "Started kubelet"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.314323     771 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.314526     771 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.316558     771 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.318944     771 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:31 cka-02-worker kubelet[771]: I0806 20:36:31.319022     771 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:31 cka-02-worker kubelet[771]: E0806 20:36:31.321372     771 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:31 cka-02-worker kubelet[771]: E0806 20:36:31.324242     771 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:31 cka-02-worker kubelet[771]: E0806 20:36:31.324381     771 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:31 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:31 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:32 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 26.
Aug 06 20:36:32 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:32 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:32 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.506508     794 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker kubelet[794]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.518915     794 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.518935     794 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.520533     794 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.522004     794 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:32 cka-02-worker kubelet[794]: W0806 20:36:32.522689     794 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.523380     794 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:32 cka-02-worker kubelet[794]: E0806 20:36:32.523447     794 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.527207     794 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.527260     794 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.527278     794 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.527289     794 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.527308     794 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.530819     794 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.530844     794 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.530861     794 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.530873     794 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:32 cka-02-worker kubelet[794]: E0806 20:36:32.533348     794 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.533672     794 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:32 cka-02-worker kubelet[794]: E0806 20:36:32.533942     794 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.534127     794 server.go:1181] "Started kubelet"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.535507     794 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.536713     794 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.536925     794 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.539583     794 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:32 cka-02-worker kubelet[794]: E0806 20:36:32.541679     794 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:32 cka-02-worker kubelet[794]: I0806 20:36:32.543475     794 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:32 cka-02-worker kubelet[794]: E0806 20:36:32.559365     794 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:36:32 cka-02-worker kubelet[794]: E0806 20:36:32.563911     794 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:32 cka-02-worker kubelet[794]: E0806 20:36:32.563935     794 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:32 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:32 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:33 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 27.
Aug 06 20:36:33 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:33 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:33 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.762794     821 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker kubelet[821]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.775643     821 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.775665     821 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.775852     821 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.777082     821 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.777667     821 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:33 cka-02-worker kubelet[821]: W0806 20:36:33.777674     821 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:33 cka-02-worker kubelet[821]: E0806 20:36:33.777834     821 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.781824     821 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.781879     821 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.781903     821 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.781926     821 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.781944     821 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.785257     821 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.785279     821 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.785297     821 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.785308     821 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.785858     821 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:33 cka-02-worker kubelet[821]: E0806 20:36:33.787931     821 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:33 cka-02-worker kubelet[821]: E0806 20:36:33.787933     821 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.788139     821 server.go:1181] "Started kubelet"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.788182     821 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.788726     821 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.788855     821 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.794980     821 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:33 cka-02-worker kubelet[821]: I0806 20:36:33.795065     821 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:33 cka-02-worker kubelet[821]: E0806 20:36:33.799476     821 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:33 cka-02-worker kubelet[821]: E0806 20:36:33.801416     821 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:33 cka-02-worker kubelet[821]: E0806 20:36:33.801538     821 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:33 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:33 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:34 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 28.
Aug 06 20:36:34 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:34 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:34 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.008998     843 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker kubelet[843]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.021755     843 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.021778     843 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.022004     843 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.023204     843 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.023761     843 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:35 cka-02-worker kubelet[843]: W0806 20:36:35.023779     843 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:35 cka-02-worker kubelet[843]: E0806 20:36:35.023933     843 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.044796     843 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.044864     843 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.044944     843 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.044960     843 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.044980     843 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.047930     843 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.047951     843 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.047985     843 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.047997     843 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:35 cka-02-worker kubelet[843]: E0806 20:36:35.048159     843 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.051381     843 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:35 cka-02-worker kubelet[843]: E0806 20:36:35.051537     843 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.051686     843 server.go:1181] "Started kubelet"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.053717     843 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.054168     843 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.054248     843 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.057170     843 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:35 cka-02-worker kubelet[843]: I0806 20:36:35.057837     843 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:35 cka-02-worker kubelet[843]: E0806 20:36:35.071240     843 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:35 cka-02-worker kubelet[843]: E0806 20:36:35.073842     843 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:35 cka-02-worker kubelet[843]: E0806 20:36:35.074004     843 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:35 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:35 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:36 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 29.
Aug 06 20:36:36 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:36 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:36 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.259656     865 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker kubelet[865]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.275848     865 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.275959     865 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.276169     865 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.277361     865 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:36 cka-02-worker kubelet[865]: W0806 20:36:36.277941     865 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.278228     865 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:36 cka-02-worker kubelet[865]: E0806 20:36:36.278267     865 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.282363     865 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.282415     865 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.282431     865 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.282442     865 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.282464     865 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.285723     865 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.285805     865 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.285902     865 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.285963     865 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.289765     865 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:36 cka-02-worker kubelet[865]: E0806 20:36:36.290113     865 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:36 cka-02-worker kubelet[865]: E0806 20:36:36.290262     865 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.290470     865 server.go:1181] "Started kubelet"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.290670     865 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.291591     865 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.291781     865 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.296142     865 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:36 cka-02-worker kubelet[865]: I0806 20:36:36.299222     865 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:36 cka-02-worker kubelet[865]: E0806 20:36:36.299553     865 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:36 cka-02-worker kubelet[865]: E0806 20:36:36.301165     865 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:36 cka-02-worker kubelet[865]: E0806 20:36:36.301190     865 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:36 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:36 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:37 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 30.
Aug 06 20:36:37 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:37 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:37 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.512275     885 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker kubelet[885]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.526714     885 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.526738     885 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.526966     885 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.528231     885 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:37 cka-02-worker kubelet[885]: W0806 20:36:37.528817     885 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.528819     885 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:37 cka-02-worker kubelet[885]: E0806 20:36:37.529067     885 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.534224     885 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.534286     885 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.534305     885 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.534317     885 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.534336     885 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.536844     885 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.536864     885 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.536930     885 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.536944     885 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.537314     885 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:37 cka-02-worker kubelet[885]: E0806 20:36:37.539976     885 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:37 cka-02-worker kubelet[885]: E0806 20:36:37.539979     885 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.540237     885 server.go:1181] "Started kubelet"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.541509     885 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.545634     885 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.545937     885 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.546576     885 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:37 cka-02-worker kubelet[885]: I0806 20:36:37.548204     885 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:37 cka-02-worker kubelet[885]: E0806 20:36:37.557507     885 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:37 cka-02-worker kubelet[885]: E0806 20:36:37.561795     885 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:36:37 cka-02-worker kubelet[885]: E0806 20:36:37.570236     885 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:37 cka-02-worker kubelet[885]: E0806 20:36:37.570348     885 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:37 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:37 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:38 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 31.
Aug 06 20:36:38 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:38 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:38 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.769264     909 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker kubelet[909]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.784211     909 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.784259     909 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.784443     909 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.785665     909 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:38 cka-02-worker kubelet[909]: W0806 20:36:38.786250     909 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.786314     909 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:38 cka-02-worker kubelet[909]: E0806 20:36:38.786413     909 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.790796     909 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.790850     909 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.790868     909 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.790887     909 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.790909     909 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.794243     909 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.794267     909 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.794299     909 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.794311     909 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.794709     909 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:38 cka-02-worker kubelet[909]: E0806 20:36:38.796923     909 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:38 cka-02-worker kubelet[909]: E0806 20:36:38.796926     909 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.797089     909 server.go:1181] "Started kubelet"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.797748     909 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.798157     909 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.806902     909 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.810061     909 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:38 cka-02-worker kubelet[909]: I0806 20:36:38.810912     909 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:38 cka-02-worker kubelet[909]: E0806 20:36:38.811568     909 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:38 cka-02-worker kubelet[909]: E0806 20:36:38.814868     909 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:38 cka-02-worker kubelet[909]: E0806 20:36:38.814979     909 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:38 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:38 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:39 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 32.
Aug 06 20:36:39 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:39 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:39 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.014147     933 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker kubelet[933]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.026720     933 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.026744     933 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.026994     933 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.028350     933 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:40 cka-02-worker kubelet[933]: W0806 20:36:40.030034     933 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.030181     933 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:40 cka-02-worker kubelet[933]: E0806 20:36:40.030277     933 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.047784     933 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.047846     933 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.047875     933 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.047931     933 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.047960     933 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.056836     933 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.057470     933 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.057528     933 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.057541     933 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:40 cka-02-worker kubelet[933]: E0806 20:36:40.057635     933 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.059620     933 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:40 cka-02-worker kubelet[933]: E0806 20:36:40.059840     933 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.060123     933 server.go:1181] "Started kubelet"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.061877     933 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.062789     933 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.063460     933 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.065275     933 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:40 cka-02-worker kubelet[933]: I0806 20:36:40.065403     933 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:40 cka-02-worker kubelet[933]: E0806 20:36:40.071068     933 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:40 cka-02-worker kubelet[933]: E0806 20:36:40.076774     933 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:40 cka-02-worker kubelet[933]: E0806 20:36:40.076807     933 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:40 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:40 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:41 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 33.
Aug 06 20:36:41 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:41 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:41 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.265012     955 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker kubelet[955]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.275651     955 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.275675     955 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.275957     955 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.277287     955 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:41 cka-02-worker kubelet[955]: W0806 20:36:41.278330     955 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.278539     955 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:41 cka-02-worker kubelet[955]: E0806 20:36:41.278572     955 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.282757     955 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.282813     955 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.282835     955 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.282847     955 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.282866     955 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.285094     955 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.285115     955 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.285147     955 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.285158     955 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.285583     955 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:41 cka-02-worker kubelet[955]: E0806 20:36:41.288932     955 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:41 cka-02-worker kubelet[955]: E0806 20:36:41.288931     955 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.289110     955 server.go:1181] "Started kubelet"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.289217     955 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.290520     955 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.296770     955 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.297101     955 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:41 cka-02-worker kubelet[955]: I0806 20:36:41.301911     955 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:41 cka-02-worker kubelet[955]: E0806 20:36:41.307847     955 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:41 cka-02-worker kubelet[955]: E0806 20:36:41.310117     955 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:41 cka-02-worker kubelet[955]: E0806 20:36:41.310256     955 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:41 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:41 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:42 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 34.
Aug 06 20:36:42 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:42 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:42 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.510279     978 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker kubelet[978]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.520783     978 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.520801     978 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.521017     978 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.522184     978 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.522733     978 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:42 cka-02-worker kubelet[978]: W0806 20:36:42.522758     978 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:42 cka-02-worker kubelet[978]: E0806 20:36:42.522838     978 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.526973     978 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.527031     978 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.527071     978 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.527083     978 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.527111     978 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.531697     978 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.531719     978 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.531735     978 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.531746     978 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.532210     978 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:42 cka-02-worker kubelet[978]: E0806 20:36:42.533954     978 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.534116     978 server.go:1181] "Started kubelet"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.534757     978 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.535353     978 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:42 cka-02-worker kubelet[978]: E0806 20:36:42.535781     978 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.536445     978 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.544112     978 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:42 cka-02-worker kubelet[978]: E0806 20:36:42.545071     978 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:42 cka-02-worker kubelet[978]: I0806 20:36:42.546179     978 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:42 cka-02-worker kubelet[978]: E0806 20:36:42.549479     978 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:42 cka-02-worker kubelet[978]: E0806 20:36:42.549519     978 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:42 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:42 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:43 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 35.
Aug 06 20:36:43 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:43 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:43 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.767174    1002 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.777677    1002 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.777697    1002 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.777928    1002 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.779189    1002 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:43 cka-02-worker kubelet[1002]: W0806 20:36:43.779759    1002 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.779999    1002 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: E0806 20:36:43.780040    1002 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.796169    1002 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.796218    1002 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.796237    1002 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.796248    1002 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.796273    1002 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.798994    1002 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.799014    1002 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.799035    1002 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.799047    1002 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: E0806 20:36:43.803348    1002 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.803531    1002 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: E0806 20:36:43.803922    1002 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.804134    1002 server.go:1181] "Started kubelet"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.804539    1002 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.804870    1002 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.805128    1002 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.805363    1002 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: I0806 20:36:43.805637    1002 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: E0806 20:36:43.816657    1002 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:43 cka-02-worker kubelet[1002]: E0806 20:36:43.820186    1002 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:43 cka-02-worker kubelet[1002]: E0806 20:36:43.820341    1002 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:43 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:43 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:44 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 36.
Aug 06 20:36:44 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:44 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:44 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.014260    1025 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.025263    1025 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.025282    1025 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.025467    1025 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.026671    1025 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:45 cka-02-worker kubelet[1025]: W0806 20:36:45.027258    1025 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.027633    1025 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: E0806 20:36:45.027681    1025 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.045792    1025 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.046020    1025 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.046111    1025 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.046178    1025 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.046246    1025 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.057413    1025 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.057442    1025 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.057460    1025 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.057471    1025 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: E0806 20:36:45.057559    1025 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.058044    1025 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: E0806 20:36:45.058470    1025 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.058630    1025 server.go:1181] "Started kubelet"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.058800    1025 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.059507    1025 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.060034    1025 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.061525    1025 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: I0806 20:36:45.061606    1025 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: E0806 20:36:45.068697    1025 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:45 cka-02-worker kubelet[1025]: E0806 20:36:45.071483    1025 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:45 cka-02-worker kubelet[1025]: E0806 20:36:45.071509    1025 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:45 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:45 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:46 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 37.
Aug 06 20:36:46 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:46 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:46 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.268294    1047 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.277826    1047 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.278148    1047 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.278381    1047 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.279490    1047 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:46 cka-02-worker kubelet[1047]: W0806 20:36:46.280139    1047 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.280247    1047 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: E0806 20:36:46.280311    1047 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.284491    1047 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.284541    1047 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.284562    1047 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.284573    1047 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.284599    1047 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.288834    1047 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.288857    1047 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.288876    1047 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.288896    1047 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: E0806 20:36:46.289159    1047 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.289377    1047 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: E0806 20:36:46.289635    1047 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.289811    1047 server.go:1181] "Started kubelet"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.289920    1047 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.290952    1047 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.291442    1047 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.295835    1047 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: I0806 20:36:46.295932    1047 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: E0806 20:36:46.305802    1047 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:46 cka-02-worker kubelet[1047]: E0806 20:36:46.318671    1047 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:46 cka-02-worker kubelet[1047]: E0806 20:36:46.318799    1047 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:46 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:46 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:47 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 38.
Aug 06 20:36:47 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:47 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:47 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.549354    1070 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.567553    1070 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.567578    1070 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.567834    1070 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.569312    1070 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.570013    1070 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: W0806 20:36:47.570038    1070 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:47 cka-02-worker kubelet[1070]: E0806 20:36:47.570059    1070 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.574922    1070 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.574970    1070 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.574989    1070 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.575000    1070 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.575019    1070 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.577932    1070 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.577955    1070 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.577973    1070 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.577985    1070 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: E0806 20:36:47.579394    1070 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.580815    1070 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: E0806 20:36:47.581015    1070 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.581173    1070 server.go:1181] "Started kubelet"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.583454    1070 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.588254    1070 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.589160    1070 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.592078    1070 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: I0806 20:36:47.592154    1070 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: E0806 20:36:47.599828    1070 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:47 cka-02-worker kubelet[1070]: E0806 20:36:47.602601    1070 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:47 cka-02-worker kubelet[1070]: E0806 20:36:47.602719    1070 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:47 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:47 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:48 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 39.
Aug 06 20:36:48 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:48 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:48 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.764915    1095 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.776848    1095 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.776871    1095 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.777090    1095 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.778550    1095 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:48 cka-02-worker kubelet[1095]: W0806 20:36:48.779121    1095 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.780074    1095 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: E0806 20:36:48.780145    1095 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.783498    1095 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.783544    1095 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.783563    1095 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.783574    1095 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.783595    1095 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.788188    1095 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.788211    1095 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.788226    1095 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.788238    1095 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.789478    1095 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: E0806 20:36:48.793943    1095 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.794480    1095 server.go:1181] "Started kubelet"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: E0806 20:36:48.794828    1095 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.794902    1095 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.795969    1095 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.796590    1095 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.796663    1095 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: E0806 20:36:48.798709    1095 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: I0806 20:36:48.800452    1095 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:48 cka-02-worker kubelet[1095]: E0806 20:36:48.800771    1095 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:48 cka-02-worker kubelet[1095]: E0806 20:36:48.800792    1095 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:48 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:48 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:49 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 40.
Aug 06 20:36:49 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:49 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:49 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.020164    1115 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.048910    1115 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.048930    1115 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.049152    1115 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.050431    1115 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:50 cka-02-worker kubelet[1115]: W0806 20:36:50.051058    1115 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.051411    1115 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: E0806 20:36:50.051445    1115 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.073720    1115 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.073775    1115 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.073796    1115 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.073808    1115 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.073828    1115 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.076835    1115 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.076962    1115 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.077043    1115 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.077104    1115 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: E0806 20:36:50.080439    1115 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.082568    1115 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: E0806 20:36:50.082802    1115 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.083015    1115 server.go:1181] "Started kubelet"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.084407    1115 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.091447    1115 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.092514    1115 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.093099    1115 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: I0806 20:36:50.093191    1115 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: E0806 20:36:50.103978    1115 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:50 cka-02-worker kubelet[1115]: E0806 20:36:50.105467    1115 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:50 cka-02-worker kubelet[1115]: E0806 20:36:50.105488    1115 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:50 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:50 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:51 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 41.
Aug 06 20:36:51 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:51 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:51 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.265710    1138 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.276600    1138 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.276619    1138 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.276798    1138 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.279147    1138 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:51 cka-02-worker kubelet[1138]: W0806 20:36:51.280213    1138 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.280233    1138 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: E0806 20:36:51.280416    1138 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.300345    1138 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.300400    1138 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.300416    1138 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.300428    1138 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.300447    1138 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.303727    1138 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.303751    1138 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.303768    1138 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.303780    1138 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: E0806 20:36:51.305664    1138 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.306153    1138 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: E0806 20:36:51.306426    1138 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.306634    1138 server.go:1181] "Started kubelet"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.307421    1138 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.308257    1138 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.309339    1138 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.309401    1138 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: E0806 20:36:51.322616    1138 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: I0806 20:36:51.323892    1138 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:51 cka-02-worker kubelet[1138]: E0806 20:36:51.335235    1138 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:51 cka-02-worker kubelet[1138]: E0806 20:36:51.335265    1138 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:51 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:51 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:52 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 42.
Aug 06 20:36:52 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:52 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:52 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.509819    1166 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.523907    1166 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.523927    1166 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.524151    1166 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.525279    1166 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.525921    1166 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: E0806 20:36:52.526030    1166 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: W0806 20:36:52.525956    1166 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.530024    1166 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.530079    1166 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.530102    1166 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.530114    1166 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.530133    1166 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.533658    1166 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.533678    1166 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.533695    1166 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.533706    1166 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.534216    1166 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: E0806 20:36:52.537927    1166 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: E0806 20:36:52.537989    1166 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.538136    1166 server.go:1181] "Started kubelet"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.539296    1166 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.540098    1166 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.545165    1166 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.553544    1166 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: I0806 20:36:52.553723    1166 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: E0806 20:36:52.559103    1166 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:52 cka-02-worker kubelet[1166]: E0806 20:36:52.561515    1166 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:52 cka-02-worker kubelet[1166]: E0806 20:36:52.561745    1166 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:52 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:52 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:53 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 43.
Aug 06 20:36:53 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:53 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:53 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.767668    1189 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.783857    1189 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.783875    1189 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.784055    1189 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.785300    1189 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:53 cka-02-worker kubelet[1189]: W0806 20:36:53.785836    1189 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.786065    1189 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: E0806 20:36:53.786120    1189 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.806997    1189 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.807164    1189 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.807244    1189 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.807306    1189 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.807387    1189 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.811823    1189 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.811848    1189 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.811868    1189 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.811880    1189 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: E0806 20:36:53.812793    1189 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.814456    1189 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: E0806 20:36:53.814728    1189 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.814982    1189 server.go:1181] "Started kubelet"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.820459    1189 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.823947    1189 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.824226    1189 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.824631    1189 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:53 cka-02-worker kubelet[1189]: I0806 20:36:53.826334    1189 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: E0806 20:36:53.834586    1189 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: E0806 20:36:53.838406    1189 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:36:53 cka-02-worker kubelet[1189]: E0806 20:36:53.843932    1189 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:53 cka-02-worker kubelet[1189]: E0806 20:36:53.843971    1189 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:53 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:53 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:54 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 44.
Aug 06 20:36:54 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:54 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:54 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.011605    1217 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.024909    1217 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.025014    1217 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.025347    1217 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.026668    1217 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:55 cka-02-worker kubelet[1217]: W0806 20:36:55.027298    1217 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.027518    1217 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: E0806 20:36:55.027561    1217 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.045601    1217 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.045767    1217 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.045858    1217 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.045942    1217 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.046037    1217 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.049615    1217 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.049742    1217 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.049820    1217 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.049904    1217 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.050475    1217 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: E0806 20:36:55.050859    1217 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: E0806 20:36:55.051256    1217 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.052371    1217 server.go:1181] "Started kubelet"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.055325    1217 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.056278    1217 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.056378    1217 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.057269    1217 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: I0806 20:36:55.057412    1217 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: E0806 20:36:55.064842    1217 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:55 cka-02-worker kubelet[1217]: E0806 20:36:55.073656    1217 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:55 cka-02-worker kubelet[1217]: E0806 20:36:55.073684    1217 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:55 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:55 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:56 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 45.
Aug 06 20:36:56 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:56 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:56 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.265502    1244 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.275589    1244 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.275614    1244 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.275840    1244 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.277105    1244 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:56 cka-02-worker kubelet[1244]: W0806 20:36:56.277703    1244 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.277719    1244 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: E0806 20:36:56.278618    1244 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.294046    1244 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.294096    1244 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.294115    1244 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.294126    1244 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.294147    1244 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.299140    1244 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.299161    1244 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.299193    1244 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.299208    1244 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.301046    1244 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: E0806 20:36:56.301377    1244 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.309677    1244 server.go:1181] "Started kubelet"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: E0806 20:36:56.301569    1244 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.310943    1244 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.311424    1244 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.312055    1244 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.315222    1244 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: I0806 20:36:56.315319    1244 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: E0806 20:36:56.317493    1244 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:56 cka-02-worker kubelet[1244]: E0806 20:36:56.318979    1244 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:56 cka-02-worker kubelet[1244]: E0806 20:36:56.319087    1244 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:56 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:56 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:57 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 46.
Aug 06 20:36:57 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:57 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:57 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.510757    1268 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.523967    1268 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.523990    1268 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.524236    1268 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.525683    1268 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:57 cka-02-worker kubelet[1268]: W0806 20:36:57.526209    1268 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.526381    1268 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: E0806 20:36:57.526474    1268 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.544878    1268 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.545058    1268 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.545155    1268 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.545224    1268 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.545294    1268 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.548116    1268 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.548139    1268 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.548154    1268 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.548165    1268 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: E0806 20:36:57.549273    1268 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.550357    1268 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: E0806 20:36:57.550527    1268 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.550657    1268 server.go:1181] "Started kubelet"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.551231    1268 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.551897    1268 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.555370    1268 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.557093    1268 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: I0806 20:36:57.557178    1268 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: E0806 20:36:57.569597    1268 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: E0806 20:36:57.574270    1268 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:36:57 cka-02-worker kubelet[1268]: E0806 20:36:57.577213    1268 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:57 cka-02-worker kubelet[1268]: E0806 20:36:57.577252    1268 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:57 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:57 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:58 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 47.
Aug 06 20:36:58 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:58 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:58 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.762750    1290 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.776763    1290 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.776784    1290 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.777040    1290 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.778167    1290 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.778649    1290 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: W0806 20:36:58.778671    1290 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:36:58 cka-02-worker kubelet[1290]: E0806 20:36:58.778690    1290 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.783155    1290 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.783214    1290 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.783233    1290 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.783244    1290 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.783263    1290 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.785686    1290 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.785711    1290 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.785731    1290 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.785742    1290 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.786096    1290 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: E0806 20:36:58.788936    1290 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: E0806 20:36:58.788933    1290 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.789135    1290 server.go:1181] "Started kubelet"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.789235    1290 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.789906    1290 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.791367    1290 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.791764    1290 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: I0806 20:36:58.791853    1290 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: E0806 20:36:58.802896    1290 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:36:58 cka-02-worker kubelet[1290]: E0806 20:36:58.804256    1290 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:36:58 cka-02-worker kubelet[1290]: E0806 20:36:58.804281    1290 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:36:58 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:36:58 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:36:59 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 48.
Aug 06 20:36:59 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:36:59 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:36:59 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.017956    1312 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.031796    1312 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.031925    1312 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.032172    1312 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.033354    1312 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.033913    1312 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: W0806 20:37:00.033927    1312 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:00 cka-02-worker kubelet[1312]: E0806 20:37:00.033953    1312 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.050644    1312 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.050709    1312 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.050728    1312 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.050743    1312 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.050773    1312 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.060173    1312 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.060197    1312 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.060214    1312 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.060225    1312 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.063018    1312 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: E0806 20:37:00.063761    1312 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.063965    1312 server.go:1181] "Started kubelet"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.066441    1312 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: E0806 20:37:00.067471    1312 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.069664    1312 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.069896    1312 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.070476    1312 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: I0806 20:37:00.072255    1312 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: E0806 20:37:00.075495    1312 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:00 cka-02-worker kubelet[1312]: E0806 20:37:00.078319    1312 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:00 cka-02-worker kubelet[1312]: E0806 20:37:00.078353    1312 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:00 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:00 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:01 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 49.
Aug 06 20:37:01 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:01 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:01 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.264252    1338 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.275860    1338 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.275903    1338 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.276165    1338 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.277363    1338 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:01 cka-02-worker kubelet[1338]: W0806 20:37:01.277917    1338 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.277937    1338 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: E0806 20:37:01.277979    1338 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.298220    1338 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.298276    1338 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.298300    1338 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.298311    1338 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.298343    1338 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.306151    1338 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.306299    1338 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.306378    1338 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.306439    1338 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: E0806 20:37:01.306833    1338 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.308092    1338 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: E0806 20:37:01.308570    1338 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.308797    1338 server.go:1181] "Started kubelet"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.309053    1338 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.309759    1338 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.311255    1338 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.311691    1338 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: I0806 20:37:01.311833    1338 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: E0806 20:37:01.313960    1338 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:01 cka-02-worker kubelet[1338]: E0806 20:37:01.317838    1338 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:01 cka-02-worker kubelet[1338]: E0806 20:37:01.318085    1338 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:01 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:01 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:02 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 50.
Aug 06 20:37:02 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:02 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:02 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.512188    1362 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.523605    1362 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.523630    1362 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.523827    1362 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.525085    1362 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:02 cka-02-worker kubelet[1362]: W0806 20:37:02.525634    1362 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.525731    1362 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: E0806 20:37:02.525820    1362 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.530269    1362 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.530316    1362 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.530344    1362 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.530356    1362 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.530381    1362 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.533896    1362 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.533920    1362 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.533938    1362 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.533949    1362 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.534306    1362 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: E0806 20:37:02.538937    1362 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: E0806 20:37:02.538945    1362 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.539102    1362 server.go:1181] "Started kubelet"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.539220    1362 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.542119    1362 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.543958    1362 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.548913    1362 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: I0806 20:37:02.550626    1362 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: E0806 20:37:02.552787    1362 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: E0806 20:37:02.565115    1362 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:37:02 cka-02-worker kubelet[1362]: E0806 20:37:02.565380    1362 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:02 cka-02-worker kubelet[1362]: E0806 20:37:02.565400    1362 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:02 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:02 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:03 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 51.
Aug 06 20:37:03 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:03 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:03 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.768440    1389 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.776728    1389 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.776750    1389 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.777090    1389 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.779300    1389 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.779903    1389 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: W0806 20:37:03.779928    1389 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:03 cka-02-worker kubelet[1389]: E0806 20:37:03.780075    1389 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.796586    1389 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.796756    1389 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.796779    1389 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.796791    1389 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.796816    1389 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.802125    1389 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.802145    1389 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.802160    1389 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.802171    1389 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: E0806 20:37:03.803338    1389 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.804106    1389 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: E0806 20:37:03.804416    1389 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.804561    1389 server.go:1181] "Started kubelet"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.806010    1389 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.807412    1389 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.807784    1389 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.816524    1389 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: I0806 20:37:03.816708    1389 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: E0806 20:37:03.821459    1389 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: E0806 20:37:03.840741    1389 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:37:03 cka-02-worker kubelet[1389]: E0806 20:37:03.844021    1389 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:03 cka-02-worker kubelet[1389]: E0806 20:37:03.844052    1389 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:03 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:03 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:04 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 52.
Aug 06 20:37:04 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:04 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:04 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.005508    1416 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.020741    1416 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.020768    1416 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.021023    1416 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.022660    1416 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.023717    1416 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: W0806 20:37:05.023747    1416 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:05 cka-02-worker kubelet[1416]: E0806 20:37:05.023808    1416 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.046241    1416 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.046300    1416 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.046318    1416 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.046332    1416 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.046353    1416 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.049346    1416 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.049371    1416 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.049400    1416 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.049411    1416 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: E0806 20:37:05.050917    1416 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.055769    1416 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: E0806 20:37:05.056101    1416 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.056301    1416 server.go:1181] "Started kubelet"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.062715    1416 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.069592    1416 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.069938    1416 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: E0806 20:37:05.071045    1416 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.071710    1416 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:05 cka-02-worker kubelet[1416]: I0806 20:37:05.072839    1416 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:05 cka-02-worker kubelet[1416]: E0806 20:37:05.075887    1416 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:05 cka-02-worker kubelet[1416]: E0806 20:37:05.076017    1416 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:05 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:05 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:06 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 53.
Aug 06 20:37:06 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:06 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:06 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.257363    1443 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.272866    1443 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.272903    1443 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.273211    1443 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.274529    1443 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:06 cka-02-worker kubelet[1443]: W0806 20:37:06.275232    1443 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.275445    1443 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: E0806 20:37:06.275542    1443 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.292310    1443 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.292367    1443 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.292396    1443 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.292407    1443 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.292434    1443 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.300647    1443 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.300671    1443 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.300688    1443 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.300699    1443 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: E0806 20:37:06.300989    1443 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.301614    1443 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: E0806 20:37:06.301777    1443 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.301943    1443 server.go:1181] "Started kubelet"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.303314    1443 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.313900    1443 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.314503    1443 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.314561    1443 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: I0806 20:37:06.321231    1443 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: E0806 20:37:06.321334    1443 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: E0806 20:37:06.321482    1443 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:06 cka-02-worker kubelet[1443]: E0806 20:37:06.323833    1443 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:06 cka-02-worker kubelet[1443]: E0806 20:37:06.323859    1443 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:06 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:06 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:07 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 54.
Aug 06 20:37:07 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:07 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:07 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.515229    1464 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.525824    1464 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.525846    1464 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.526103    1464 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.527308    1464 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.527872    1464 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: E0806 20:37:07.528001    1464 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: W0806 20:37:07.527874    1464 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.532797    1464 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.532867    1464 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.532894    1464 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.532907    1464 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.532926    1464 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.535986    1464 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.536012    1464 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.536029    1464 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.536040    1464 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.536442    1464 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: E0806 20:37:07.539938    1464 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: E0806 20:37:07.540094    1464 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.540309    1464 server.go:1181] "Started kubelet"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.541700    1464 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.542062    1464 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.542652    1464 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.544033    1464 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: I0806 20:37:07.544112    1464 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: E0806 20:37:07.548797    1464 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:07 cka-02-worker kubelet[1464]: E0806 20:37:07.550784    1464 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:07 cka-02-worker kubelet[1464]: E0806 20:37:07.550806    1464 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:07 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:07 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:08 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 55.
Aug 06 20:37:08 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:08 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:08 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.776371    1484 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.783636    1484 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.783658    1484 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.783925    1484 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.785124    1484 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:08 cka-02-worker kubelet[1484]: W0806 20:37:08.785744    1484 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.785892    1484 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: E0806 20:37:08.786151    1484 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.789739    1484 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.789782    1484 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.789802    1484 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.789814    1484 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.789833    1484 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.793449    1484 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.793533    1484 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.793561    1484 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.793574    1484 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.794037    1484 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: E0806 20:37:08.796947    1484 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: E0806 20:37:08.796998    1484 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.797211    1484 server.go:1181] "Started kubelet"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.799357    1484 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.799489    1484 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.800443    1484 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.801299    1484 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: I0806 20:37:08.801465    1484 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: E0806 20:37:08.803741    1484 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:08 cka-02-worker kubelet[1484]: E0806 20:37:08.805055    1484 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:08 cka-02-worker kubelet[1484]: E0806 20:37:08.805077    1484 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:08 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:08 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:09 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 56.
Aug 06 20:37:09 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:09 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:09 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.012489    1504 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.023653    1504 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.023794    1504 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.024006    1504 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.025553    1504 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:10 cka-02-worker kubelet[1504]: W0806 20:37:10.026075    1504 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.026098    1504 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: E0806 20:37:10.026273    1504 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.044999    1504 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.045048    1504 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.045067    1504 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.045078    1504 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.045099    1504 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.054975    1504 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.054997    1504 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.055014    1504 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.055025    1504 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: E0806 20:37:10.055424    1504 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.055762    1504 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: E0806 20:37:10.056041    1504 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.056193    1504 server.go:1181] "Started kubelet"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.056873    1504 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.057235    1504 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.057527    1504 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.058185    1504 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: I0806 20:37:10.058229    1504 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: E0806 20:37:10.060835    1504 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:10 cka-02-worker kubelet[1504]: E0806 20:37:10.062477    1504 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:10 cka-02-worker kubelet[1504]: E0806 20:37:10.062502    1504 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:10 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:10 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:11 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 57.
Aug 06 20:37:11 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:11 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:11 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.266868    1524 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.281997    1524 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.282021    1524 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.282286    1524 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.284315    1524 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:11 cka-02-worker kubelet[1524]: W0806 20:37:11.285203    1524 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.285368    1524 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: E0806 20:37:11.285629    1524 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.301918    1524 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.302086    1524 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.302166    1524 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.302285    1524 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.302359    1524 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.305223    1524 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.305330    1524 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.305403    1524 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.305481    1524 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: E0806 20:37:11.305833    1524 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.307356    1524 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: E0806 20:37:11.308646    1524 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.308924    1524 server.go:1181] "Started kubelet"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.310295    1524 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.322956    1524 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.310323    1524 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.324592    1524 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: I0806 20:37:11.324781    1524 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: E0806 20:37:11.329945    1524 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:11 cka-02-worker kubelet[1524]: E0806 20:37:11.335931    1524 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:11 cka-02-worker kubelet[1524]: E0806 20:37:11.336120    1524 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:11 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:11 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:12 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 58.
Aug 06 20:37:12 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:12 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:12 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.547919    1548 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.563464    1548 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.563489    1548 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.563873    1548 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.565048    1548 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.565609    1548 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: E0806 20:37:12.565712    1548 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: W0806 20:37:12.565617    1548 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.569969    1548 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.570024    1548 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.570045    1548 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.570057    1548 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.570081    1548 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.574992    1548 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.575191    1548 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.575326    1548 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.575395    1548 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.575871    1548 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: E0806 20:37:12.577931    1548 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: E0806 20:37:12.577932    1548 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.578130    1548 server.go:1181] "Started kubelet"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.578809    1548 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.579157    1548 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.587341    1548 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.587411    1548 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: E0806 20:37:12.590437    1548 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: I0806 20:37:12.591058    1548 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: E0806 20:37:12.607786    1548 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:37:12 cka-02-worker kubelet[1548]: E0806 20:37:12.608030    1548 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:12 cka-02-worker kubelet[1548]: E0806 20:37:12.614072    1548 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:12 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:12 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:13 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 59.
Aug 06 20:37:13 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:13 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:13 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.766943    1574 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.780925    1574 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.781032    1574 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.781319    1574 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.782536    1574 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:13 cka-02-worker kubelet[1574]: W0806 20:37:13.783165    1574 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.783188    1574 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: E0806 20:37:13.783234    1574 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.799748    1574 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.799798    1574 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.799837    1574 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.799849    1574 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.799874    1574 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.811007    1574 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.811030    1574 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.811048    1574 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.811059    1574 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: E0806 20:37:13.814541    1574 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.815259    1574 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: E0806 20:37:13.815459    1574 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.815637    1574 server.go:1181] "Started kubelet"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.815900    1574 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.818326    1574 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.818382    1574 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.820097    1574 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: I0806 20:37:13.820237    1574 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: E0806 20:37:13.821205    1574 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:13 cka-02-worker kubelet[1574]: E0806 20:37:13.822176    1574 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:13 cka-02-worker kubelet[1574]: E0806 20:37:13.822282    1574 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:13 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:13 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:14 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 60.
Aug 06 20:37:14 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:14 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:14 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.007333    1594 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.021702    1594 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.021726    1594 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.021925    1594 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.023197    1594 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:15 cka-02-worker kubelet[1594]: W0806 20:37:15.023836    1594 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.024098    1594 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: E0806 20:37:15.024155    1594 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.057537    1594 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.057593    1594 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.057612    1594 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.057625    1594 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.057647    1594 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.059772    1594 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.059795    1594 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.059814    1594 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.059826    1594 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: E0806 20:37:15.060053    1594 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.060248    1594 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: E0806 20:37:15.060406    1594 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.060554    1594 server.go:1181] "Started kubelet"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.061326    1594 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.062078    1594 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.061380    1594 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.063821    1594 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: I0806 20:37:15.063899    1594 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: E0806 20:37:15.064571    1594 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:15 cka-02-worker kubelet[1594]: E0806 20:37:15.066104    1594 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:15 cka-02-worker kubelet[1594]: E0806 20:37:15.066207    1594 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:15 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:15 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:16 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 61.
Aug 06 20:37:16 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:16 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:16 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.267597    1614 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.282746    1614 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.282773    1614 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.283035    1614 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.284713    1614 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.285303    1614 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: W0806 20:37:16.285312    1614 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:16 cka-02-worker kubelet[1614]: E0806 20:37:16.285350    1614 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.289959    1614 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.290033    1614 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.290057    1614 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.290068    1614 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.290087    1614 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.292837    1614 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.292941    1614 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.293028    1614 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.293047    1614 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.293690    1614 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: E0806 20:37:16.295924    1614 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: E0806 20:37:16.295921    1614 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.296125    1614 server.go:1181] "Started kubelet"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.296178    1614 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.296759    1614 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.298260    1614 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.302417    1614 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: I0806 20:37:16.302712    1614 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: E0806 20:37:16.306258    1614 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:16 cka-02-worker kubelet[1614]: E0806 20:37:16.318000    1614 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:16 cka-02-worker kubelet[1614]: E0806 20:37:16.318126    1614 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:16 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:16 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:17 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 62.
Aug 06 20:37:17 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:17 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:17 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.512619    1638 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.525609    1638 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.525629    1638 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.525920    1638 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.527226    1638 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:17 cka-02-worker kubelet[1638]: W0806 20:37:17.527952    1638 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.530610    1638 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: E0806 20:37:17.531438    1638 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.534532    1638 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.534582    1638 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.534601    1638 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.534613    1638 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.534631    1638 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.536877    1638 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.536922    1638 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.536940    1638 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.536951    1638 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.537322    1638 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: E0806 20:37:17.539952    1638 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: E0806 20:37:17.540906    1638 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.541422    1638 server.go:1181] "Started kubelet"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.544200    1638 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.548332    1638 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.549268    1638 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.552241    1638 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: I0806 20:37:17.555126    1638 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: E0806 20:37:17.564301    1638 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:17 cka-02-worker kubelet[1638]: E0806 20:37:17.570338    1638 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:17 cka-02-worker kubelet[1638]: E0806 20:37:17.570364    1638 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:17 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:17 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:18 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 63.
Aug 06 20:37:18 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:18 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:18 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.762604    1667 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.775823    1667 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.775844    1667 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.777995    1667 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.779485    1667 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.780011    1667 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: W0806 20:37:18.780035    1667 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:18 cka-02-worker kubelet[1667]: E0806 20:37:18.780050    1667 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.783954    1667 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.783999    1667 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.784016    1667 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.784027    1667 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.784045    1667 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.786226    1667 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.786245    1667 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.786277    1667 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.786289    1667 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.786657    1667 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: E0806 20:37:18.789939    1667 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: E0806 20:37:18.789944    1667 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.790180    1667 server.go:1181] "Started kubelet"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.791366    1667 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.794655    1667 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.799498    1667 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.799921    1667 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: I0806 20:37:18.800051    1667 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: E0806 20:37:18.804381    1667 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:18 cka-02-worker kubelet[1667]: E0806 20:37:18.807131    1667 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:18 cka-02-worker kubelet[1667]: E0806 20:37:18.807978    1667 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:18 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:18 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:19 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 64.
Aug 06 20:37:19 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:19 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:19 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.014732    1692 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.028677    1692 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.028702    1692 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.028918    1692 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.030277    1692 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:20 cka-02-worker kubelet[1692]: W0806 20:37:20.030921    1692 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.031137    1692 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: E0806 20:37:20.031245    1692 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.047216    1692 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.047267    1692 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.047286    1692 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.047297    1692 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.047317    1692 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.052817    1692 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.052837    1692 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.052854    1692 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.052864    1692 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: E0806 20:37:20.053027    1692 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.053462    1692 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: E0806 20:37:20.053673    1692 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.055122    1692 server.go:1181] "Started kubelet"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.056085    1692 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.056807    1692 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.059735    1692 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.070322    1692 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: I0806 20:37:20.070410    1692 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: E0806 20:37:20.071832    1692 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:20 cka-02-worker kubelet[1692]: E0806 20:37:20.073161    1692 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:20 cka-02-worker kubelet[1692]: E0806 20:37:20.073188    1692 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:20 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:20 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:21 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 65.
Aug 06 20:37:21 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:21 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:21 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.265081    1714 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.278948    1714 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.278968    1714 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.279137    1714 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.280333    1714 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.280921    1714 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: E0806 20:37:21.280956    1714 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: W0806 20:37:21.280921    1714 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.296729    1714 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.296788    1714 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.296808    1714 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.296820    1714 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.296838    1714 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.305024    1714 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.305051    1714 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.305068    1714 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.305080    1714 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: E0806 20:37:21.309219    1714 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.309328    1714 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: E0806 20:37:21.309526    1714 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.309687    1714 server.go:1181] "Started kubelet"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.309791    1714 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.310501    1714 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.310893    1714 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.311130    1714 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: I0806 20:37:21.311191    1714 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: E0806 20:37:21.318932    1714 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:21 cka-02-worker kubelet[1714]: E0806 20:37:21.322109    1714 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:21 cka-02-worker kubelet[1714]: E0806 20:37:21.322136    1714 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:21 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:21 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:22 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 66.
Aug 06 20:37:22 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:22 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:22 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.511641    1736 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.530254    1736 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.530359    1736 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.530640    1736 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.531890    1736 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:22 cka-02-worker kubelet[1736]: W0806 20:37:22.532504    1736 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.532510    1736 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: E0806 20:37:22.532610    1736 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.547443    1736 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.547495    1736 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.547514    1736 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.547526    1736 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.547546    1736 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.557819    1736 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.557845    1736 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.557862    1736 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.557891    1736 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: E0806 20:37:22.559499    1736 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.563170    1736 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: E0806 20:37:22.563574    1736 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.563715    1736 server.go:1181] "Started kubelet"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.563889    1736 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.566072    1736 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.566319    1736 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.568577    1736 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: I0806 20:37:22.568647    1736 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: E0806 20:37:22.571603    1736 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:22 cka-02-worker kubelet[1736]: E0806 20:37:22.573102    1736 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:22 cka-02-worker kubelet[1736]: E0806 20:37:22.573126    1736 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:22 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:22 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:23 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 67.
Aug 06 20:37:23 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:23 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:23 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.761894    1758 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.777929    1758 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.777950    1758 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.778126    1758 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.779352    1758 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:23 cka-02-worker kubelet[1758]: W0806 20:37:23.780060    1758 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.780394    1758 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: E0806 20:37:23.780534    1758 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.802023    1758 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.802194    1758 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.802278    1758 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.802346    1758 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.802425    1758 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.811471    1758 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.811504    1758 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.811523    1758 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.811534    1758 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: E0806 20:37:23.811719    1758 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.812348    1758 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: E0806 20:37:23.812582    1758 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.812727    1758 server.go:1181] "Started kubelet"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.813946    1758 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.814101    1758 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.814229    1758 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.815480    1758 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:23 cka-02-worker kubelet[1758]: I0806 20:37:23.816102    1758 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: E0806 20:37:23.818574    1758 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:23 cka-02-worker kubelet[1758]: E0806 20:37:23.821733    1758 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:23 cka-02-worker kubelet[1758]: E0806 20:37:23.821873    1758 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:23 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:23 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:24 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 68.
Aug 06 20:37:24 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:24 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:24 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.005979    1779 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.020177    1779 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.020197    1779 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.020411    1779 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.021688    1779 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:25 cka-02-worker kubelet[1779]: W0806 20:37:25.022290    1779 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.022319    1779 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: E0806 20:37:25.022551    1779 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.037764    1779 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.037983    1779 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.038083    1779 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.038162    1779 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.038240    1779 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.044852    1779 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.045041    1779 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.045121    1779 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.045193    1779 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: E0806 20:37:25.045527    1779 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.045971    1779 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: E0806 20:37:25.046298    1779 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.046513    1779 server.go:1181] "Started kubelet"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.047711    1779 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.047842    1779 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.051512    1779 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.052168    1779 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: I0806 20:37:25.052229    1779 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: E0806 20:37:25.052793    1779 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:25 cka-02-worker kubelet[1779]: E0806 20:37:25.055080    1779 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:25 cka-02-worker kubelet[1779]: E0806 20:37:25.055201    1779 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:25 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:25 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:26 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 69.
Aug 06 20:37:26 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:26 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:26 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.263383    1800 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.278789    1800 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.278816    1800 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.279234    1800 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.280518    1800 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:26 cka-02-worker kubelet[1800]: W0806 20:37:26.281120    1800 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.281812    1800 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: E0806 20:37:26.281961    1800 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.286677    1800 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.286729    1800 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.286746    1800 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.286758    1800 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.286777    1800 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.288988    1800 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.289010    1800 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.289028    1800 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.289039    1800 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.289571    1800 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: E0806 20:37:26.292962    1800 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: E0806 20:37:26.293166    1800 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.293897    1800 server.go:1181] "Started kubelet"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.295449    1800 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.296297    1800 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.299851    1800 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.303210    1800 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: I0806 20:37:26.304208    1800 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: E0806 20:37:26.308114    1800 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:26 cka-02-worker kubelet[1800]: E0806 20:37:26.313585    1800 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:26 cka-02-worker kubelet[1800]: E0806 20:37:26.313738    1800 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:26 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:26 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:27 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 70.
Aug 06 20:37:27 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:27 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:27 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.507413    1825 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.520004    1825 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.520036    1825 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.520242    1825 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.521529    1825 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:27 cka-02-worker kubelet[1825]: W0806 20:37:27.522197    1825 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.522253    1825 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: E0806 20:37:27.522388    1825 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.538827    1825 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.538880    1825 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.538904    1825 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.538915    1825 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.538934    1825 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.542510    1825 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.542536    1825 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.542554    1825 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.542570    1825 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: E0806 20:37:27.542775    1825 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.543518    1825 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: E0806 20:37:27.543717    1825 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.543925    1825 server.go:1181] "Started kubelet"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.545502    1825 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.545910    1825 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.548616    1825 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.549675    1825 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: I0806 20:37:27.549790    1825 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: E0806 20:37:27.555503    1825 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:27 cka-02-worker kubelet[1825]: E0806 20:37:27.558868    1825 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:27 cka-02-worker kubelet[1825]: E0806 20:37:27.559019    1825 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:27 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:27 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:28 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 71.
Aug 06 20:37:28 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:28 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:28 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.758471    1851 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.769829    1851 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.769851    1851 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.770061    1851 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.771257    1851 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:28 cka-02-worker kubelet[1851]: W0806 20:37:28.771843    1851 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.771971    1851 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: E0806 20:37:28.772008    1851 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.791948    1851 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.792004    1851 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.792023    1851 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.792035    1851 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.792056    1851 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.797520    1851 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.797542    1851 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.797559    1851 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.797571    1851 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: E0806 20:37:28.797843    1851 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.798357    1851 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: E0806 20:37:28.798560    1851 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.798722    1851 server.go:1181] "Started kubelet"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.799308    1851 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.799848    1851 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.799861    1851 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.807646    1851 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: E0806 20:37:28.811594    1851 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: I0806 20:37:28.814312    1851 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:28 cka-02-worker kubelet[1851]: E0806 20:37:28.814938    1851 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:28 cka-02-worker kubelet[1851]: E0806 20:37:28.814957    1851 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:28 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:28 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:29 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 72.
Aug 06 20:37:29 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:29 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:29 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.012487    1875 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.023661    1875 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.023685    1875 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.023933    1875 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.025222    1875 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:30 cka-02-worker kubelet[1875]: W0806 20:37:30.026352    1875 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.026416    1875 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: E0806 20:37:30.026469    1875 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.030622    1875 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.030679    1875 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.030706    1875 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.030717    1875 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.030743    1875 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.034275    1875 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.034297    1875 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.034313    1875 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.034324    1875 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.034733    1875 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: E0806 20:37:30.037927    1875 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: E0806 20:37:30.037938    1875 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.038120    1875 server.go:1181] "Started kubelet"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.040917    1875 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.041625    1875 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.043588    1875 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.050747    1875 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: I0806 20:37:30.050845    1875 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: E0806 20:37:30.053414    1875 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:30 cka-02-worker kubelet[1875]: E0806 20:37:30.069064    1875 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:30 cka-02-worker kubelet[1875]: E0806 20:37:30.069090    1875 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:30 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:30 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:31 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 73.
Aug 06 20:37:31 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:31 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:31 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.266198    1898 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.280918    1898 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.280943    1898 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.281242    1898 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.283196    1898 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:31 cka-02-worker kubelet[1898]: W0806 20:37:31.283834    1898 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.283874    1898 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: E0806 20:37:31.283929    1898 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.287714    1898 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.287758    1898 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.287774    1898 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.287785    1898 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.287803    1898 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.289836    1898 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.289856    1898 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.289872    1898 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.289959    1898 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: E0806 20:37:31.290155    1898 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.290562    1898 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: E0806 20:37:31.293923    1898 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.294139    1898 server.go:1181] "Started kubelet"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.294603    1898 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.295042    1898 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.295188    1898 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.313049    1898 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: I0806 20:37:31.313155    1898 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: E0806 20:37:31.320475    1898 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:31 cka-02-worker kubelet[1898]: E0806 20:37:31.324531    1898 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:31 cka-02-worker kubelet[1898]: E0806 20:37:31.324557    1898 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:31 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:31 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:32 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 74.
Aug 06 20:37:32 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:32 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:32 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.517999    1921 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.532780    1921 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.532802    1921 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.533024    1921 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.534227    1921 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:32 cka-02-worker kubelet[1921]: W0806 20:37:32.534834    1921 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.535094    1921 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: E0806 20:37:32.535134    1921 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.538803    1921 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.539003    1921 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.539027    1921 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.539039    1921 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.539059    1921 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.542647    1921 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.542821    1921 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.542934    1921 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.542961    1921 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.543856    1921 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: E0806 20:37:32.551065    1921 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: E0806 20:37:32.551296    1921 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.551521    1921 server.go:1181] "Started kubelet"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.552314    1921 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.553238    1921 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.564109    1921 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.564685    1921 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: I0806 20:37:32.566982    1921 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: E0806 20:37:32.568816    1921 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:32 cka-02-worker kubelet[1921]: E0806 20:37:32.572045    1921 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:32 cka-02-worker kubelet[1921]: E0806 20:37:32.572184    1921 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:32 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:32 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:33 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 75.
Aug 06 20:37:33 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:33 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:33 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.765209    1942 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.774736    1942 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.774761    1942 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.775045    1942 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.776277    1942 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.776841    1942 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: W0806 20:37:33.776848    1942 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:33 cka-02-worker kubelet[1942]: E0806 20:37:33.777324    1942 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.792785    1942 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.792841    1942 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.792869    1942 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.792899    1942 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.792926    1942 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.796659    1942 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.796680    1942 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.796697    1942 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.796709    1942 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: E0806 20:37:33.796923    1942 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.798785    1942 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: E0806 20:37:33.798943    1942 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.799140    1942 server.go:1181] "Started kubelet"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.799326    1942 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.800243    1942 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.801510    1942 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.802839    1942 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: I0806 20:37:33.806699    1942 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: E0806 20:37:33.809215    1942 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:33 cka-02-worker kubelet[1942]: E0806 20:37:33.810199    1942 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:33 cka-02-worker kubelet[1942]: E0806 20:37:33.810218    1942 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:33 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:33 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:34 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 76.
Aug 06 20:37:34 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:34 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:34 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.019762    1964 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.030306    1964 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.030437    1964 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.030713    1964 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.032062    1964 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:35 cka-02-worker kubelet[1964]: W0806 20:37:35.032653    1964 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.032866    1964 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: E0806 20:37:35.032972    1964 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.055208    1964 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.055265    1964 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.055282    1964 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.055294    1964 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.055315    1964 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.063429    1964 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.063454    1964 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.063473    1964 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.063485    1964 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.065203    1964 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: E0806 20:37:35.065418    1964 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.065579    1964 server.go:1181] "Started kubelet"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: E0806 20:37:35.065919    1964 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.066648    1964 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.066851    1964 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.067304    1964 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: E0806 20:37:35.069370    1964 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.069527    1964 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: I0806 20:37:35.069703    1964 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:35 cka-02-worker kubelet[1964]: E0806 20:37:35.071795    1964 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:35 cka-02-worker kubelet[1964]: E0806 20:37:35.071823    1964 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:35 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:35 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:36 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 77.
Aug 06 20:37:36 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:36 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:36 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.276208    1987 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.291175    1987 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.291197    1987 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.291509    1987 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.293181    1987 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:36 cka-02-worker kubelet[1987]: W0806 20:37:36.293833    1987 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.293871    1987 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: E0806 20:37:36.296107    1987 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.313110    1987 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.313161    1987 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.313180    1987 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.313192    1987 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.313211    1987 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.315775    1987 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.315797    1987 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.315813    1987 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.315824    1987 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: E0806 20:37:36.316951    1987 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.317773    1987 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: E0806 20:37:36.317943    1987 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.318072    1987 server.go:1181] "Started kubelet"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.318567    1987 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.318996    1987 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.320108    1987 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.321524    1987 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: I0806 20:37:36.320332    1987 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: E0806 20:37:36.333623    1987 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:36 cka-02-worker kubelet[1987]: E0806 20:37:36.335592    1987 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:36 cka-02-worker kubelet[1987]: E0806 20:37:36.335710    1987 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:36 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:36 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:37 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 78.
Aug 06 20:37:37 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:37 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:37 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.538961    2011 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.551004    2011 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.551027    2011 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.551232    2011 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.552496    2011 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:37 cka-02-worker kubelet[2011]: W0806 20:37:37.553561    2011 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.553757    2011 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: E0806 20:37:37.553806    2011 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.557922    2011 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.557983    2011 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.558000    2011 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.558011    2011 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.558031    2011 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.560010    2011 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.560032    2011 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.560049    2011 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.560060    2011 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: E0806 20:37:37.560337    2011 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.561009    2011 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: E0806 20:37:37.563998    2011 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.564171    2011 server.go:1181] "Started kubelet"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.564972    2011 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.567960    2011 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.569381    2011 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.571787    2011 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: I0806 20:37:37.571868    2011 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: E0806 20:37:37.575322    2011 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:37 cka-02-worker kubelet[2011]: E0806 20:37:37.587556    2011 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:37 cka-02-worker kubelet[2011]: E0806 20:37:37.587670    2011 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:37 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:37 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:38 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 79.
Aug 06 20:37:38 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:38 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:38 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.759244    2037 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.772900    2037 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.772926    2037 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.773160    2037 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.774367    2037 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.774925    2037 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: W0806 20:37:38.774935    2037 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:38 cka-02-worker kubelet[2037]: E0806 20:37:38.774970    2037 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.798617    2037 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.798677    2037 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.798699    2037 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.798710    2037 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.798733    2037 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.805878    2037 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.805964    2037 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.805999    2037 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.806012    2037 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: E0806 20:37:38.806202    2037 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.806736    2037 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: E0806 20:37:38.807082    2037 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.807243    2037 server.go:1181] "Started kubelet"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.807556    2037 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.808157    2037 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.813248    2037 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.815429    2037 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: I0806 20:37:38.815912    2037 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: E0806 20:37:38.818927    2037 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:38 cka-02-worker kubelet[2037]: E0806 20:37:38.821068    2037 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:38 cka-02-worker kubelet[2037]: E0806 20:37:38.821095    2037 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:38 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:38 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:39 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 80.
Aug 06 20:37:39 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:39 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:39 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.015610    2061 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.030718    2061 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.030861    2061 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.032456    2061 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.033662    2061 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:40 cka-02-worker kubelet[2061]: W0806 20:37:40.034378    2061 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.034437    2061 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: E0806 20:37:40.034469    2061 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.038206    2061 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.038257    2061 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.038275    2061 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.038287    2061 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.038306    2061 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.041020    2061 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.041043    2061 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.041059    2061 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.041070    2061 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.041423    2061 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: E0806 20:37:40.044246    2061 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: E0806 20:37:40.044355    2061 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.044608    2061 server.go:1181] "Started kubelet"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.049904    2061 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.050080    2061 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.052535    2061 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.052565    2061 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: I0806 20:37:40.052823    2061 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: E0806 20:37:40.061678    2061 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:40 cka-02-worker kubelet[2061]: E0806 20:37:40.066078    2061 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:40 cka-02-worker kubelet[2061]: E0806 20:37:40.066104    2061 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:40 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:40 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:41 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 81.
Aug 06 20:37:41 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:41 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:41 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.268702    2085 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.279646    2085 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.279745    2085 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.280029    2085 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.281340    2085 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:41 cka-02-worker kubelet[2085]: W0806 20:37:41.281981    2085 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.283419    2085 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: E0806 20:37:41.283458    2085 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.285995    2085 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.286044    2085 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.286069    2085 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.286080    2085 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.286103    2085 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.291179    2085 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.291199    2085 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.291214    2085 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.291225    2085 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.292685    2085 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: E0806 20:37:41.293929    2085 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.294098    2085 server.go:1181] "Started kubelet"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: E0806 20:37:41.294680    2085 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.295068    2085 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.298049    2085 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.298203    2085 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.299715    2085 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:41 cka-02-worker kubelet[2085]: I0806 20:37:41.300302    2085 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: E0806 20:37:41.306499    2085 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:41 cka-02-worker kubelet[2085]: E0806 20:37:41.311999    2085 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:41 cka-02-worker kubelet[2085]: E0806 20:37:41.312037    2085 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:41 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:41 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:42 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 82.
Aug 06 20:37:42 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:42 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:42 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.512916    2106 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.529019    2106 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.529044    2106 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.529612    2106 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.530816    2106 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:42 cka-02-worker kubelet[2106]: W0806 20:37:42.531423    2106 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.531523    2106 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: E0806 20:37:42.531684    2106 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.553309    2106 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.553362    2106 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.553380    2106 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.553392    2106 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.553411    2106 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.556299    2106 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.556427    2106 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.556500    2106 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.556563    2106 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: E0806 20:37:42.558118    2106 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.560310    2106 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: E0806 20:37:42.560608    2106 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.561044    2106 server.go:1181] "Started kubelet"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.562048    2106 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.563621    2106 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.565222    2106 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.565305    2106 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: I0806 20:37:42.568202    2106 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: E0806 20:37:42.569261    2106 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:42 cka-02-worker kubelet[2106]: E0806 20:37:42.572110    2106 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:42 cka-02-worker kubelet[2106]: E0806 20:37:42.572138    2106 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:42 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:42 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:43 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 83.
Aug 06 20:37:43 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:43 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:43 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.764857    2128 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.772839    2128 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.772937    2128 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.773109    2128 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.774370    2128 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.774909    2128 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: W0806 20:37:43.774927    2128 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:43 cka-02-worker kubelet[2128]: E0806 20:37:43.774961    2128 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.791909    2128 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.791969    2128 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.791991    2128 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.792003    2128 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.792032    2128 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.796113    2128 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.796136    2128 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.796166    2128 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.796178    2128 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: E0806 20:37:43.797511    2128 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.798727    2128 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: E0806 20:37:43.798908    2128 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.799059    2128 server.go:1181] "Started kubelet"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.802552    2128 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.803197    2128 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.804102    2128 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.804350    2128 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: I0806 20:37:43.804415    2128 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: E0806 20:37:43.812241    2128 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: E0806 20:37:43.812781    2128 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:37:43 cka-02-worker kubelet[2128]: E0806 20:37:43.814728    2128 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:43 cka-02-worker kubelet[2128]: E0806 20:37:43.814760    2128 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:43 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:43 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:44 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 84.
Aug 06 20:37:44 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:44 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:44 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.014431    2151 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.027280    2151 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.027301    2151 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.027518    2151 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.028799    2151 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:45 cka-02-worker kubelet[2151]: W0806 20:37:45.030341    2151 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.030506    2151 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: E0806 20:37:45.030599    2151 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.047317    2151 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.047368    2151 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.047389    2151 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.047401    2151 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.047420    2151 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.056004    2151 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.056030    2151 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.056052    2151 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.056064    2151 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: E0806 20:37:45.057301    2151 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.058214    2151 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: E0806 20:37:45.058577    2151 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.060617    2151 server.go:1181] "Started kubelet"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.061814    2151 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.062708    2151 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.066076    2151 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.073512    2151 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: I0806 20:37:45.073698    2151 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: E0806 20:37:45.074784    2151 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:45 cka-02-worker kubelet[2151]: E0806 20:37:45.080511    2151 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:45 cka-02-worker kubelet[2151]: E0806 20:37:45.080542    2151 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:45 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:45 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:46 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 85.
Aug 06 20:37:46 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:46 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:46 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.260318    2175 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.274059    2175 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.274079    2175 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.275446    2175 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.276707    2175 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:46 cka-02-worker kubelet[2175]: W0806 20:37:46.277308    2175 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.277310    2175 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: E0806 20:37:46.277432    2175 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.281433    2175 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.281487    2175 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.281504    2175 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.281523    2175 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.281542    2175 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.283848    2175 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.283869    2175 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.283909    2175 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.283922    2175 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.284270    2175 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: E0806 20:37:46.286970    2175 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: E0806 20:37:46.286973    2175 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.287147    2175 server.go:1181] "Started kubelet"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.287196    2175 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.287838    2175 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.300710    2175 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.300982    2175 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: I0806 20:37:46.302418    2175 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: E0806 20:37:46.306621    2175 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:46 cka-02-worker kubelet[2175]: E0806 20:37:46.318908    2175 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:46 cka-02-worker kubelet[2175]: E0806 20:37:46.318943    2175 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:46 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:46 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:47 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 86.
Aug 06 20:37:47 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:47 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:47 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.515635    2199 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.528892    2199 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.529009    2199 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.529626    2199 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.531683    2199 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.532491    2199 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: E0806 20:37:47.532604    2199 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: W0806 20:37:47.532503    2199 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.548743    2199 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.548797    2199 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.548818    2199 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.548830    2199 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.548855    2199 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.558241    2199 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.558267    2199 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.558295    2199 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.558309    2199 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: E0806 20:37:47.561736    2199 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.564508    2199 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: E0806 20:37:47.564952    2199 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.565314    2199 server.go:1181] "Started kubelet"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.566278    2199 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.568455    2199 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.569104    2199 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.569468    2199 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: I0806 20:37:47.569503    2199 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: E0806 20:37:47.576224    2199 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:47 cka-02-worker kubelet[2199]: E0806 20:37:47.579207    2199 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:47 cka-02-worker kubelet[2199]: E0806 20:37:47.579235    2199 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:47 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:47 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:48 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 87.
Aug 06 20:37:48 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:48 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:48 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.766861    2223 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.782445    2223 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.782546    2223 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.782747    2223 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.783863    2223 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:48 cka-02-worker kubelet[2223]: W0806 20:37:48.784392    2223 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.784414    2223 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: E0806 20:37:48.784458    2223 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.788419    2223 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.788459    2223 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.788481    2223 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.788492    2223 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.788512    2223 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.791560    2223 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.791580    2223 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.791597    2223 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.791608    2223 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.792054    2223 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: E0806 20:37:48.795935    2223 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: E0806 20:37:48.796373    2223 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.796533    2223 server.go:1181] "Started kubelet"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.797727    2223 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.798004    2223 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.798069    2223 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.798658    2223 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:48 cka-02-worker kubelet[2223]: I0806 20:37:48.799241    2223 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: E0806 20:37:48.804126    2223 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:48 cka-02-worker kubelet[2223]: E0806 20:37:48.807778    2223 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:48 cka-02-worker kubelet[2223]: E0806 20:37:48.807803    2223 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:48 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:48 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:49 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 88.
Aug 06 20:37:49 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:49 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:49 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.011345    2243 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.023842    2243 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.023867    2243 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.024121    2243 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.025757    2243 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:50 cka-02-worker kubelet[2243]: W0806 20:37:50.026291    2243 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.026441    2243 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: E0806 20:37:50.026544    2243 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.030356    2243 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.030408    2243 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.030428    2243 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.030439    2243 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.030462    2243 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.032979    2243 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.033002    2243 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.033036    2243 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.033049    2243 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.040175    2243 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: E0806 20:37:50.040497    2243 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: E0806 20:37:50.040748    2243 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.040908    2243 server.go:1181] "Started kubelet"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.045467    2243 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.049796    2243 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.050858    2243 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.055162    2243 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: I0806 20:37:50.055215    2243 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: E0806 20:37:50.063531    2243 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:50 cka-02-worker kubelet[2243]: E0806 20:37:50.076973    2243 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:50 cka-02-worker kubelet[2243]: E0806 20:37:50.077006    2243 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:50 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:50 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:51 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 89.
Aug 06 20:37:51 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:51 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:51 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.274685    2270 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.286832    2270 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.286855    2270 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.287116    2270 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.289365    2270 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:51 cka-02-worker kubelet[2270]: W0806 20:37:51.289964    2270 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.289984    2270 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: E0806 20:37:51.290020    2270 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.293997    2270 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.294047    2270 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.294066    2270 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.294077    2270 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.294101    2270 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.296349    2270 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.296371    2270 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.297152    2270 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.297172    2270 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.297930    2270 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: E0806 20:37:51.302204    2270 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: E0806 20:37:51.303938    2270 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.304110    2270 server.go:1181] "Started kubelet"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.305390    2270 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.305440    2270 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.312640    2270 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.313055    2270 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: I0806 20:37:51.313729    2270 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: E0806 20:37:51.315116    2270 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:51 cka-02-worker kubelet[2270]: E0806 20:37:51.316517    2270 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:51 cka-02-worker kubelet[2270]: E0806 20:37:51.316541    2270 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:51 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:51 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:52 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 90.
Aug 06 20:37:52 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:52 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:52 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.514197    2291 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.524900    2291 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.524936    2291 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.525185    2291 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.526287    2291 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:52 cka-02-worker kubelet[2291]: W0806 20:37:52.526879    2291 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.527197    2291 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: E0806 20:37:52.527267    2291 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.543295    2291 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.543346    2291 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.543373    2291 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.543385    2291 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.543417    2291 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.548735    2291 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.548756    2291 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.548980    2291 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.548994    2291 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: E0806 20:37:52.549227    2291 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.551423    2291 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: E0806 20:37:52.551928    2291 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.552163    2291 server.go:1181] "Started kubelet"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.554185    2291 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.554831    2291 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.555223    2291 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.556667    2291 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: I0806 20:37:52.556811    2291 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: E0806 20:37:52.559292    2291 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:52 cka-02-worker kubelet[2291]: E0806 20:37:52.560414    2291 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:52 cka-02-worker kubelet[2291]: E0806 20:37:52.560507    2291 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:52 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:52 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:53 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 91.
Aug 06 20:37:53 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:53 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:53 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.763706    2312 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.779876    2312 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.779913    2312 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.780124    2312 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.781411    2312 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:53 cka-02-worker kubelet[2312]: W0806 20:37:53.782056    2312 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.782127    2312 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: E0806 20:37:53.782169    2312 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.785927    2312 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.785975    2312 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.785992    2312 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.786003    2312 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.786022    2312 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.790269    2312 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.790288    2312 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.790303    2312 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.790313    2312 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.791608    2312 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: E0806 20:37:53.792969    2312 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: E0806 20:37:53.792974    2312 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.793146    2312 server.go:1181] "Started kubelet"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.793981    2312 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.794610    2312 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.794745    2312 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.796315    2312 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: I0806 20:37:53.796372    2312 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: E0806 20:37:53.797442    2312 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:53 cka-02-worker kubelet[2312]: E0806 20:37:53.798216    2312 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:53 cka-02-worker kubelet[2312]: E0806 20:37:53.798312    2312 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:53 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:53 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:54 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 92.
Aug 06 20:37:54 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:54 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:54 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.019211    2332 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.032097    2332 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.032198    2332 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.032470    2332 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.034040    2332 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.034707    2332 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: E0806 20:37:55.034755    2332 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: W0806 20:37:55.034829    2332 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.056849    2332 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.056947    2332 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.056973    2332 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.056985    2332 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.057016    2332 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.065502    2332 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.065527    2332 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.065545    2332 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.065557    2332 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: E0806 20:37:55.066703    2332 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.068683    2332 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: E0806 20:37:55.068874    2332 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.069045    2332 server.go:1181] "Started kubelet"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.069567    2332 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.069860    2332 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.070139    2332 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.071930    2332 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: I0806 20:37:55.072101    2332 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: E0806 20:37:55.074215    2332 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:55 cka-02-worker kubelet[2332]: E0806 20:37:55.081750    2332 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:55 cka-02-worker kubelet[2332]: E0806 20:37:55.081776    2332 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:55 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:55 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:56 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 93.
Aug 06 20:37:56 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:56 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:56 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.276904    2355 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.289818    2355 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.289843    2355 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.290070    2355 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.291270    2355 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:56 cka-02-worker kubelet[2355]: W0806 20:37:56.291815    2355 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.291910    2355 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: E0806 20:37:56.292005    2355 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.310288    2355 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.310513    2355 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.310637    2355 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.310716    2355 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.311232    2355 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.315578    2355 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.315601    2355 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.315618    2355 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.315630    2355 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.317404    2355 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: E0806 20:37:56.317584    2355 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.317781    2355 server.go:1181] "Started kubelet"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: E0806 20:37:56.319468    2355 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.320428    2355 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.320516    2355 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.321977    2355 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.323743    2355 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: I0806 20:37:56.323815    2355 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: E0806 20:37:56.326813    2355 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:56 cka-02-worker kubelet[2355]: E0806 20:37:56.332277    2355 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:56 cka-02-worker kubelet[2355]: E0806 20:37:56.332415    2355 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:56 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:56 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:57 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 94.
Aug 06 20:37:57 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:57 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:57 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.518604    2377 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.535768    2377 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.535792    2377 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.536052    2377 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.537340    2377 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:57 cka-02-worker kubelet[2377]: W0806 20:37:57.538003    2377 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.538160    2377 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: E0806 20:37:57.538215    2377 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.554698    2377 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.554755    2377 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.554773    2377 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.554785    2377 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.554804    2377 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.557941    2377 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.557960    2377 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.557996    2377 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.558008    2377 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: E0806 20:37:57.559250    2377 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.559552    2377 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: E0806 20:37:57.564418    2377 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.564696    2377 server.go:1181] "Started kubelet"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.565651    2377 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.567157    2377 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.568281    2377 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.568976    2377 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: E0806 20:37:57.570493    2377 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: I0806 20:37:57.570935    2377 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:57 cka-02-worker kubelet[2377]: E0806 20:37:57.579257    2377 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:57 cka-02-worker kubelet[2377]: E0806 20:37:57.579282    2377 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:57 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:57 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:58 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 95.
Aug 06 20:37:58 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:58 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:58 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.768539    2400 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.782905    2400 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.782930    2400 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.783424    2400 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.784770    2400 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:37:58 cka-02-worker kubelet[2400]: W0806 20:37:58.785394    2400 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.785592    2400 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: E0806 20:37:58.785691    2400 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.789549    2400 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.789605    2400 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.789623    2400 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.789634    2400 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.789658    2400 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.793092    2400 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.793114    2400 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.793133    2400 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.793144    2400 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.793529    2400 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: E0806 20:37:58.795926    2400 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: E0806 20:37:58.795939    2400 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.796190    2400 server.go:1181] "Started kubelet"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.796315    2400 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.797377    2400 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.797791    2400 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.799015    2400 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: I0806 20:37:58.799095    2400 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: E0806 20:37:58.804660    2400 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:37:58 cka-02-worker kubelet[2400]: E0806 20:37:58.807792    2400 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:37:58 cka-02-worker kubelet[2400]: E0806 20:37:58.808014    2400 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:37:58 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:37:58 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:37:59 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 96.
Aug 06 20:37:59 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:37:59 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:37:59 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.016344    2425 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.029425    2425 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.029451    2425 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.029756    2425 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.031071    2425 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:00 cka-02-worker kubelet[2425]: W0806 20:38:00.031834    2425 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.032205    2425 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: E0806 20:38:00.032290    2425 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.057000    2425 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.057198    2425 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.057309    2425 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.057392    2425 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.057466    2425 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.065249    2425 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.066932    2425 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.067183    2425 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.067420    2425 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: E0806 20:38:00.067373    2425 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.068665    2425 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: E0806 20:38:00.068986    2425 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.069128    2425 server.go:1181] "Started kubelet"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.071388    2425 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.073098    2425 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.073589    2425 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.076679    2425 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: I0806 20:38:00.076853    2425 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: E0806 20:38:00.080637    2425 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:00 cka-02-worker kubelet[2425]: E0806 20:38:00.083534    2425 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:00 cka-02-worker kubelet[2425]: E0806 20:38:00.083563    2425 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:00 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:00 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:01 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 97.
Aug 06 20:38:01 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:01 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:01 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.270380    2446 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.280610    2446 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.280631    2446 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.280864    2446 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.282141    2446 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:01 cka-02-worker kubelet[2446]: W0806 20:38:01.282718    2446 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.282737    2446 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: E0806 20:38:01.282837    2446 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.300197    2446 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.300251    2446 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.300270    2446 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.300281    2446 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.300301    2446 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.302823    2446 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.302844    2446 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.302874    2446 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.302903    2446 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: E0806 20:38:01.303966    2446 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.309499    2446 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: E0806 20:38:01.309756    2446 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.309989    2446 server.go:1181] "Started kubelet"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.311347    2446 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.311748    2446 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.314016    2446 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.314621    2446 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: I0806 20:38:01.315154    2446 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: E0806 20:38:01.316608    2446 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:01 cka-02-worker kubelet[2446]: E0806 20:38:01.320375    2446 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:01 cka-02-worker kubelet[2446]: E0806 20:38:01.320512    2446 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:01 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:01 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:02 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 98.
Aug 06 20:38:02 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:02 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:02 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.509823    2472 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.525786    2472 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.525891    2472 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.526109    2472 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.527256    2472 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:02 cka-02-worker kubelet[2472]: W0806 20:38:02.527814    2472 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.527940    2472 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: E0806 20:38:02.528051    2472 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.546584    2472 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.546644    2472 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.546665    2472 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.546677    2472 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.546706    2472 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.559767    2472 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.559931    2472 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.560018    2472 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.560099    2472 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: E0806 20:38:02.560251    2472 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.560918    2472 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: E0806 20:38:02.561262    2472 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.561521    2472 server.go:1181] "Started kubelet"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.561838    2472 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.562619    2472 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.564032    2472 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.564347    2472 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: I0806 20:38:02.564500    2472 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: E0806 20:38:02.566558    2472 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:02 cka-02-worker kubelet[2472]: E0806 20:38:02.568448    2472 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:02 cka-02-worker kubelet[2472]: E0806 20:38:02.568570    2472 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:02 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:02 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:03 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 99.
Aug 06 20:38:03 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:03 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:03 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.763480    2495 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.777930    2495 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.777950    2495 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.778162    2495 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.779368    2495 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.779969    2495 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: W0806 20:38:03.779988    2495 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:03 cka-02-worker kubelet[2495]: E0806 20:38:03.780017    2495 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.804314    2495 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.804367    2495 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.804386    2495 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.804398    2495 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.804418    2495 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.812011    2495 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.812033    2495 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.812063    2495 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.812075    2495 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: E0806 20:38:03.812348    2495 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.812926    2495 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: E0806 20:38:03.813160    2495 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.813364    2495 server.go:1181] "Started kubelet"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.813453    2495 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.814512    2495 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.817202    2495 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.817843    2495 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: I0806 20:38:03.817925    2495 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: E0806 20:38:03.819270    2495 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:03 cka-02-worker kubelet[2495]: E0806 20:38:03.820347    2495 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:03 cka-02-worker kubelet[2495]: E0806 20:38:03.820377    2495 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:03 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:03 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:04 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 100.
Aug 06 20:38:04 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:04 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:04 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.012724    2518 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.023800    2518 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.023826    2518 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.024070    2518 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.025376    2518 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:05 cka-02-worker kubelet[2518]: W0806 20:38:05.025963    2518 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.026147    2518 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: E0806 20:38:05.026266    2518 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.044950    2518 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.045093    2518 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.045118    2518 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.045130    2518 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.045150    2518 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.051069    2518 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.051097    2518 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.051115    2518 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.051127    2518 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.051873    2518 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: E0806 20:38:05.052612    2518 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.052784    2518 server.go:1181] "Started kubelet"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: E0806 20:38:05.053498    2518 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.053751    2518 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.054273    2518 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.054331    2518 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.057007    2518 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: I0806 20:38:05.057479    2518 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: E0806 20:38:05.058001    2518 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:05 cka-02-worker kubelet[2518]: E0806 20:38:05.059202    2518 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:05 cka-02-worker kubelet[2518]: E0806 20:38:05.059226    2518 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:05 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:05 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:06 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 101.
Aug 06 20:38:06 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:06 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:06 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.263693    2542 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.277743    2542 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.277851    2542 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.278081    2542 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.279407    2542 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:06 cka-02-worker kubelet[2542]: W0806 20:38:06.280085    2542 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.280263    2542 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: E0806 20:38:06.280313    2542 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.295625    2542 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.295780    2542 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.295864    2542 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.295951    2542 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.296029    2542 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.304090    2542 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.304120    2542 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.304139    2542 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.304153    2542 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: E0806 20:38:06.304431    2542 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.305068    2542 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: E0806 20:38:06.305301    2542 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.305506    2542 server.go:1181] "Started kubelet"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.306377    2542 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.306995    2542 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.308253    2542 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.308784    2542 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: I0806 20:38:06.308844    2542 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: E0806 20:38:06.313581    2542 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:06 cka-02-worker kubelet[2542]: E0806 20:38:06.316534    2542 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:06 cka-02-worker kubelet[2542]: E0806 20:38:06.316562    2542 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:06 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:06 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:07 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 102.
Aug 06 20:38:07 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:07 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:07 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.513722    2565 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.526307    2565 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.526329    2565 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.526510    2565 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.527613    2565 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:07 cka-02-worker kubelet[2565]: W0806 20:38:07.528159    2565 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.528456    2565 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: E0806 20:38:07.528495    2565 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.543893    2565 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.543951    2565 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.543974    2565 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.543986    2565 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.544014    2565 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.554800    2565 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.554823    2565 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.554841    2565 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.554852    2565 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: E0806 20:38:07.555480    2565 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.556122    2565 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: E0806 20:38:07.556314    2565 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.556484    2565 server.go:1181] "Started kubelet"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.557196    2565 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.558565    2565 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.561017    2565 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.562010    2565 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: I0806 20:38:07.562083    2565 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: E0806 20:38:07.563611    2565 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:07 cka-02-worker kubelet[2565]: E0806 20:38:07.566875    2565 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:07 cka-02-worker kubelet[2565]: E0806 20:38:07.566918    2565 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:07 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:07 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:08 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 103.
Aug 06 20:38:08 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:08 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:08 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.768005    2588 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.776888    2588 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.776991    2588 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.777229    2588 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.778418    2588 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:08 cka-02-worker kubelet[2588]: W0806 20:38:08.779014    2588 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.779430    2588 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: E0806 20:38:08.779464    2588 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.796124    2588 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.796183    2588 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.796210    2588 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.796222    2588 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.796250    2588 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.807433    2588 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.807455    2588 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.807481    2588 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.807493    2588 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.808316    2588 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: E0806 20:38:08.809938    2588 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: E0806 20:38:08.809938    2588 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.810109    2588 server.go:1181] "Started kubelet"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.810849    2588 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.811021    2588 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.811558    2588 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.812927    2588 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: I0806 20:38:08.814310    2588 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: E0806 20:38:08.816208    2588 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:08 cka-02-worker kubelet[2588]: E0806 20:38:08.818023    2588 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:08 cka-02-worker kubelet[2588]: E0806 20:38:08.818049    2588 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:08 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:08 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:09 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 104.
Aug 06 20:38:09 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:09 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:09 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.020771    2613 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.035775    2613 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.035800    2613 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.036085    2613 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.037297    2613 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:10 cka-02-worker kubelet[2613]: W0806 20:38:10.037915    2613 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.038025    2613 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: E0806 20:38:10.038064    2613 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.041764    2613 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.041810    2613 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.041829    2613 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.041840    2613 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.041860    2613 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.043990    2613 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.044011    2613 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.044030    2613 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.044041    2613 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: E0806 20:38:10.044102    2613 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.044691    2613 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: E0806 20:38:10.044930    2613 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.045171    2613 server.go:1181] "Started kubelet"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.045363    2613 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.046891    2613 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.048542    2613 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.049013    2613 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: I0806 20:38:10.049153    2613 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: E0806 20:38:10.053730    2613 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:10 cka-02-worker kubelet[2613]: E0806 20:38:10.054729    2613 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:10 cka-02-worker kubelet[2613]: E0806 20:38:10.054751    2613 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:10 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:10 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:11 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 105.
Aug 06 20:38:11 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:11 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:11 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.265068    2633 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.281894    2633 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.281912    2633 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.282110    2633 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.283322    2633 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:11 cka-02-worker kubelet[2633]: W0806 20:38:11.285309    2633 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.285370    2633 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: E0806 20:38:11.285409    2633 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.289162    2633 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.289215    2633 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.289231    2633 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.289242    2633 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.289261    2633 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.291303    2633 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.291321    2633 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.291337    2633 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.291348    2633 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: E0806 20:38:11.291415    2633 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.293100    2633 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: E0806 20:38:11.294969    2633 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.295254    2633 server.go:1181] "Started kubelet"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.295730    2633 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.296114    2633 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.296490    2633 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.301792    2633 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: I0806 20:38:11.301863    2633 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: E0806 20:38:11.313178    2633 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: E0806 20:38:11.318564    2633 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:38:11 cka-02-worker kubelet[2633]: E0806 20:38:11.323846    2633 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:11 cka-02-worker kubelet[2633]: E0806 20:38:11.323872    2633 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:11 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:11 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:12 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 106.
Aug 06 20:38:12 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:12 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:12 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.506445    2658 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.521645    2658 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.521670    2658 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.522311    2658 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.524213    2658 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:12 cka-02-worker kubelet[2658]: W0806 20:38:12.524998    2658 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.525221    2658 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: E0806 20:38:12.525323    2658 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.542413    2658 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.542486    2658 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.542505    2658 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.542517    2658 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.542542    2658 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.545425    2658 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.545449    2658 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.545465    2658 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.545476    2658 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: E0806 20:38:12.545872    2658 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.546369    2658 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: E0806 20:38:12.547592    2658 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.547808    2658 server.go:1181] "Started kubelet"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.548876    2658 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.549639    2658 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.556942    2658 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: E0806 20:38:12.558004    2658 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: I0806 20:38:12.558262    2658 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:12 cka-02-worker kubelet[2658]: E0806 20:38:12.560622    2658 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:12 cka-02-worker kubelet[2658]: E0806 20:38:12.560641    2658 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:12 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:12 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:13 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 107.
Aug 06 20:38:13 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:13 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:13 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.762754    2680 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.773701    2680 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.773723    2680 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.774126    2680 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.775607    2680 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.776231    2680 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: E0806 20:38:13.776285    2680 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: W0806 20:38:13.776352    2680 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.792704    2680 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.792753    2680 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.792775    2680 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.792787    2680 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.792811    2680 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.795698    2680 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.795805    2680 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.795875    2680 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.795965    2680 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.800673    2680 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: E0806 20:38:13.800995    2680 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.801208    2680 server.go:1181] "Started kubelet"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: E0806 20:38:13.801719    2680 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.804467    2680 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.805101    2680 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.809397    2680 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.811274    2680 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: I0806 20:38:13.811350    2680 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: E0806 20:38:13.813341    2680 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:13 cka-02-worker kubelet[2680]: E0806 20:38:13.815167    2680 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:13 cka-02-worker kubelet[2680]: E0806 20:38:13.815195    2680 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:13 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:13 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:14 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 108.
Aug 06 20:38:14 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:14 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:14 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.018579    2705 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.034799    2705 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.034930    2705 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.037149    2705 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.038453    2705 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:15 cka-02-worker kubelet[2705]: W0806 20:38:15.039032    2705 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.039054    2705 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: E0806 20:38:15.039090    2705 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.042930    2705 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.043001    2705 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.043019    2705 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.043030    2705 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.043050    2705 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.045274    2705 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.045298    2705 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.045316    2705 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.045327    2705 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.046157    2705 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: E0806 20:38:15.048032    2705 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: E0806 20:38:15.048203    2705 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.048380    2705 server.go:1181] "Started kubelet"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.049127    2705 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.049830    2705 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.050346    2705 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: E0806 20:38:15.055232    2705 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.056289    2705 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: I0806 20:38:15.056476    2705 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:15 cka-02-worker kubelet[2705]: E0806 20:38:15.057325    2705 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:15 cka-02-worker kubelet[2705]: E0806 20:38:15.057347    2705 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:15 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:15 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:16 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 109.
Aug 06 20:38:16 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:16 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:16 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.256845    2727 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.273347    2727 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.273366    2727 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.273535    2727 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.274689    2727 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:16 cka-02-worker kubelet[2727]: W0806 20:38:16.276235    2727 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.276402    2727 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: E0806 20:38:16.276445    2727 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.280299    2727 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.280351    2727 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.280367    2727 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.280378    2727 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.280402    2727 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.283225    2727 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.283263    2727 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.283286    2727 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.283298    2727 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.284141    2727 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: E0806 20:38:16.285965    2727 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: E0806 20:38:16.286107    2727 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.286341    2727 server.go:1181] "Started kubelet"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.287408    2727 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.287977    2727 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.288323    2727 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.289699    2727 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: I0806 20:38:16.289858    2727 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: E0806 20:38:16.291384    2727 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:16 cka-02-worker kubelet[2727]: E0806 20:38:16.292627    2727 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:16 cka-02-worker kubelet[2727]: E0806 20:38:16.292758    2727 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:16 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:16 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:17 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 110.
Aug 06 20:38:17 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:17 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:17 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.508789    2749 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.517638    2749 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.517736    2749 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.517996    2749 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.519272    2749 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:17 cka-02-worker kubelet[2749]: W0806 20:38:17.519876    2749 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.520027    2749 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: E0806 20:38:17.520125    2749 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.539731    2749 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.539785    2749 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.539801    2749 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.539812    2749 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.539831    2749 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.544814    2749 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.544953    2749 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.545028    2749 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.545090    2749 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.547742    2749 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: E0806 20:38:17.548041    2749 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.548254    2749 server.go:1181] "Started kubelet"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.549122    2749 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.549419    2749 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.550073    2749 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: E0806 20:38:17.551080    2749 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.558442    2749 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: E0806 20:38:17.559570    2749 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: I0806 20:38:17.559573    2749 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:17 cka-02-worker kubelet[2749]: E0806 20:38:17.561479    2749 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:17 cka-02-worker kubelet[2749]: E0806 20:38:17.561508    2749 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:17 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:17 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:18 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 111.
Aug 06 20:38:18 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:18 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:18 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.759728    2774 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.772762    2774 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.772780    2774 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.773012    2774 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.774274    2774 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:18 cka-02-worker kubelet[2774]: W0806 20:38:18.774985    2774 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.775477    2774 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: E0806 20:38:18.775575    2774 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.804066    2774 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.804130    2774 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.804148    2774 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.804165    2774 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.804187    2774 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.808547    2774 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.808568    2774 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.808585    2774 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.808596    2774 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: E0806 20:38:18.809021    2774 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.809289    2774 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: E0806 20:38:18.809442    2774 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.809577    2774 server.go:1181] "Started kubelet"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.809802    2774 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.810438    2774 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.811047    2774 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.817600    2774 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: I0806 20:38:18.817599    2774 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: E0806 20:38:18.820218    2774 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:18 cka-02-worker kubelet[2774]: E0806 20:38:18.822539    2774 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:18 cka-02-worker kubelet[2774]: E0806 20:38:18.822565    2774 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:18 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:18 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:19 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 112.
Aug 06 20:38:19 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:19 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:19 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.012223    2797 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.023834    2797 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.023856    2797 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.024138    2797 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.025386    2797 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:20 cka-02-worker kubelet[2797]: W0806 20:38:20.026362    2797 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.026599    2797 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: E0806 20:38:20.026722    2797 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.030556    2797 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.030601    2797 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.030623    2797 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.030634    2797 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.030653    2797 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.034668    2797 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.034691    2797 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.034712    2797 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.034724    2797 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: E0806 20:38:20.034972    2797 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.035175    2797 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: E0806 20:38:20.035340    2797 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.035514    2797 server.go:1181] "Started kubelet"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.035607    2797 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.036258    2797 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.037786    2797 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.052683    2797 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: I0806 20:38:20.053483    2797 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: E0806 20:38:20.057855    2797 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:20 cka-02-worker kubelet[2797]: E0806 20:38:20.063549    2797 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:20 cka-02-worker kubelet[2797]: E0806 20:38:20.063573    2797 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:20 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:20 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:21 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 113.
Aug 06 20:38:21 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:21 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:21 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.263794    2822 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.272486    2822 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.272509    2822 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.272717    2822 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.273977    2822 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:21 cka-02-worker kubelet[2822]: W0806 20:38:21.274589    2822 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.274674    2822 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: E0806 20:38:21.274763    2822 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.290630    2822 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.290683    2822 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.290699    2822 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.290711    2822 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.290732    2822 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.293409    2822 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.293432    2822 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.293448    2822 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.293481    2822 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.297035    2822 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: E0806 20:38:21.297260    2822 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: E0806 20:38:21.297407    2822 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.297438    2822 server.go:1181] "Started kubelet"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.299047    2822 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.299579    2822 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.300096    2822 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.302506    2822 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: I0806 20:38:21.302606    2822 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: E0806 20:38:21.304864    2822 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:21 cka-02-worker kubelet[2822]: E0806 20:38:21.306400    2822 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:21 cka-02-worker kubelet[2822]: E0806 20:38:21.306422    2822 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:21 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:21 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:22 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 114.
Aug 06 20:38:22 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:22 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:22 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.517187    2847 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.531670    2847 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.531693    2847 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.532372    2847 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.534310    2847 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.534870    2847 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: W0806 20:38:22.534887    2847 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:22 cka-02-worker kubelet[2847]: E0806 20:38:22.534927    2847 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.538950    2847 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.538998    2847 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.539014    2847 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.539026    2847 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.539044    2847 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.542533    2847 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.542561    2847 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.542583    2847 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.542594    2847 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: E0806 20:38:22.545108    2847 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.545445    2847 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: E0806 20:38:22.545632    2847 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.545777    2847 server.go:1181] "Started kubelet"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.546422    2847 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.547081    2847 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.546480    2847 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.547863    2847 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: I0806 20:38:22.547991    2847 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: E0806 20:38:22.552708    2847 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:22 cka-02-worker kubelet[2847]: E0806 20:38:22.554745    2847 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:22 cka-02-worker kubelet[2847]: E0806 20:38:22.554764    2847 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:22 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:22 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:23 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 115.
Aug 06 20:38:23 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:23 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:23 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.756231    2868 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.769462    2868 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.769510    2868 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.769812    2868 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.771361    2868 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.772194    2868 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: W0806 20:38:23.772198    2868 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:23 cka-02-worker kubelet[2868]: E0806 20:38:23.772242    2868 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.776392    2868 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.776441    2868 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.776461    2868 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.776473    2868 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.776493    2868 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.778630    2868 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.778651    2868 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.778667    2868 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.778682    2868 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.780045    2868 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: E0806 20:38:23.784501    2868 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.784720    2868 server.go:1181] "Started kubelet"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.787027    2868 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.787766    2868 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.788273    2868 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.794324    2868 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: E0806 20:38:23.801991    2868 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: I0806 20:38:23.803209    2868 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: E0806 20:38:23.809500    2868 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: E0806 20:38:23.810377    2868 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:23 cka-02-worker kubelet[2868]: E0806 20:38:23.814647    2868 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:23 cka-02-worker kubelet[2868]: E0806 20:38:23.814675    2868 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:23 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:23 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:24 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 116.
Aug 06 20:38:24 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:24 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:24 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.013439    2894 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.027858    2894 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.027879    2894 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.028102    2894 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.029292    2894 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.029873    2894 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: W0806 20:38:25.029912    2894 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:25 cka-02-worker kubelet[2894]: E0806 20:38:25.029943    2894 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.047512    2894 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.047559    2894 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.047575    2894 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.047586    2894 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.047609    2894 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.049713    2894 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.049736    2894 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.049757    2894 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.049773    2894 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.050487    2894 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: E0806 20:38:25.050665    2894 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: E0806 20:38:25.050756    2894 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.051311    2894 server.go:1181] "Started kubelet"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.052011    2894 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.052575    2894 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.055568    2894 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.069749    2894 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: I0806 20:38:25.071508    2894 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: E0806 20:38:25.072379    2894 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:25 cka-02-worker kubelet[2894]: E0806 20:38:25.076979    2894 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:25 cka-02-worker kubelet[2894]: E0806 20:38:25.077123    2894 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:25 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:25 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:26 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 117.
Aug 06 20:38:26 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:26 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:26 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.260348    2915 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.273773    2915 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.273797    2915 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.274021    2915 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.275283    2915 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:26 cka-02-worker kubelet[2915]: W0806 20:38:26.275866    2915 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.275906    2915 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: E0806 20:38:26.275949    2915 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.292537    2915 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.292679    2915 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.292781    2915 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.292845    2915 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.292926    2915 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.296589    2915 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.296726    2915 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.296798    2915 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.296860    2915 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: E0806 20:38:26.297648    2915 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.298193    2915 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: E0806 20:38:26.298360    2915 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.298778    2915 server.go:1181] "Started kubelet"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.301350    2915 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.305601    2915 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.306414    2915 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.308204    2915 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: E0806 20:38:26.308336    2915 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: I0806 20:38:26.308721    2915 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:26 cka-02-worker kubelet[2915]: E0806 20:38:26.309631    2915 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:26 cka-02-worker kubelet[2915]: E0806 20:38:26.309657    2915 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:26 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:26 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:27 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 118.
Aug 06 20:38:27 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:27 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:27 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.524468    2936 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.536124    2936 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.536146    2936 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.536349    2936 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.537572    2936 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:27 cka-02-worker kubelet[2936]: W0806 20:38:27.538230    2936 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.538230    2936 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: E0806 20:38:27.538290    2936 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.554920    2936 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.554971    2936 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.554986    2936 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.554998    2936 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.555017    2936 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.563436    2936 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.563458    2936 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.563489    2936 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.563500    2936 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: E0806 20:38:27.567815    2936 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.568131    2936 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: E0806 20:38:27.568313    2936 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.568453    2936 server.go:1181] "Started kubelet"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.568906    2936 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.569382    2936 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.569957    2936 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.570124    2936 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: I0806 20:38:27.570134    2936 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: E0806 20:38:27.570962    2936 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: E0806 20:38:27.584252    2936 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:38:27 cka-02-worker kubelet[2936]: E0806 20:38:27.585013    2936 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:27 cka-02-worker kubelet[2936]: E0806 20:38:27.585613    2936 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:27 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:27 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:28 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 119.
Aug 06 20:38:28 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:28 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:28 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.770288    2963 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.784872    2963 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.784919    2963 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.785080    2963 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.786216    2963 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:28 cka-02-worker kubelet[2963]: W0806 20:38:28.786726    2963 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.786966    2963 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: E0806 20:38:28.787017    2963 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.790940    2963 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.790993    2963 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.791008    2963 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.791018    2963 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.791036    2963 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.794201    2963 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.794222    2963 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.794242    2963 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.794254    2963 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: E0806 20:38:28.794380    2963 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.794655    2963 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: E0806 20:38:28.794838    2963 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.795025    2963 server.go:1181] "Started kubelet"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.795983    2963 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.796002    2963 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.796570    2963 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.797628    2963 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: I0806 20:38:28.797694    2963 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: E0806 20:38:28.800467    2963 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:28 cka-02-worker kubelet[2963]: E0806 20:38:28.801763    2963 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:28 cka-02-worker kubelet[2963]: E0806 20:38:28.801785    2963 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:28 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:28 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:29 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 120.
Aug 06 20:38:29 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:29 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:29 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.013341    2984 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.023778    2984 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.023799    2984 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.024232    2984 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.025956    2984 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:30 cka-02-worker kubelet[2984]: W0806 20:38:30.026487    2984 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.026563    2984 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: E0806 20:38:30.026608    2984 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.030405    2984 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.030459    2984 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.030476    2984 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.030487    2984 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.030506    2984 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.032614    2984 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.032718    2984 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.032786    2984 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.032850    2984 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: E0806 20:38:30.033285    2984 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.034308    2984 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: E0806 20:38:30.037057    2984 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.037208    2984 server.go:1181] "Started kubelet"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.037784    2984 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.038489    2984 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.040598    2984 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.043689    2984 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: I0806 20:38:30.043782    2984 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: E0806 20:38:30.044878    2984 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:30 cka-02-worker kubelet[2984]: E0806 20:38:30.046625    2984 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:30 cka-02-worker kubelet[2984]: E0806 20:38:30.046654    2984 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:30 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:30 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:31 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 121.
Aug 06 20:38:31 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:31 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:31 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.263583    3005 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.282745    3005 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.282766    3005 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.282994    3005 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.284242    3005 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:31 cka-02-worker kubelet[3005]: W0806 20:38:31.284834    3005 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.285014    3005 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: E0806 20:38:31.285046    3005 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.288846    3005 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.288899    3005 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.288928    3005 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.288939    3005 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.288956    3005 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.291910    3005 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.291932    3005 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.291964    3005 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.291976    3005 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: E0806 20:38:31.292237    3005 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.292628    3005 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: E0806 20:38:31.296980    3005 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.297178    3005 server.go:1181] "Started kubelet"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.297694    3005 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.298225    3005 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.298241    3005 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.308242    3005 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: I0806 20:38:31.308315    3005 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: E0806 20:38:31.309928    3005 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:31 cka-02-worker kubelet[3005]: E0806 20:38:31.311444    3005 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:31 cka-02-worker kubelet[3005]: E0806 20:38:31.311477    3005 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:31 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:31 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:32 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 122.
Aug 06 20:38:32 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:32 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:32 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.515855    3026 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.526861    3026 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.526899    3026 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.527094    3026 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.528284    3026 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.528803    3026 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: W0806 20:38:32.528820    3026 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:32 cka-02-worker kubelet[3026]: E0806 20:38:32.528843    3026 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.545480    3026 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.545539    3026 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.545557    3026 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.545569    3026 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.545588    3026 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.552132    3026 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.552268    3026 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.552344    3026 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.552409    3026 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: E0806 20:38:32.552736    3026 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.554926    3026 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: E0806 20:38:32.557932    3026 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.558483    3026 server.go:1181] "Started kubelet"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.559106    3026 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.559413    3026 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.559724    3026 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.561343    3026 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: I0806 20:38:32.561439    3026 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: E0806 20:38:32.562488    3026 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:32 cka-02-worker kubelet[3026]: E0806 20:38:32.566334    3026 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:32 cka-02-worker kubelet[3026]: E0806 20:38:32.566519    3026 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:32 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:32 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:33 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 123.
Aug 06 20:38:33 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:33 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:33 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.764791    3047 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.775922    3047 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.775963    3047 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.776192    3047 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.777555    3047 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:33 cka-02-worker kubelet[3047]: W0806 20:38:33.778175    3047 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.778316    3047 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: E0806 20:38:33.778383    3047 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.797614    3047 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.797773    3047 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.797866    3047 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.797976    3047 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.798052    3047 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.802955    3047 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.802981    3047 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.803000    3047 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.803016    3047 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: E0806 20:38:33.803429    3047 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.803619    3047 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: E0806 20:38:33.804224    3047 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.804413    3047 server.go:1181] "Started kubelet"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.805205    3047 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.806348    3047 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.807653    3047 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.808618    3047 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: I0806 20:38:33.808674    3047 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: E0806 20:38:33.814306    3047 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:33 cka-02-worker kubelet[3047]: E0806 20:38:33.815867    3047 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:33 cka-02-worker kubelet[3047]: E0806 20:38:33.815910    3047 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:33 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:33 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:34 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 124.
Aug 06 20:38:34 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:34 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:34 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.008136    3069 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.019858    3069 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.019892    3069 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.020234    3069 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.021602    3069 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:35 cka-02-worker kubelet[3069]: W0806 20:38:35.022226    3069 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.022285    3069 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: E0806 20:38:35.022333    3069 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.037749    3069 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.037802    3069 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.037853    3069 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.037866    3069 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.038391    3069 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.043921    3069 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.043947    3069 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.043965    3069 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.043979    3069 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: E0806 20:38:35.045532    3069 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.046630    3069 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: E0806 20:38:35.048720    3069 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.048897    3069 server.go:1181] "Started kubelet"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.049416    3069 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.051061    3069 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.055418    3069 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.059151    3069 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: I0806 20:38:35.059223    3069 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: E0806 20:38:35.060037    3069 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:35 cka-02-worker kubelet[3069]: E0806 20:38:35.061532    3069 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:35 cka-02-worker kubelet[3069]: E0806 20:38:35.061553    3069 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:35 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:35 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:36 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 125.
Aug 06 20:38:36 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:36 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:36 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.262287    3089 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.277645    3089 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.277667    3089 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.277932    3089 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.279184    3089 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:36 cka-02-worker kubelet[3089]: W0806 20:38:36.279734    3089 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.279748    3089 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: E0806 20:38:36.279794    3089 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.296915    3089 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.296975    3089 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.296992    3089 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.297003    3089 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.297027    3089 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.301309    3089 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.301332    3089 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.301349    3089 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.301363    3089 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: E0806 20:38:36.302392    3089 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.302444    3089 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: E0806 20:38:36.302658    3089 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.302811    3089 server.go:1181] "Started kubelet"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.303811    3089 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.308986    3089 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.309081    3089 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.310780    3089 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:36 cka-02-worker kubelet[3089]: I0806 20:38:36.311359    3089 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: E0806 20:38:36.322173    3089 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:36 cka-02-worker kubelet[3089]: E0806 20:38:36.325401    3089 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:36 cka-02-worker kubelet[3089]: E0806 20:38:36.325427    3089 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:36 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:36 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:37 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 126.
Aug 06 20:38:37 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:37 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:37 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.504812    3110 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.517801    3110 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.517913    3110 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.518138    3110 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.519405    3110 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:37 cka-02-worker kubelet[3110]: W0806 20:38:37.520082    3110 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.520095    3110 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: E0806 20:38:37.520282    3110 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.535764    3110 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.535821    3110 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.535840    3110 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.535851    3110 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.535878    3110 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.540176    3110 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.540200    3110 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.540235    3110 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.540249    3110 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: E0806 20:38:37.541434    3110 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.541479    3110 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: E0806 20:38:37.551041    3110 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.551216    3110 server.go:1181] "Started kubelet"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.552461    3110 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.552937    3110 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.552999    3110 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.553408    3110 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:37 cka-02-worker kubelet[3110]: I0806 20:38:37.553968    3110 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: E0806 20:38:37.558917    3110 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: E0806 20:38:37.562412    3110 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:38:37 cka-02-worker kubelet[3110]: E0806 20:38:37.562622    3110 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:37 cka-02-worker kubelet[3110]: E0806 20:38:37.562712    3110 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:37 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:37 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:38 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 127.
Aug 06 20:38:38 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:38 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:38 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.762722    3136 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.777809    3136 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.777836    3136 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.778087    3136 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.779320    3136 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:38 cka-02-worker kubelet[3136]: W0806 20:38:38.780256    3136 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.781153    3136 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: E0806 20:38:38.781198    3136 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.785547    3136 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.785605    3136 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.785626    3136 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.785638    3136 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.785656    3136 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.787693    3136 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.787712    3136 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.787733    3136 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.787762    3136 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: E0806 20:38:38.787855    3136 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.788938    3136 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: E0806 20:38:38.796082    3136 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.796355    3136 server.go:1181] "Started kubelet"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.797715    3136 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.798311    3136 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.798982    3136 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.799159    3136 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: I0806 20:38:38.801707    3136 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: E0806 20:38:38.803738    3136 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: E0806 20:38:38.808346    3136 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:38:38 cka-02-worker kubelet[3136]: E0806 20:38:38.809479    3136 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:38 cka-02-worker kubelet[3136]: E0806 20:38:38.809508    3136 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:38 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:38 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:39 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 128.
Aug 06 20:38:39 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:39 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:39 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.018986    3159 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.036005    3159 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.036036    3159 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.036338    3159 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.037555    3159 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:40 cka-02-worker kubelet[3159]: W0806 20:38:40.038140    3159 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.038340    3159 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: E0806 20:38:40.038390    3159 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.055562    3159 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.055621    3159 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.055647    3159 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.055661    3159 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.055687    3159 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.063985    3159 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.064011    3159 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.064029    3159 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.064040    3159 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: E0806 20:38:40.064160    3159 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.064686    3159 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: E0806 20:38:40.065106    3159 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.065279    3159 server.go:1181] "Started kubelet"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.066609    3159 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.066700    3159 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.067214    3159 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.069121    3159 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: I0806 20:38:40.069306    3159 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: E0806 20:38:40.070482    3159 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:40 cka-02-worker kubelet[3159]: E0806 20:38:40.072156    3159 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:40 cka-02-worker kubelet[3159]: E0806 20:38:40.072284    3159 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:40 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:40 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:41 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 129.
Aug 06 20:38:41 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:41 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:41 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.267301    3182 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.274334    3182 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.274429    3182 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.274625    3182 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.275783    3182 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:41 cka-02-worker kubelet[3182]: W0806 20:38:41.276370    3182 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.276374    3182 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: E0806 20:38:41.276438    3182 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.280717    3182 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.280769    3182 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.280784    3182 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.280796    3182 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.280814    3182 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.283114    3182 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.283137    3182 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.283153    3182 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.283167    3182 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.283532    3182 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: E0806 20:38:41.287811    3182 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: E0806 20:38:41.287811    3182 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.288028    3182 server.go:1181] "Started kubelet"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.288759    3182 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.289685    3182 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.289719    3182 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.300209    3182 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: I0806 20:38:41.300300    3182 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: E0806 20:38:41.302402    3182 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:41 cka-02-worker kubelet[3182]: E0806 20:38:41.304447    3182 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:41 cka-02-worker kubelet[3182]: E0806 20:38:41.304474    3182 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:41 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:41 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:42 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 130.
Aug 06 20:38:42 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:42 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:42 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.515485    3203 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.529317    3203 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.529338    3203 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.529537    3203 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.530779    3203 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:42 cka-02-worker kubelet[3203]: W0806 20:38:42.531340    3203 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.531408    3203 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: E0806 20:38:42.531449    3203 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.535212    3203 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.535261    3203 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.535277    3203 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.535288    3203 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.535312    3203 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.538568    3203 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.538589    3203 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.538611    3203 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.538622    3203 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.539049    3203 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: E0806 20:38:42.541917    3203 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: E0806 20:38:42.541916    3203 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.542088    3203 server.go:1181] "Started kubelet"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.542188    3203 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.542928    3203 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.544226    3203 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.545496    3203 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: I0806 20:38:42.545579    3203 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: E0806 20:38:42.549066    3203 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:42 cka-02-worker kubelet[3203]: E0806 20:38:42.552953    3203 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:42 cka-02-worker kubelet[3203]: E0806 20:38:42.552982    3203 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:42 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:42 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:43 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 131.
Aug 06 20:38:43 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:43 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:43 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.762254    3223 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.779692    3223 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.779715    3223 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.779925    3223 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.781178    3223 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:43 cka-02-worker kubelet[3223]: W0806 20:38:43.781763    3223 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.781834    3223 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: E0806 20:38:43.781868    3223 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.798981    3223 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.799026    3223 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.799043    3223 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.799054    3223 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.799070    3223 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.803722    3223 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.803895    3223 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.803918    3223 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.803929    3223 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: E0806 20:38:43.805399    3223 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.809193    3223 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: E0806 20:38:43.809594    3223 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.810440    3223 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.810498    3223 server.go:1181] "Started kubelet"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.811624    3223 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.814429    3223 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.817693    3223 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: I0806 20:38:43.817768    3223 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: E0806 20:38:43.818608    3223 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:43 cka-02-worker kubelet[3223]: E0806 20:38:43.821618    3223 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:43 cka-02-worker kubelet[3223]: E0806 20:38:43.821656    3223 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:43 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:43 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:44 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 132.
Aug 06 20:38:44 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:44 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:44 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.017503    3245 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.031777    3245 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.031801    3245 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.032037    3245 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.033304    3245 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.033983    3245 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: W0806 20:38:45.033993    3245 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:45 cka-02-worker kubelet[3245]: E0806 20:38:45.034019    3245 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.049824    3245 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.050026    3245 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.050125    3245 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.050192    3245 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.050324    3245 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.068644    3245 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.068809    3245 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.068900    3245 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.069032    3245 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: E0806 20:38:45.069005    3245 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.069707    3245 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: E0806 20:38:45.072932    3245 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.073167    3245 server.go:1181] "Started kubelet"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.073914    3245 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.074495    3245 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.075620    3245 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.075807    3245 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: I0806 20:38:45.075928    3245 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: E0806 20:38:45.077474    3245 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:45 cka-02-worker kubelet[3245]: E0806 20:38:45.078397    3245 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:45 cka-02-worker kubelet[3245]: E0806 20:38:45.078419    3245 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:45 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:45 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:46 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 133.
Aug 06 20:38:46 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:46 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:46 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.257328    3265 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.269618    3265 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.269718    3265 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.270073    3265 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.271336    3265 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:46 cka-02-worker kubelet[3265]: W0806 20:38:46.271901    3265 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.271937    3265 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: E0806 20:38:46.271991    3265 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.288669    3265 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.288785    3265 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.288812    3265 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.288824    3265 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.288858    3265 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.297777    3265 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.297802    3265 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.297819    3265 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.297831    3265 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: E0806 20:38:46.298142    3265 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.298707    3265 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: E0806 20:38:46.298880    3265 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.299046    3265 server.go:1181] "Started kubelet"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.299623    3265 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.301759    3265 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.302535    3265 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.303435    3265 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: I0806 20:38:46.303505    3265 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: E0806 20:38:46.309328    3265 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:46 cka-02-worker kubelet[3265]: E0806 20:38:46.310258    3265 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:46 cka-02-worker kubelet[3265]: E0806 20:38:46.310289    3265 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:46 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:46 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:47 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 134.
Aug 06 20:38:47 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:47 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:47 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.543703    3286 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.555853    3286 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.555877    3286 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.556144    3286 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.557495    3286 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.558106    3286 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: E0806 20:38:47.558209    3286 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: W0806 20:38:47.558131    3286 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.573730    3286 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.573789    3286 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.573807    3286 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.573819    3286 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.573838    3286 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.576896    3286 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.577052    3286 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.577134    3286 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.577216    3286 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: E0806 20:38:47.582752    3286 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.583347    3286 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: E0806 20:38:47.583749    3286 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.584054    3286 server.go:1181] "Started kubelet"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.585506    3286 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.587614    3286 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.587821    3286 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.588418    3286 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: I0806 20:38:47.588479    3286 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: E0806 20:38:47.591381    3286 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:47 cka-02-worker kubelet[3286]: E0806 20:38:47.592821    3286 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:47 cka-02-worker kubelet[3286]: E0806 20:38:47.592840    3286 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:47 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:47 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:48 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 135.
Aug 06 20:38:48 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:48 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:48 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.759121    3307 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.770837    3307 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.770863    3307 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.771185    3307 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.772435    3307 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:48 cka-02-worker kubelet[3307]: W0806 20:38:48.773120    3307 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.773217    3307 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: E0806 20:38:48.773263    3307 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.788743    3307 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.788796    3307 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.788821    3307 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.788833    3307 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.788856    3307 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.795648    3307 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.795677    3307 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.795696    3307 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.795707    3307 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: E0806 20:38:48.796073    3307 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.797335    3307 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: E0806 20:38:48.797510    3307 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.797677    3307 server.go:1181] "Started kubelet"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.799537    3307 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.799782    3307 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.800392    3307 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.805547    3307 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: I0806 20:38:48.805641    3307 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: E0806 20:38:48.806414    3307 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:48 cka-02-worker kubelet[3307]: E0806 20:38:48.807939    3307 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:48 cka-02-worker kubelet[3307]: E0806 20:38:48.807966    3307 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:48 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:48 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:49 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 136.
Aug 06 20:38:49 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:49 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:49 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.024496    3329 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.038712    3329 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.038742    3329 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.039065    3329 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.042056    3329 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.042548    3329 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: W0806 20:38:50.042564    3329 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:50 cka-02-worker kubelet[3329]: E0806 20:38:50.042601    3329 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.046382    3329 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.046432    3329 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.046450    3329 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.046461    3329 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.046482    3329 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.048741    3329 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.048764    3329 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.048796    3329 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.048808    3329 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: E0806 20:38:50.052205    3329 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.055423    3329 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: E0806 20:38:50.055690    3329 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.055867    3329 server.go:1181] "Started kubelet"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.057168    3329 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.058406    3329 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.058857    3329 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.060563    3329 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: I0806 20:38:50.060619    3329 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: E0806 20:38:50.072430    3329 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:50 cka-02-worker kubelet[3329]: E0806 20:38:50.075056    3329 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:50 cka-02-worker kubelet[3329]: E0806 20:38:50.075081    3329 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:50 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:50 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:51 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 137.
Aug 06 20:38:51 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:51 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:51 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.262507    3352 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.277541    3352 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.277562    3352 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.277725    3352 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.278962    3352 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.279546    3352 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: W0806 20:38:51.279554    3352 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:51 cka-02-worker kubelet[3352]: E0806 20:38:51.279603    3352 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.283506    3352 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.283551    3352 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.283569    3352 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.283580    3352 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.283614    3352 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.285698    3352 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.285716    3352 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.285732    3352 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.285744    3352 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: E0806 20:38:51.285835    3352 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.287298    3352 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: E0806 20:38:51.289973    3352 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.290317    3352 server.go:1181] "Started kubelet"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.290770    3352 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.291481    3352 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.295283    3352 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.295981    3352 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: E0806 20:38:51.296997    3352 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: I0806 20:38:51.299018    3352 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:51 cka-02-worker kubelet[3352]: E0806 20:38:51.300334    3352 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:51 cka-02-worker kubelet[3352]: E0806 20:38:51.300462    3352 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:51 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:51 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:52 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 138.
Aug 06 20:38:52 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:52 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:52 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.513993    3376 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.528772    3376 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.528878    3376 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.529194    3376 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.530450    3376 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:52 cka-02-worker kubelet[3376]: W0806 20:38:52.531047    3376 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.531154    3376 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: E0806 20:38:52.531195    3376 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.557363    3376 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.557437    3376 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.557461    3376 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.557474    3376 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.557498    3376 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.560853    3376 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.560877    3376 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.560924    3376 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.560937    3376 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.565621    3376 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: E0806 20:38:52.565952    3376 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.566197    3376 server.go:1181] "Started kubelet"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.567694    3376 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.568676    3376 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:52 cka-02-worker kubelet[3376]: I0806 20:38:52.569475    3376 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: E0806 20:38:52.570493    3376 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: E0806 20:38:52.571207    3376 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:52 cka-02-worker kubelet[3376]: E0806 20:38:52.572351    3376 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:52 cka-02-worker kubelet[3376]: E0806 20:38:52.572490    3376 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:52 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:52 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:53 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 139.
Aug 06 20:38:53 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:53 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:53 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.805498    3397 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.817654    3397 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.817678    3397 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.817941    3397 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.819251    3397 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:53 cka-02-worker kubelet[3397]: W0806 20:38:53.819981    3397 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.820033    3397 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: E0806 20:38:53.820188    3397 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.836264    3397 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.836324    3397 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.836352    3397 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.836365    3397 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.836398    3397 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.845269    3397 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.845442    3397 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.845826    3397 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.845919    3397 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: E0806 20:38:53.846546    3397 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.848773    3397 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: E0806 20:38:53.849134    3397 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.849402    3397 server.go:1181] "Started kubelet"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.851307    3397 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.852352    3397 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.852556    3397 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.852832    3397 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:53 cka-02-worker kubelet[3397]: E0806 20:38:53.857842    3397 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: I0806 20:38:53.870099    3397 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:53 cka-02-worker kubelet[3397]: E0806 20:38:53.874523    3397 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:53 cka-02-worker kubelet[3397]: E0806 20:38:53.874558    3397 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:53 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:53 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:54 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 140.
Aug 06 20:38:54 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:54 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:54 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.012222    3420 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.026857    3420 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.027109    3420 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.027493    3420 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.028875    3420 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:55 cka-02-worker kubelet[3420]: W0806 20:38:55.029647    3420 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.029763    3420 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: E0806 20:38:55.029912    3420 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.051314    3420 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.051405    3420 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.051421    3420 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.051433    3420 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.051458    3420 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.061689    3420 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.063373    3420 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.063549    3420 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.066175    3420 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: E0806 20:38:55.066001    3420 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.077688    3420 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: E0806 20:38:55.078072    3420 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.078420    3420 server.go:1181] "Started kubelet"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.079811    3420 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.084814    3420 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.085961    3420 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.097747    3420 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:55 cka-02-worker kubelet[3420]: I0806 20:38:55.098399    3420 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: E0806 20:38:55.101066    3420 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:55 cka-02-worker kubelet[3420]: E0806 20:38:55.102941    3420 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:55 cka-02-worker kubelet[3420]: E0806 20:38:55.102976    3420 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:55 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:55 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:56 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 141.
Aug 06 20:38:56 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:56 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:56 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.292304    3443 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.309076    3443 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.309097    3443 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.309318    3443 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.310777    3443 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:56 cka-02-worker kubelet[3443]: W0806 20:38:56.311332    3443 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.311604    3443 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: E0806 20:38:56.311650    3443 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.326556    3443 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.326727    3443 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.326758    3443 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.326771    3443 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.326911    3443 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.334417    3443 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.334697    3443 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.334781    3443 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.334870    3443 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: E0806 20:38:56.339388    3443 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.340027    3443 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: E0806 20:38:56.340271    3443 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.340465    3443 server.go:1181] "Started kubelet"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.342181    3443 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.343301    3443 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.346483    3443 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.348307    3443 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: I0806 20:38:56.349558    3443 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: E0806 20:38:56.350040    3443 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:56 cka-02-worker kubelet[3443]: E0806 20:38:56.351295    3443 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:56 cka-02-worker kubelet[3443]: E0806 20:38:56.351319    3443 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:56 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:56 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:57 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 142.
Aug 06 20:38:57 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:57 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:57 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.516946    3464 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.534170    3464 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.534290    3464 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.534570    3464 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.541571    3464 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:57 cka-02-worker kubelet[3464]: W0806 20:38:57.542221    3464 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.542442    3464 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: E0806 20:38:57.542564    3464 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.549209    3464 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.549262    3464 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.549286    3464 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.549298    3464 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.549318    3464 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.559149    3464 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.559176    3464 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.559194    3464 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.559206    3464 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: E0806 20:38:57.559473    3464 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.559803    3464 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: E0806 20:38:57.560017    3464 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.560159    3464 server.go:1181] "Started kubelet"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.561023    3464 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.561952    3464 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.565497    3464 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.574291    3464 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: I0806 20:38:57.574623    3464 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: E0806 20:38:57.576504    3464 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:57 cka-02-worker kubelet[3464]: E0806 20:38:57.578634    3464 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:57 cka-02-worker kubelet[3464]: E0806 20:38:57.578803    3464 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:57 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:57 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:58 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 143.
Aug 06 20:38:58 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:58 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:58 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.779892    3486 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.803262    3486 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.803287    3486 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.803535    3486 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.805485    3486 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:38:58 cka-02-worker kubelet[3486]: W0806 20:38:58.806177    3486 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.806793    3486 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: E0806 20:38:58.809168    3486 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.812346    3486 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.812414    3486 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.812433    3486 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.812444    3486 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.812469    3486 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.816508    3486 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.816533    3486 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.816551    3486 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.816562    3486 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.818105    3486 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: E0806 20:38:58.833364    3486 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.833596    3486 server.go:1181] "Started kubelet"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: E0806 20:38:58.836021    3486 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.837525    3486 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.838171    3486 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.843856    3486 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.848636    3486 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: I0806 20:38:58.853595    3486 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: E0806 20:38:58.854623    3486 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:38:58 cka-02-worker kubelet[3486]: E0806 20:38:58.856937    3486 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:38:58 cka-02-worker kubelet[3486]: E0806 20:38:58.856977    3486 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:38:58 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:38:58 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:38:59 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 144.
Aug 06 20:38:59 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:38:59 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:38:59 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.013128    3509 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.026923    3509 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.026945    3509 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.027131    3509 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.028281    3509 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.028827    3509 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: W0806 20:39:00.028836    3509 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:00 cka-02-worker kubelet[3509]: E0806 20:39:00.028878    3509 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.033202    3509 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.033259    3509 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.033278    3509 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.033290    3509 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.033314    3509 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.036096    3509 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.036115    3509 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.036132    3509 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.036143    3509 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.037395    3509 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: E0806 20:39:00.040936    3509 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: E0806 20:39:00.040985    3509 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.041568    3509 server.go:1181] "Started kubelet"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.042858    3509 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.045951    3509 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.046025    3509 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.046516    3509 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:00 cka-02-worker kubelet[3509]: I0806 20:39:00.047069    3509 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: E0806 20:39:00.049754    3509 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: E0806 20:39:00.054827    3509 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:39:00 cka-02-worker kubelet[3509]: E0806 20:39:00.058210    3509 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:00 cka-02-worker kubelet[3509]: E0806 20:39:00.058237    3509 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:00 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:00 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:01 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 145.
Aug 06 20:39:01 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:01 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:01 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.268558    3533 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.281862    3533 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.281925    3533 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.282124    3533 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.283353    3533 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:01 cka-02-worker kubelet[3533]: W0806 20:39:01.283910    3533 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.284133    3533 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: E0806 20:39:01.284175    3533 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.288063    3533 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.288105    3533 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.288124    3533 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.288134    3533 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.288153    3533 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.291195    3533 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.291216    3533 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.291232    3533 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.291243    3533 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: E0806 20:39:01.291351    3533 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.291622    3533 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: E0806 20:39:01.291782    3533 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.291954    3533 server.go:1181] "Started kubelet"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.293016    3533 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.293430    3533 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.294069    3533 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.295010    3533 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: I0806 20:39:01.295076    3533 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: E0806 20:39:01.299451    3533 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:01 cka-02-worker kubelet[3533]: E0806 20:39:01.300513    3533 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:01 cka-02-worker kubelet[3533]: E0806 20:39:01.300535    3533 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:01 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:01 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:02 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 146.
Aug 06 20:39:02 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:02 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:02 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.510492    3555 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.527824    3555 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.527849    3555 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.528070    3555 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.529267    3555 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:02 cka-02-worker kubelet[3555]: W0806 20:39:02.529827    3555 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.529853    3555 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: E0806 20:39:02.529900    3555 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.547610    3555 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.547672    3555 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.547688    3555 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.547702    3555 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.547722    3555 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.552941    3555 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.552963    3555 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.552979    3555 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.552990    3555 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: E0806 20:39:02.553395    3555 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.553692    3555 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: E0806 20:39:02.553844    3555 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.553987    3555 server.go:1181] "Started kubelet"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.554104    3555 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.554732    3555 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.554763    3555 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.556001    3555 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: I0806 20:39:02.556063    3555 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: E0806 20:39:02.557546    3555 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:02 cka-02-worker kubelet[3555]: E0806 20:39:02.558389    3555 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:02 cka-02-worker kubelet[3555]: E0806 20:39:02.558411    3555 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:02 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:02 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:03 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 147.
Aug 06 20:39:03 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:03 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:03 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.766915    3575 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.779755    3575 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.779788    3575 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.780026    3575 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.781271    3575 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:03 cka-02-worker kubelet[3575]: W0806 20:39:03.781826    3575 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.782203    3575 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: E0806 20:39:03.782236    3575 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.798636    3575 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.798685    3575 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.798702    3575 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.798714    3575 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.798732    3575 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.805409    3575 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.805431    3575 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.805459    3575 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.805471    3575 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: E0806 20:39:03.805715    3575 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.806194    3575 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: E0806 20:39:03.806905    3575 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.807068    3575 server.go:1181] "Started kubelet"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.808225    3575 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.808345    3575 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.808909    3575 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.818302    3575 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: I0806 20:39:03.818960    3575 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: E0806 20:39:03.821786    3575 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:03 cka-02-worker kubelet[3575]: E0806 20:39:03.826994    3575 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:03 cka-02-worker kubelet[3575]: E0806 20:39:03.827028    3575 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:03 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:03 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:04 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 148.
Aug 06 20:39:04 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:04 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:04 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.018685    3599 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.030761    3599 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.030865    3599 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.031213    3599 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.032816    3599 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:05 cka-02-worker kubelet[3599]: W0806 20:39:05.033712    3599 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.035007    3599 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: E0806 20:39:05.035356    3599 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.041817    3599 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.041875    3599 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.041903    3599 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.041916    3599 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.041935    3599 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.044839    3599 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.044862    3599 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.044889    3599 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.044909    3599 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.045718    3599 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: E0806 20:39:05.046937    3599 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: E0806 20:39:05.046995    3599 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.047103    3599 server.go:1181] "Started kubelet"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.048124    3599 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.048563    3599 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.048753    3599 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.055864    3599 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: I0806 20:39:05.056104    3599 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: E0806 20:39:05.066909    3599 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:05 cka-02-worker kubelet[3599]: E0806 20:39:05.068402    3599 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:05 cka-02-worker kubelet[3599]: E0806 20:39:05.068429    3599 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:05 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:05 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:06 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 149.
Aug 06 20:39:06 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:06 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:06 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.261838    3625 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.275997    3625 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.276016    3625 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.276263    3625 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.277597    3625 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:06 cka-02-worker kubelet[3625]: W0806 20:39:06.278315    3625 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.278353    3625 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: E0806 20:39:06.278399    3625 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.293946    3625 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.293999    3625 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.294026    3625 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.294037    3625 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.294061    3625 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.302318    3625 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.302343    3625 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.302363    3625 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.302383    3625 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: E0806 20:39:06.304467    3625 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.304611    3625 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: E0806 20:39:06.306652    3625 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.306861    3625 server.go:1181] "Started kubelet"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.307768    3625 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.308615    3625 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.309102    3625 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.309983    3625 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: I0806 20:39:06.310078    3625 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: E0806 20:39:06.311664    3625 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:06 cka-02-worker kubelet[3625]: E0806 20:39:06.314096    3625 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:06 cka-02-worker kubelet[3625]: E0806 20:39:06.314120    3625 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:06 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:06 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:07 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 150.
Aug 06 20:39:07 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:07 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:07 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.516291    3650 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.527878    3650 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.528007    3650 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.528195    3650 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.529364    3650 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:07 cka-02-worker kubelet[3650]: W0806 20:39:07.529924    3650 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.529997    3650 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: E0806 20:39:07.530024    3650 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.546963    3650 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.547033    3650 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.547063    3650 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.547076    3650 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.547104    3650 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.553199    3650 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.553224    3650 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.553241    3650 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.553252    3650 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: E0806 20:39:07.553591    3650 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.554473    3650 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: E0806 20:39:07.554700    3650 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.555801    3650 server.go:1181] "Started kubelet"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.557523    3650 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.559992    3650 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.560502    3650 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: I0806 20:39:07.561426    3650 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: E0806 20:39:07.563024    3650 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:07 cka-02-worker kubelet[3650]: E0806 20:39:07.565571    3650 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:07 cka-02-worker kubelet[3650]: E0806 20:39:07.565595    3650 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:07 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:07 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:08 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 151.
Aug 06 20:39:08 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:08 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:08 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.770074    3671 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.782940    3671 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.783031    3671 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.783832    3671 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.785339    3671 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.785937    3671 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: W0806 20:39:08.785948    3671 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:08 cka-02-worker kubelet[3671]: E0806 20:39:08.785984    3671 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.807401    3671 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.807460    3671 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.807477    3671 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.807488    3671 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.807507    3671 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.813920    3671 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.814086    3671 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.814160    3671 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.814238    3671 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: E0806 20:39:08.814515    3671 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.815481    3671 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: E0806 20:39:08.815739    3671 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.815951    3671 server.go:1181] "Started kubelet"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.817004    3671 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.817502    3671 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.817659    3671 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.821756    3671 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: I0806 20:39:08.823172    3671 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: E0806 20:39:08.825621    3671 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:08 cka-02-worker kubelet[3671]: E0806 20:39:08.844653    3671 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:08 cka-02-worker kubelet[3671]: E0806 20:39:08.844788    3671 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:08 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:08 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:09 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 152.
Aug 06 20:39:09 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:09 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:09 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.016097    3698 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.030850    3698 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.030877    3698 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.032314    3698 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.033583    3698 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:10 cka-02-worker kubelet[3698]: W0806 20:39:10.034116    3698 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.034126    3698 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: E0806 20:39:10.034164    3698 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.037919    3698 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.037981    3698 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.037996    3698 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.038009    3698 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.038028    3698 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.042137    3698 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.042158    3698 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.042173    3698 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.042184    3698 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.042540    3698 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: E0806 20:39:10.044948    3698 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: E0806 20:39:10.045054    3698 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.045267    3698 server.go:1181] "Started kubelet"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.046534    3698 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.047636    3698 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.047855    3698 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.047921    3698 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: I0806 20:39:10.048843    3698 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: E0806 20:39:10.051964    3698 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:10 cka-02-worker kubelet[3698]: E0806 20:39:10.053866    3698 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:10 cka-02-worker kubelet[3698]: E0806 20:39:10.057184    3698 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:10 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:10 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:11 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 153.
Aug 06 20:39:11 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:11 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:11 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.261869    3718 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.274648    3718 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.274671    3718 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.275441    3718 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.277502    3718 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:11 cka-02-worker kubelet[3718]: W0806 20:39:11.278043    3718 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.278041    3718 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: E0806 20:39:11.278171    3718 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.281952    3718 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.281995    3718 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.282019    3718 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.282030    3718 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.282053    3718 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.284727    3718 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.284746    3718 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.284763    3718 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.284775    3718 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.285121    3718 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: E0806 20:39:11.288142    3718 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: E0806 20:39:11.288504    3718 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.288707    3718 server.go:1181] "Started kubelet"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.289996    3718 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.295409    3718 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.295628    3718 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: E0806 20:39:11.298192    3718 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.300459    3718 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:11 cka-02-worker kubelet[3718]: I0806 20:39:11.302546    3718 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:11 cka-02-worker kubelet[3718]: E0806 20:39:11.304421    3718 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:11 cka-02-worker kubelet[3718]: E0806 20:39:11.304448    3718 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:11 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:11 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:12 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 154.
Aug 06 20:39:12 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:12 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:12 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.518597    3740 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.535730    3740 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.535763    3740 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.536544    3740 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.537735    3740 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:12 cka-02-worker kubelet[3740]: W0806 20:39:12.538290    3740 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.538383    3740 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: E0806 20:39:12.538441    3740 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.542819    3740 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.542879    3740 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.542904    3740 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.542915    3740 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.542943    3740 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.544870    3740 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.544896    3740 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.544916    3740 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.544927    3740 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: E0806 20:39:12.545510    3740 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.545621    3740 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: E0806 20:39:12.546932    3740 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.547100    3740 server.go:1181] "Started kubelet"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.547271    3740 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.548166    3740 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.548303    3740 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.548915    3740 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: I0806 20:39:12.548971    3740 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: E0806 20:39:12.570918    3740 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:12 cka-02-worker kubelet[3740]: E0806 20:39:12.571720    3740 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:12 cka-02-worker kubelet[3740]: E0806 20:39:12.571746    3740 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:12 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:12 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:13 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 155.
Aug 06 20:39:13 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:13 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:13 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.760804    3764 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.775976    3764 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.776000    3764 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.776556    3764 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.778524    3764 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.779080    3764 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: W0806 20:39:13.779104    3764 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:13 cka-02-worker kubelet[3764]: E0806 20:39:13.779123    3764 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.795133    3764 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.795199    3764 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.795219    3764 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.795230    3764 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.795249    3764 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.797548    3764 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.797573    3764 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.797601    3764 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.797619    3764 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: E0806 20:39:13.797880    3764 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.798549    3764 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: E0806 20:39:13.798744    3764 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.798952    3764 server.go:1181] "Started kubelet"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.800446    3764 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.801312    3764 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.802249    3764 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: E0806 20:39:13.809399    3764 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.814609    3764 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: I0806 20:39:13.814701    3764 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:13 cka-02-worker kubelet[3764]: E0806 20:39:13.817666    3764 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:13 cka-02-worker kubelet[3764]: E0806 20:39:13.817798    3764 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:13 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:13 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:14 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 156.
Aug 06 20:39:14 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:14 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:14 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.015550    3787 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.026906    3787 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.026931    3787 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.027143    3787 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.028429    3787 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:15 cka-02-worker kubelet[3787]: W0806 20:39:15.029022    3787 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.029084    3787 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: E0806 20:39:15.029145    3787 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.049399    3787 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.049549    3787 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.049633    3787 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.049695    3787 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.049768    3787 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.057595    3787 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.057618    3787 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.057639    3787 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.057650    3787 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.058079    3787 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: E0806 20:39:15.058393    3787 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: E0806 20:39:15.059603    3787 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.059720    3787 server.go:1181] "Started kubelet"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.060392    3787 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.061119    3787 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.060464    3787 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.064374    3787 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: I0806 20:39:15.064455    3787 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: E0806 20:39:15.065459    3787 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:15 cka-02-worker kubelet[3787]: E0806 20:39:15.067604    3787 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:15 cka-02-worker kubelet[3787]: E0806 20:39:15.067745    3787 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:15 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:15 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:16 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 157.
Aug 06 20:39:16 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:16 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:16 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.263121    3811 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.279806    3811 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.279826    3811 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.280071    3811 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.281321    3811 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:16 cka-02-worker kubelet[3811]: W0806 20:39:16.281907    3811 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.282144    3811 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: E0806 20:39:16.282200    3811 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.286166    3811 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.286221    3811 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.286237    3811 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.286248    3811 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.286267    3811 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.288424    3811 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.288442    3811 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.288458    3811 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.288481    3811 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: E0806 20:39:16.288594    3811 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.288808    3811 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: E0806 20:39:16.294009    3811 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.294210    3811 server.go:1181] "Started kubelet"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.294750    3811 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.297423    3811 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.298349    3811 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.304194    3811 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: E0806 20:39:16.306040    3811 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: I0806 20:39:16.306374    3811 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:16 cka-02-worker kubelet[3811]: E0806 20:39:16.308317    3811 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:16 cka-02-worker kubelet[3811]: E0806 20:39:16.308343    3811 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:16 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:16 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:17 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 158.
Aug 06 20:39:17 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:17 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:17 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.515237    3833 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.527310    3833 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.527332    3833 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.527562    3833 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.528702    3833 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.529217    3833 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: E0806 20:39:17.529342    3833 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: W0806 20:39:17.529227    3833 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.548073    3833 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.548152    3833 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.548171    3833 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.548182    3833 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.548216    3833 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.550466    3833 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.550502    3833 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.550545    3833 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.550560    3833 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: E0806 20:39:17.550627    3833 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.552392    3833 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: E0806 20:39:17.552608    3833 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.552822    3833 server.go:1181] "Started kubelet"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.553084    3833 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.553802    3833 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.554556    3833 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.554619    3833 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: I0806 20:39:17.554692    3833 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: E0806 20:39:17.555819    3833 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:17 cka-02-worker kubelet[3833]: E0806 20:39:17.576745    3833 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:17 cka-02-worker kubelet[3833]: E0806 20:39:17.576779    3833 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:17 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:17 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:18 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 159.
Aug 06 20:39:18 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:18 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:18 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.767419    3854 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.784002    3854 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.784047    3854 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.784293    3854 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.785522    3854 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:18 cka-02-worker kubelet[3854]: W0806 20:39:18.786105    3854 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.786241    3854 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: E0806 20:39:18.786302    3854 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.803252    3854 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.803406    3854 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.803438    3854 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.803451    3854 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.803478    3854 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.809805    3854 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.809828    3854 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.809850    3854 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.809861    3854 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.810444    3854 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: E0806 20:39:18.810523    3854 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: E0806 20:39:18.810749    3854 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.810930    3854 server.go:1181] "Started kubelet"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.812299    3854 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.813677    3854 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.814412    3854 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.814548    3854 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: I0806 20:39:18.814559    3854 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: E0806 20:39:18.818229    3854 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:18 cka-02-worker kubelet[3854]: E0806 20:39:18.823973    3854 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:18 cka-02-worker kubelet[3854]: E0806 20:39:18.824473    3854 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:18 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:18 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:19 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 160.
Aug 06 20:39:19 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:19 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:19 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.016228    3878 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.033132    3878 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.033160    3878 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.033401    3878 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.034698    3878 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:20 cka-02-worker kubelet[3878]: W0806 20:39:20.035301    3878 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.035311    3878 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: E0806 20:39:20.035350    3878 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.039276    3878 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.039318    3878 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.039345    3878 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.039357    3878 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.039380    3878 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.042345    3878 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.042366    3878 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.042382    3878 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.042393    3878 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.042782    3878 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: E0806 20:39:20.046947    3878 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: E0806 20:39:20.047119    3878 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.047350    3878 server.go:1181] "Started kubelet"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.048229    3878 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.048417    3878 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.049009    3878 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.053644    3878 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: I0806 20:39:20.053823    3878 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: E0806 20:39:20.055982    3878 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:20 cka-02-worker kubelet[3878]: E0806 20:39:20.060474    3878 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:20 cka-02-worker kubelet[3878]: E0806 20:39:20.060498    3878 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:20 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:20 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:21 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 161.
Aug 06 20:39:21 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:21 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:21 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.262941    3902 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.278711    3902 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.278738    3902 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.278969    3902 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.280185    3902 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:21 cka-02-worker kubelet[3902]: W0806 20:39:21.280761    3902 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.280863    3902 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: E0806 20:39:21.280924    3902 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.299736    3902 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.299791    3902 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.299809    3902 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.299821    3902 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.299847    3902 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.305614    3902 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.305637    3902 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.305675    3902 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.305691    3902 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: E0806 20:39:21.306399    3902 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.308857    3902 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: E0806 20:39:21.313590    3902 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.313798    3902 server.go:1181] "Started kubelet"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.315127    3902 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.315851    3902 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.316012    3902 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.317608    3902 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:21 cka-02-worker kubelet[3902]: I0806 20:39:21.318300    3902 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: E0806 20:39:21.321193    3902 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:21 cka-02-worker kubelet[3902]: E0806 20:39:21.325932    3902 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:21 cka-02-worker kubelet[3902]: E0806 20:39:21.325960    3902 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:21 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:21 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:22 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 162.
Aug 06 20:39:22 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:22 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:22 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.524688    3927 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.537056    3927 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.537075    3927 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.537261    3927 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.538411    3927 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:22 cka-02-worker kubelet[3927]: W0806 20:39:22.538971    3927 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.539012    3927 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: E0806 20:39:22.539052    3927 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.543104    3927 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.543153    3927 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.543178    3927 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.543189    3927 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.543214    3927 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.546160    3927 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.546181    3927 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.546196    3927 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.546207    3927 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: E0806 20:39:22.546260    3927 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.546575    3927 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: E0806 20:39:22.546744    3927 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.547996    3927 server.go:1181] "Started kubelet"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.548406    3927 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.548060    3927 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.549776    3927 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.550031    3927 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: I0806 20:39:22.555619    3927 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: E0806 20:39:22.558493    3927 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:22 cka-02-worker kubelet[3927]: E0806 20:39:22.560238    3927 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:22 cka-02-worker kubelet[3927]: E0806 20:39:22.560265    3927 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:22 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:22 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:23 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 163.
Aug 06 20:39:23 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:23 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:23 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.765784    3949 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.778841    3949 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.778893    3949 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.779133    3949 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.780348    3949 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:23 cka-02-worker kubelet[3949]: W0806 20:39:23.782560    3949 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.782596    3949 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: E0806 20:39:23.782638    3949 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.786800    3949 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.786857    3949 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.786875    3949 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.786904    3949 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.786930    3949 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.789647    3949 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.789667    3949 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.789689    3949 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.789701    3949 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.790895    3949 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: E0806 20:39:23.792524    3949 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.792720    3949 server.go:1181] "Started kubelet"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.795762    3949 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.796830    3949 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.797333    3949 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.798864    3949 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:23 cka-02-worker kubelet[3949]: I0806 20:39:23.806851    3949 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: E0806 20:39:23.812290    3949 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: E0806 20:39:23.818463    3949 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:23 cka-02-worker kubelet[3949]: E0806 20:39:23.826790    3949 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:23 cka-02-worker kubelet[3949]: E0806 20:39:23.826818    3949 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:23 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:23 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:24 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 164.
Aug 06 20:39:24 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:24 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:24 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.020342    3972 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.028687    3972 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.028793    3972 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.029142    3972 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.030450    3972 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:25 cka-02-worker kubelet[3972]: W0806 20:39:25.031075    3972 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.031479    3972 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: E0806 20:39:25.031519    3972 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.051710    3972 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.051762    3972 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.051779    3972 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.051791    3972 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.051810    3972 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.055627    3972 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.055650    3972 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.055666    3972 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.055677    3972 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.056789    3972 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: E0806 20:39:25.056968    3972 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: E0806 20:39:25.057066    3972 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.062986    3972 server.go:1181] "Started kubelet"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.063221    3972 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.065286    3972 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.069055    3972 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.077334    3972 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: I0806 20:39:25.077426    3972 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: E0806 20:39:25.084903    3972 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:25 cka-02-worker kubelet[3972]: E0806 20:39:25.086878    3972 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:25 cka-02-worker kubelet[3972]: E0806 20:39:25.086932    3972 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:25 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:25 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:26 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 165.
Aug 06 20:39:26 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:26 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:26 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.264369    3997 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.280310    3997 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.280331    3997 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.280555    3997 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.282472    3997 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:26 cka-02-worker kubelet[3997]: W0806 20:39:26.283221    3997 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.283264    3997 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: E0806 20:39:26.283496    3997 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.309132    3997 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.309182    3997 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.309200    3997 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.309211    3997 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.309231    3997 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.317967    3997 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.317991    3997 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.318014    3997 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.318025    3997 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: E0806 20:39:26.318104    3997 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.318452    3997 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: E0806 20:39:26.322937    3997 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.323141    3997 server.go:1181] "Started kubelet"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.323788    3997 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.324361    3997 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.324481    3997 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.325302    3997 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: I0806 20:39:26.325379    3997 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: E0806 20:39:26.326435    3997 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:26 cka-02-worker kubelet[3997]: E0806 20:39:26.334578    3997 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:26 cka-02-worker kubelet[3997]: E0806 20:39:26.334605    3997 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:26 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:26 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:27 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 166.
Aug 06 20:39:27 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:27 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:27 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.510250    4021 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.529078    4021 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.529104    4021 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.529376    4021 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.530797    4021 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:27 cka-02-worker kubelet[4021]: W0806 20:39:27.531454    4021 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.531526    4021 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: E0806 20:39:27.531658    4021 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.550637    4021 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.550690    4021 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.550706    4021 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.550717    4021 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.550736    4021 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.556855    4021 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.556878    4021 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.556943    4021 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.556963    4021 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.557785    4021 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: E0806 20:39:27.557959    4021 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: E0806 20:39:27.558008    4021 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.558248    4021 server.go:1181] "Started kubelet"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.558360    4021 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.561663    4021 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.562272    4021 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.566635    4021 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: I0806 20:39:27.567479    4021 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: E0806 20:39:27.568731    4021 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:27 cka-02-worker kubelet[4021]: E0806 20:39:27.570536    4021 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:27 cka-02-worker kubelet[4021]: E0806 20:39:27.570668    4021 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:27 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:27 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:28 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 167.
Aug 06 20:39:28 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:28 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:28 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.767319    4045 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.779765    4045 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.779790    4045 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.780025    4045 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.781346    4045 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.781961    4045 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: W0806 20:39:28.781981    4045 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:28 cka-02-worker kubelet[4045]: E0806 20:39:28.782027    4045 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.797466    4045 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.797517    4045 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.797534    4045 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.797545    4045 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.797571    4045 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.805610    4045 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.805636    4045 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.805654    4045 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.805666    4045 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: E0806 20:39:28.806493    4045 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.806581    4045 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: E0806 20:39:28.806743    4045 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.806877    4045 server.go:1181] "Started kubelet"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.807787    4045 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.812839    4045 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.813483    4045 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.815254    4045 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: I0806 20:39:28.815999    4045 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: E0806 20:39:28.817286    4045 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:28 cka-02-worker kubelet[4045]: E0806 20:39:28.819189    4045 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:28 cka-02-worker kubelet[4045]: E0806 20:39:28.819336    4045 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:28 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:28 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:29 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 168.
Aug 06 20:39:29 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:29 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:29 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.011792    4066 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.027933    4066 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.027955    4066 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.028194    4066 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.029415    4066 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:30 cka-02-worker kubelet[4066]: W0806 20:39:30.029996    4066 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.030295    4066 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: E0806 20:39:30.030347    4066 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.034547    4066 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.034607    4066 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.034624    4066 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.034635    4066 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.034654    4066 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.036597    4066 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.036614    4066 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.036641    4066 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.036658    4066 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: E0806 20:39:30.036750    4066 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.037478    4066 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: E0806 20:39:30.041939    4066 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.042188    4066 server.go:1181] "Started kubelet"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.042327    4066 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.043005    4066 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.043916    4066 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.045806    4066 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: I0806 20:39:30.045925    4066 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: E0806 20:39:30.053175    4066 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:30 cka-02-worker kubelet[4066]: E0806 20:39:30.054941    4066 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:30 cka-02-worker kubelet[4066]: E0806 20:39:30.054967    4066 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:30 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:30 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:31 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 169.
Aug 06 20:39:31 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:31 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:31 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.271281    4088 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.283945    4088 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.283973    4088 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.284199    4088 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.285530    4088 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:31 cka-02-worker kubelet[4088]: W0806 20:39:31.286155    4088 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.286156    4088 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: E0806 20:39:31.286355    4088 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.302808    4088 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.302857    4088 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.302879    4088 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.302908    4088 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.302931    4088 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.309349    4088 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.309373    4088 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.309389    4088 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.309400    4088 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: E0806 20:39:31.310992    4088 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.311837    4088 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: E0806 20:39:31.312028    4088 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.312183    4088 server.go:1181] "Started kubelet"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.313163    4088 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.313957    4088 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.314733    4088 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.322839    4088 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: I0806 20:39:31.322923    4088 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: E0806 20:39:31.324005    4088 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:31 cka-02-worker kubelet[4088]: E0806 20:39:31.325380    4088 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:31 cka-02-worker kubelet[4088]: E0806 20:39:31.325405    4088 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:31 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:31 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:32 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 170.
Aug 06 20:39:32 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:32 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:32 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.522007    4109 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.535234    4109 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.535255    4109 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.535440    4109 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.536550    4109 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.537130    4109 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: W0806 20:39:32.537134    4109 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:32 cka-02-worker kubelet[4109]: E0806 20:39:32.537167    4109 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.541029    4109 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.541076    4109 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.541095    4109 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.541106    4109 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.541124    4109 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.543761    4109 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.543780    4109 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.543795    4109 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.543806    4109 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: E0806 20:39:32.544118    4109 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.544774    4109 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: E0806 20:39:32.548977    4109 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.549135    4109 server.go:1181] "Started kubelet"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.549637    4109 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.550339    4109 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.550457    4109 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.551735    4109 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: I0806 20:39:32.551888    4109 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: E0806 20:39:32.553577    4109 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:32 cka-02-worker kubelet[4109]: E0806 20:39:32.556116    4109 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:32 cka-02-worker kubelet[4109]: E0806 20:39:32.556255    4109 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:32 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:32 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:33 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 171.
Aug 06 20:39:33 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:33 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:33 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.764336    4129 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.777832    4129 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.777857    4129 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.778066    4129 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.779272    4129 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.779825    4129 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: W0806 20:39:33.779852    4129 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:33 cka-02-worker kubelet[4129]: E0806 20:39:33.779879    4129 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.783976    4129 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.784024    4129 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.784050    4129 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.784061    4129 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.784084    4129 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.787573    4129 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.787595    4129 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.787625    4129 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.787645    4129 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.794127    4129 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: E0806 20:39:33.794417    4129 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: E0806 20:39:33.794168    4129 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.794698    4129 server.go:1181] "Started kubelet"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.794869    4129 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.795830    4129 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.797169    4129 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.798434    4129 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: I0806 20:39:33.798511    4129 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: E0806 20:39:33.804009    4129 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:33 cka-02-worker kubelet[4129]: E0806 20:39:33.807480    4129 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:33 cka-02-worker kubelet[4129]: E0806 20:39:33.807839    4129 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:33 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:33 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:34 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 172.
Aug 06 20:39:34 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:34 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:34 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.076126    4154 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.092248    4154 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.092383    4154 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.092671    4154 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.094549    4154 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:35 cka-02-worker kubelet[4154]: W0806 20:39:35.095377    4154 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.095773    4154 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: E0806 20:39:35.095880    4154 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.102338    4154 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.102631    4154 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.102675    4154 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.102701    4154 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.102738    4154 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.106040    4154 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.106061    4154 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.106077    4154 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.106091    4154 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: E0806 20:39:35.106850    4154 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.107971    4154 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: E0806 20:39:35.108152    4154 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.108286    4154 server.go:1181] "Started kubelet"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.109437    4154 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.113996    4154 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:35 cka-02-worker kubelet[4154]: E0806 20:39:35.117390    4154 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.114512    4154 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: I0806 20:39:35.114524    4154 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:35 cka-02-worker kubelet[4154]: E0806 20:39:35.125370    4154 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:35 cka-02-worker kubelet[4154]: E0806 20:39:35.125507    4154 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:35 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:35 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:36 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 173.
Aug 06 20:39:36 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:36 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:36 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.266746    4176 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.279701    4176 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.279722    4176 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.279977    4176 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.281272    4176 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:36 cka-02-worker kubelet[4176]: W0806 20:39:36.281909    4176 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.281966    4176 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: E0806 20:39:36.282037    4176 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.298713    4176 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.298778    4176 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.298801    4176 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.298817    4176 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.298839    4176 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.302924    4176 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.302943    4176 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.302958    4176 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.302969    4176 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.303665    4176 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: E0806 20:39:36.303824    4176 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: E0806 20:39:36.303855    4176 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.304034    4176 server.go:1181] "Started kubelet"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.305189    4176 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.305378    4176 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.305453    4176 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.305831    4176 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:36 cka-02-worker kubelet[4176]: I0806 20:39:36.306422    4176 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: E0806 20:39:36.308545    4176 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:36 cka-02-worker kubelet[4176]: E0806 20:39:36.319222    4176 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:36 cka-02-worker kubelet[4176]: E0806 20:39:36.332247    4176 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:36 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:36 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:37 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 174.
Aug 06 20:39:37 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:37 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:37 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.510245    4201 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.521960    4201 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.521985    4201 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.522247    4201 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.523495    4201 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:37 cka-02-worker kubelet[4201]: W0806 20:39:37.524092    4201 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.524132    4201 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: E0806 20:39:37.524268    4201 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.540338    4201 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.540394    4201 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.540413    4201 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.540424    4201 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.540444    4201 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.546782    4201 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.546804    4201 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.546823    4201 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.546845    4201 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.547927    4201 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: E0806 20:39:37.548079    4201 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: E0806 20:39:37.548092    4201 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.548432    4201 server.go:1181] "Started kubelet"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.548617    4201 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.552474    4201 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.554309    4201 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.556786    4201 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: I0806 20:39:37.556980    4201 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: E0806 20:39:37.563491    4201 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:37 cka-02-worker kubelet[4201]: E0806 20:39:37.565351    4201 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:37 cka-02-worker kubelet[4201]: E0806 20:39:37.565374    4201 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:37 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:37 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:38 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 175.
Aug 06 20:39:38 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:38 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:38 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.758351    4222 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.775511    4222 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.775535    4222 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.775727    4222 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.777042    4222 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:38 cka-02-worker kubelet[4222]: W0806 20:39:38.777690    4222 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.777694    4222 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: E0806 20:39:38.777763    4222 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.783517    4222 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.783574    4222 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.783594    4222 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.783606    4222 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.783626    4222 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.785565    4222 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.785584    4222 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.785601    4222 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.785612    4222 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.786078    4222 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: E0806 20:39:38.788922    4222 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: E0806 20:39:38.788923    4222 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.789087    4222 server.go:1181] "Started kubelet"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.790023    4222 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.801480    4222 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.803301    4222 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.805021    4222 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: I0806 20:39:38.809961    4222 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: E0806 20:39:38.805370    4222 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:38 cka-02-worker kubelet[4222]: E0806 20:39:38.817017    4222 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:38 cka-02-worker kubelet[4222]: E0806 20:39:38.817049    4222 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:38 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:38 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:39 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 176.
Aug 06 20:39:39 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:39 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:39 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.003007    4247 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.014944    4247 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.014963    4247 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.015267    4247 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.016624    4247 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:40 cka-02-worker kubelet[4247]: W0806 20:39:40.017223    4247 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.017276    4247 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: E0806 20:39:40.017330    4247 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.033308    4247 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.033386    4247 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.033411    4247 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.033444    4247 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.033472    4247 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.042247    4247 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.042272    4247 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.042290    4247 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.042302    4247 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: E0806 20:39:40.043699    4247 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.044143    4247 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: E0806 20:39:40.044313    4247 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.044476    4247 server.go:1181] "Started kubelet"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.045402    4247 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.045821    4247 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.045981    4247 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.053196    4247 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: I0806 20:39:40.053273    4247 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: E0806 20:39:40.054073    4247 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:40 cka-02-worker kubelet[4247]: E0806 20:39:40.055695    4247 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:40 cka-02-worker kubelet[4247]: E0806 20:39:40.055827    4247 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:40 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:40 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:41 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 177.
Aug 06 20:39:41 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:41 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:41 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.266005    4269 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.281081    4269 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.281349    4269 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.281952    4269 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.283772    4269 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.284327    4269 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: E0806 20:39:41.284379    4269 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: W0806 20:39:41.284338    4269 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.299920    4269 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.299964    4269 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.300004    4269 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.300018    4269 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.300036    4269 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.302124    4269 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.302148    4269 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.302182    4269 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.302194    4269 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: E0806 20:39:41.302377    4269 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.303062    4269 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: E0806 20:39:41.303294    4269 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.303456    4269 server.go:1181] "Started kubelet"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.304210    4269 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.304535    4269 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.305162    4269 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.311722    4269 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: I0806 20:39:41.319912    4269 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: E0806 20:39:41.322612    4269 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:41 cka-02-worker kubelet[4269]: E0806 20:39:41.325723    4269 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:41 cka-02-worker kubelet[4269]: E0806 20:39:41.325750    4269 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:41 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:41 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:42 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 178.
Aug 06 20:39:42 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:42 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:42 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.511525    4291 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.524598    4291 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.524621    4291 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.524823    4291 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.526110    4291 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:42 cka-02-worker kubelet[4291]: W0806 20:39:42.526727    4291 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.526925    4291 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: E0806 20:39:42.526978    4291 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.546830    4291 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.546885    4291 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.546905    4291 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.546917    4291 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.546937    4291 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.551546    4291 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.552396    4291 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.552428    4291 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.552441    4291 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: E0806 20:39:42.552729    4291 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.553101    4291 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: E0806 20:39:42.553332    4291 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.553469    4291 server.go:1181] "Started kubelet"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.554266    4291 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.555347    4291 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.555565    4291 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.559199    4291 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: I0806 20:39:42.560635    4291 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: E0806 20:39:42.565690    4291 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:42 cka-02-worker kubelet[4291]: E0806 20:39:42.567880    4291 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:42 cka-02-worker kubelet[4291]: E0806 20:39:42.567918    4291 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:42 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:42 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:43 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 179.
Aug 06 20:39:43 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:43 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:43 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.761745    4315 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.776725    4315 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.776744    4315 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.776976    4315 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.778205    4315 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.778782    4315 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: E0806 20:39:43.778846    4315 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: W0806 20:39:43.778784    4315 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.782875    4315 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.782929    4315 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.782952    4315 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.782964    4315 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.782983    4315 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.786695    4315 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.786715    4315 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.786732    4315 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.786743    4315 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.787170    4315 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: E0806 20:39:43.789919    4315 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: E0806 20:39:43.789924    4315 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.790139    4315 server.go:1181] "Started kubelet"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.790250    4315 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.790961    4315 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.791465    4315 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.796872    4315 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: I0806 20:39:43.797112    4315 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: E0806 20:39:43.800860    4315 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: E0806 20:39:43.806394    4315 nodelease.go:49] "Failed to get node when trying to set owner ref to the node lease" err="nodes \"cka-02-worker\" not found" node="cka-02-worker"
Aug 06 20:39:43 cka-02-worker kubelet[4315]: E0806 20:39:43.806704    4315 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:43 cka-02-worker kubelet[4315]: E0806 20:39:43.806732    4315 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:43 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:43 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:44 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 180.
Aug 06 20:39:44 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:44 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:44 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.047459    4336 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.067755    4336 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.067866    4336 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.068156    4336 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.069429    4336 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:45 cka-02-worker kubelet[4336]: W0806 20:39:45.070023    4336 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.070342    4336 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: E0806 20:39:45.070387    4336 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.074375    4336 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.074420    4336 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.074447    4336 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.074458    4336 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.074484    4336 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.077793    4336 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.077813    4336 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.077833    4336 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.077844    4336 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.078330    4336 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: E0806 20:39:45.082640    4336 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.082798    4336 server.go:1181] "Started kubelet"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.083958    4336 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.084647    4336 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.085910    4336 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.086569    4336 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: I0806 20:39:45.086642    4336 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: E0806 20:39:45.088934    4336 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: E0806 20:39:45.089335    4336 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:45 cka-02-worker kubelet[4336]: E0806 20:39:45.092756    4336 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:45 cka-02-worker kubelet[4336]: E0806 20:39:45.092878    4336 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:45 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:45 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:46 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 181.
Aug 06 20:39:46 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:46 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:46 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.255551    4357 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.268662    4357 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.268759    4357 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.269023    4357 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.270265    4357 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:46 cka-02-worker kubelet[4357]: W0806 20:39:46.271159    4357 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.272160    4357 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: E0806 20:39:46.272217    4357 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.275740    4357 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.275786    4357 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.275816    4357 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.275829    4357 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.275848    4357 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.278038    4357 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.278056    4357 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.278075    4357 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.278087    4357 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: E0806 20:39:46.278356    4357 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.278563    4357 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: E0806 20:39:46.281918    4357 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.282119    4357 server.go:1181] "Started kubelet"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.282164    4357 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.285453    4357 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.291465    4357 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.292051    4357 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: I0806 20:39:46.293437    4357 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: E0806 20:39:46.296797    4357 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:46 cka-02-worker kubelet[4357]: E0806 20:39:46.299622    4357 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:46 cka-02-worker kubelet[4357]: E0806 20:39:46.299755    4357 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:46 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:46 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:47 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 182.
Aug 06 20:39:47 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:47 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:47 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.514409    4381 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.531243    4381 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.531283    4381 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.531477    4381 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.532594    4381 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:47 cka-02-worker kubelet[4381]: W0806 20:39:47.533148    4381 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.533150    4381 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: E0806 20:39:47.533196    4381 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.537021    4381 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.537064    4381 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.537086    4381 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.537097    4381 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.537120    4381 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.539324    4381 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.539344    4381 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.539360    4381 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.539371    4381 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: E0806 20:39:47.539807    4381 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.540277    4381 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: E0806 20:39:47.540507    4381 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.540697    4381 server.go:1181] "Started kubelet"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.542427    4381 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.543413    4381 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.543571    4381 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.544279    4381 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: I0806 20:39:47.545300    4381 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: E0806 20:39:47.546045    4381 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:47 cka-02-worker kubelet[4381]: E0806 20:39:47.549997    4381 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:47 cka-02-worker kubelet[4381]: E0806 20:39:47.550022    4381 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:47 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:47 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:48 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 183.
Aug 06 20:39:48 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:48 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:48 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.761952    4403 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.773957    4403 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.773981    4403 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.774235    4403 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.775517    4403 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.776080    4403 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: E0806 20:39:48.776130    4403 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: W0806 20:39:48.776088    4403 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.792788    4403 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.792842    4403 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.792864    4403 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.792875    4403 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.792921    4403 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.801354    4403 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.801500    4403 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.801606    4403 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.801623    4403 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: E0806 20:39:48.801780    4403 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.802410    4403 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: E0806 20:39:48.802581    4403 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.802805    4403 server.go:1181] "Started kubelet"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.803426    4403 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.803773    4403 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.803978    4403 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.805381    4403 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: I0806 20:39:48.805439    4403 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: E0806 20:39:48.809322    4403 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:48 cka-02-worker kubelet[4403]: E0806 20:39:48.811518    4403 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:48 cka-02-worker kubelet[4403]: E0806 20:39:48.811548    4403 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:48 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:48 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:49 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 184.
Aug 06 20:39:49 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:49 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:49 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.014102    4424 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.031191    4424 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.031211    4424 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.031409    4424 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.032675    4424 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:50 cka-02-worker kubelet[4424]: W0806 20:39:50.033253    4424 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.033374    4424 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: E0806 20:39:50.033414    4424 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.052964    4424 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.053035    4424 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.053058    4424 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.053075    4424 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.053095    4424 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.058134    4424 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.058158    4424 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.058185    4424 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.058212    4424 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: E0806 20:39:50.058292    4424 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.058716    4424 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: E0806 20:39:50.059096    4424 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.059244    4424 server.go:1181] "Started kubelet"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.059578    4424 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.060224    4424 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.061927    4424 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.066836    4424 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: I0806 20:39:50.067076    4424 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: E0806 20:39:50.069298    4424 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:50 cka-02-worker kubelet[4424]: E0806 20:39:50.073238    4424 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:50 cka-02-worker kubelet[4424]: E0806 20:39:50.073271    4424 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:50 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:50 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:51 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 185.
Aug 06 20:39:51 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:51 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:51 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.260669    4444 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.274818    4444 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.274842    4444 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.275065    4444 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.276758    4444 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:51 cka-02-worker kubelet[4444]: W0806 20:39:51.277489    4444 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.277670    4444 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: E0806 20:39:51.277717    4444 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.298124    4444 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.298636    4444 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.298729    4444 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.298798    4444 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.298873    4444 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.301364    4444 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.301488    4444 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.301570    4444 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.301648    4444 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: E0806 20:39:51.302912    4444 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.305218    4444 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: E0806 20:39:51.305474    4444 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.305642    4444 server.go:1181] "Started kubelet"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.307811    4444 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.307822    4444 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.311385    4444 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: E0806 20:39:51.312198    4444 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.313070    4444 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: I0806 20:39:51.313622    4444 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:51 cka-02-worker kubelet[4444]: E0806 20:39:51.318462    4444 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:51 cka-02-worker kubelet[4444]: E0806 20:39:51.318493    4444 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:51 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:51 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:52 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 186.
Aug 06 20:39:52 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:52 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:52 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.515469    4469 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.530879    4469 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.530914    4469 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.531180    4469 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.532549    4469 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.533184    4469 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: W0806 20:39:52.533193    4469 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:52 cka-02-worker kubelet[4469]: E0806 20:39:52.533228    4469 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.549135    4469 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.549189    4469 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.549215    4469 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.549226    4469 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.549252    4469 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.552155    4469 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.552426    4469 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.552480    4469 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.552502    4469 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: E0806 20:39:52.552650    4469 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.553508    4469 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: E0806 20:39:52.554001    4469 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.554159    4469 server.go:1181] "Started kubelet"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.554494    4469 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.555139    4469 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.555190    4469 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.563030    4469 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: I0806 20:39:52.563095    4469 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: E0806 20:39:52.564537    4469 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:52 cka-02-worker kubelet[4469]: E0806 20:39:52.569641    4469 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:52 cka-02-worker kubelet[4469]: E0806 20:39:52.569777    4469 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:52 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:52 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:53 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 187.
Aug 06 20:39:53 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:53 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:53 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.765837    4492 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.781790    4492 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.781900    4492 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.782134    4492 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.783378    4492 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.783930    4492 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: W0806 20:39:53.783949    4492 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:53 cka-02-worker kubelet[4492]: E0806 20:39:53.783986    4492 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.799861    4492 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.799921    4492 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.799943    4492 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.799954    4492 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.799975    4492 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.805005    4492 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.805027    4492 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.805044    4492 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.805056    4492 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: E0806 20:39:53.805867    4492 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.806813    4492 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: E0806 20:39:53.814164    4492 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.814322    4492 server.go:1181] "Started kubelet"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.815169    4492 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.816798    4492 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.820158    4492 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.820320    4492 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: I0806 20:39:53.821461    4492 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: E0806 20:39:53.821992    4492 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:53 cka-02-worker kubelet[4492]: E0806 20:39:53.827601    4492 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:53 cka-02-worker kubelet[4492]: E0806 20:39:53.827629    4492 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:53 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:53 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:54 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 188.
Aug 06 20:39:54 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:54 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:54 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.015126    4515 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.028595    4515 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.028618    4515 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.029271    4515 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.031148    4515 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:55 cka-02-worker kubelet[4515]: W0806 20:39:55.031957    4515 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.032105    4515 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: E0806 20:39:55.032146    4515 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.036500    4515 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.036547    4515 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.036570    4515 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.036581    4515 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.036604    4515 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.038614    4515 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.038635    4515 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.038652    4515 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.038663    4515 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: E0806 20:39:55.038765    4515 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.039557    4515 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: E0806 20:39:55.043936    4515 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.044095    4515 server.go:1181] "Started kubelet"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.044694    4515 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.047992    4515 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.048276    4515 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.050550    4515 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: E0806 20:39:55.051372    4515 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: I0806 20:39:55.055228    4515 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:55 cka-02-worker kubelet[4515]: E0806 20:39:55.056219    4515 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:55 cka-02-worker kubelet[4515]: E0806 20:39:55.056245    4515 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:55 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:55 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:56 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 189.
Aug 06 20:39:56 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:56 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:56 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.262667    4536 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.283699    4536 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.283723    4536 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.283955    4536 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.285319    4536 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:56 cka-02-worker kubelet[4536]: W0806 20:39:56.285999    4536 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.286098    4536 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: E0806 20:39:56.286160    4536 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.302824    4536 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.302905    4536 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.302931    4536 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.302943    4536 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.302963    4536 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.307612    4536 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.307629    4536 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.307647    4536 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.307659    4536 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: E0806 20:39:56.308110    4536 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.312702    4536 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: E0806 20:39:56.312926    4536 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.313074    4536 server.go:1181] "Started kubelet"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.314193    4536 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.314544    4536 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.314781    4536 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.319068    4536 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: E0806 20:39:56.319594    4536 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: I0806 20:39:56.320068    4536 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:56 cka-02-worker kubelet[4536]: E0806 20:39:56.320566    4536 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:56 cka-02-worker kubelet[4536]: E0806 20:39:56.320588    4536 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:56 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:56 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:57 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 190.
Aug 06 20:39:57 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:57 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:57 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.512742    4559 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.523693    4559 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.523717    4559 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.523996    4559 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.526480    4559 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.527032    4559 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: W0806 20:39:57.527070    4559 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:57 cka-02-worker kubelet[4559]: E0806 20:39:57.527090    4559 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.530924    4559 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.530970    4559 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.530988    4559 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.531000    4559 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.531025    4559 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.533115    4559 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.533133    4559 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.533150    4559 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.533165    4559 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: E0806 20:39:57.533359    4559 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.533831    4559 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: E0806 20:39:57.536957    4559 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.537151    4559 server.go:1181] "Started kubelet"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.537542    4559 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.540093    4559 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.540976    4559 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.541109    4559 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: E0806 20:39:57.543909    4559 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: I0806 20:39:57.550285    4559 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:57 cka-02-worker kubelet[4559]: E0806 20:39:57.551879    4559 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:57 cka-02-worker kubelet[4559]: E0806 20:39:57.551925    4559 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:57 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:57 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:58 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 191.
Aug 06 20:39:58 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:58 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:58 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.763055    4582 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.775410    4582 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.775432    4582 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.775608    4582 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.776777    4582 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:39:58 cka-02-worker kubelet[4582]: W0806 20:39:58.777320    4582 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.777323    4582 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: E0806 20:39:58.777360    4582 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.781236    4582 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.781285    4582 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.781300    4582 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.781311    4582 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.781330    4582 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.784183    4582 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.784202    4582 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.784238    4582 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.784250    4582 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: E0806 20:39:58.784457    4582 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.784606    4582 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: E0806 20:39:58.788942    4582 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.789189    4582 server.go:1181] "Started kubelet"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.789364    4582 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.789916    4582 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.789951    4582 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.800022    4582 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: I0806 20:39:58.800111    4582 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: E0806 20:39:58.801078    4582 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:39:58 cka-02-worker kubelet[4582]: E0806 20:39:58.802537    4582 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:39:58 cka-02-worker kubelet[4582]: E0806 20:39:58.802563    4582 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:39:58 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:39:58 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:39:59 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 192.
Aug 06 20:39:59 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:39:59 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:39:59 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.014946    4602 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.027826    4602 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.027845    4602 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.028050    4602 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.029316    4602 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:00 cka-02-worker kubelet[4602]: W0806 20:40:00.029917    4602 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.030183    4602 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: E0806 20:40:00.030237    4602 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.046168    4602 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.046221    4602 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.046242    4602 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.046253    4602 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.046272    4602 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.050846    4602 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.050869    4602 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.050908    4602 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.050924    4602 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: E0806 20:40:00.051350    4602 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.053392    4602 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: E0806 20:40:00.053616    4602 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.053773    4602 server.go:1181] "Started kubelet"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.055047    4602 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.055634    4602 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.057303    4602 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.058903    4602 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: I0806 20:40:00.058974    4602 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: E0806 20:40:00.062641    4602 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:00 cka-02-worker kubelet[4602]: E0806 20:40:00.065924    4602 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:00 cka-02-worker kubelet[4602]: E0806 20:40:00.065963    4602 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:00 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:00 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:01 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 193.
Aug 06 20:40:01 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:01 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:01 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.267730    4624 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.280923    4624 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.280943    4624 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.281221    4624 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.282568    4624 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:01 cka-02-worker kubelet[4624]: W0806 20:40:01.283133    4624 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.283351    4624 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: E0806 20:40:01.283726    4624 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.301177    4624 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.301228    4624 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.301245    4624 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.301257    4624 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.301276    4624 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.303369    4624 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.303393    4624 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.303410    4624 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.303425    4624 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.304466    4624 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: E0806 20:40:01.304696    4624 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.304916    4624 server.go:1181] "Started kubelet"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: E0806 20:40:01.305008    4624 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.305880    4624 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.306725    4624 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.312780    4624 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.313062    4624 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: E0806 20:40:01.316801    4624 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: I0806 20:40:01.326351    4624 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:01 cka-02-worker kubelet[4624]: E0806 20:40:01.329493    4624 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:01 cka-02-worker kubelet[4624]: E0806 20:40:01.329520    4624 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:01 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:01 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:02 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 194.
Aug 06 20:40:02 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:02 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:02 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.513433    4651 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.529238    4651 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.529259    4651 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.531303    4651 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.532501    4651 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:02 cka-02-worker kubelet[4651]: W0806 20:40:02.533025    4651 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.533248    4651 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: E0806 20:40:02.533298    4651 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.537236    4651 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.537293    4651 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.537312    4651 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.537324    4651 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.537347    4651 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.539722    4651 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.539743    4651 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.539760    4651 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.539777    4651 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.541433    4651 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: E0806 20:40:02.543943    4651 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.544240    4651 server.go:1181] "Started kubelet"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: E0806 20:40:02.543993    4651 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.545211    4651 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.552871    4651 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.559458    4651 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.559678    4651 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: E0806 20:40:02.561550    4651 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: I0806 20:40:02.565486    4651 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:02 cka-02-worker kubelet[4651]: E0806 20:40:02.566818    4651 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:02 cka-02-worker kubelet[4651]: E0806 20:40:02.566856    4651 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:02 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:02 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:03 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 195.
Aug 06 20:40:03 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:03 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:03 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.760537    4676 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.778933    4676 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.778957    4676 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.779193    4676 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.780395    4676 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:03 cka-02-worker kubelet[4676]: W0806 20:40:03.780931    4676 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.781068    4676 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: E0806 20:40:03.781115    4676 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.800894    4676 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.802185    4676 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.802768    4676 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.802787    4676 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.802820    4676 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.808444    4676 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.808466    4676 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.808484    4676 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.808496    4676 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: E0806 20:40:03.808578    4676 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.809703    4676 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: E0806 20:40:03.809982    4676 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.810133    4676 server.go:1181] "Started kubelet"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.810961    4676 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.811009    4676 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.811521    4676 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.813773    4676 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: I0806 20:40:03.813837    4676 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: E0806 20:40:03.815572    4676 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:03 cka-02-worker kubelet[4676]: E0806 20:40:03.818722    4676 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:03 cka-02-worker kubelet[4676]: E0806 20:40:03.818746    4676 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:03 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:03 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:04 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 196.
Aug 06 20:40:04 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:04 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:04 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.032853    4700 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.058940    4700 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.059098    4700 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.059431    4700 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.061258    4700 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:05 cka-02-worker kubelet[4700]: W0806 20:40:05.062088    4700 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.062850    4700 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: E0806 20:40:05.063038    4700 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.078675    4700 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.078821    4700 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.078908    4700 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.078972    4700 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.079042    4700 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.088023    4700 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.088143    4700 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.088218    4700 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: E0806 20:40:05.088755    4700 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.088935    4700 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.090410    4700 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: E0806 20:40:05.090724    4700 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.090980    4700 server.go:1181] "Started kubelet"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.092223    4700 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.098096    4700 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.098991    4700 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.102492    4700 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: I0806 20:40:05.102751    4700 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: E0806 20:40:05.104568    4700 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:05 cka-02-worker kubelet[4700]: E0806 20:40:05.109779    4700 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:05 cka-02-worker kubelet[4700]: E0806 20:40:05.109824    4700 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:05 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:05 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:06 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 197.
Aug 06 20:40:06 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:06 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:06 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.268810    4721 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.278673    4721 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.278775    4721 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.279013    4721 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.280250    4721 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:06 cka-02-worker kubelet[4721]: W0806 20:40:06.280820    4721 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.280897    4721 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: E0806 20:40:06.281003    4721 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.306807    4721 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.306862    4721 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.306878    4721 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.306897    4721 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.306917    4721 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.309373    4721 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.309394    4721 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.309409    4721 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: E0806 20:40:06.309565    4721 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.309587    4721 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.310374    4721 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: E0806 20:40:06.310563    4721 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.310706    4721 server.go:1181] "Started kubelet"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.311203    4721 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.311951    4721 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.312399    4721 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.312724    4721 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: I0806 20:40:06.312791    4721 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: E0806 20:40:06.323181    4721 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:06 cka-02-worker kubelet[4721]: E0806 20:40:06.324659    4721 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:06 cka-02-worker kubelet[4721]: E0806 20:40:06.324688    4721 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:06 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:06 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:07 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 198.
Aug 06 20:40:07 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:07 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:07 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.515228    4744 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.529738    4744 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.529762    4744 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.529976    4744 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.531255    4744 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:07 cka-02-worker kubelet[4744]: W0806 20:40:07.531809    4744 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.531914    4744 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: E0806 20:40:07.532034    4744 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.554160    4744 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.554226    4744 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.554243    4744 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.554256    4744 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.554289    4744 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.560589    4744 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.560610    4744 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.560644    4744 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.560655    4744 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: E0806 20:40:07.560769    4744 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.561059    4744 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: E0806 20:40:07.561252    4744 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.561391    4744 server.go:1181] "Started kubelet"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.562505    4744 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.562875    4744 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.563510    4744 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.563563    4744 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: I0806 20:40:07.563720    4744 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: E0806 20:40:07.564620    4744 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:07 cka-02-worker kubelet[4744]: E0806 20:40:07.565538    4744 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:07 cka-02-worker kubelet[4744]: E0806 20:40:07.565560    4744 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:07 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:07 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:08 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 199.
Aug 06 20:40:08 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:08 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:08 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.762310    4765 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.778810    4765 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.778834    4765 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.779514    4765 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.781323    4765 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:08 cka-02-worker kubelet[4765]: W0806 20:40:08.782399    4765 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.783182    4765 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: E0806 20:40:08.783223    4765 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.800819    4765 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.800877    4765 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.800902    4765 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.800915    4765 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.800934    4765 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.805080    4765 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.805107    4765 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.805133    4765 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.805147    4765 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.806583    4765 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: E0806 20:40:08.806753    4765 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.806927    4765 server.go:1181] "Started kubelet"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.807439    4765 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:08 cka-02-worker kubelet[4765]: E0806 20:40:08.808234    4765 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.809215    4765 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.810932    4765 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.811371    4765 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: I0806 20:40:08.813707    4765 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: E0806 20:40:08.816702    4765 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:08 cka-02-worker kubelet[4765]: E0806 20:40:08.822124    4765 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:08 cka-02-worker kubelet[4765]: E0806 20:40:08.822154    4765 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:08 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:08 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:09 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 200.
Aug 06 20:40:09 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:09 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:09 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.025915    4790 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.041268    4790 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.041291    4790 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.041576    4790 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.042873    4790 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.043443    4790 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: W0806 20:40:10.043456    4790 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:10 cka-02-worker kubelet[4790]: E0806 20:40:10.043657    4790 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.061691    4790 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.061863    4790 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.062041    4790 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.062109    4790 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.062184    4790 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.068357    4790 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.068381    4790 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.068399    4790 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.068410    4790 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: E0806 20:40:10.068630    4790 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.069071    4790 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: E0806 20:40:10.069593    4790 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.069741    4790 server.go:1181] "Started kubelet"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.070796    4790 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.073051    4790 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.073136    4790 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: E0806 20:40:10.074703    4790 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:10 cka-02-worker kubelet[4790]: I0806 20:40:10.077433    4790 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:10 cka-02-worker kubelet[4790]: E0806 20:40:10.079419    4790 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:10 cka-02-worker kubelet[4790]: E0806 20:40:10.079560    4790 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:10 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:10 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:11 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 201.
Aug 06 20:40:11 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:11 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:11 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.265794    4812 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.286910    4812 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.286931    4812 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.287109    4812 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.288300    4812 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.288866    4812 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: E0806 20:40:11.288989    4812 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: W0806 20:40:11.288875    4812 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.293583    4812 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.293635    4812 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.293653    4812 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.293664    4812 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.293683    4812 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.295703    4812 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.295722    4812 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.295749    4812 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.295761    4812 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: E0806 20:40:11.295846    4812 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.296656    4812 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: E0806 20:40:11.299965    4812 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.300135    4812 server.go:1181] "Started kubelet"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.301236    4812 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.301777    4812 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.302019    4812 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.307399    4812 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: I0806 20:40:11.307914    4812 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: E0806 20:40:11.311676    4812 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:11 cka-02-worker kubelet[4812]: E0806 20:40:11.315384    4812 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:11 cka-02-worker kubelet[4812]: E0806 20:40:11.315410    4812 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:11 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:11 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:12 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 202.
Aug 06 20:40:12 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:12 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:12 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.515438    4835 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.530176    4835 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.530201    4835 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.530486    4835 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.533105    4835 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.533900    4835 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: E0806 20:40:12.533946    4835 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: W0806 20:40:12.534056    4835 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.538206    4835 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.538265    4835 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.538283    4835 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.538294    4835 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.538313    4835 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.541157    4835 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.541178    4835 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.541198    4835 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.541210    4835 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.542187    4835 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: E0806 20:40:12.542932    4835 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.543192    4835 server.go:1181] "Started kubelet"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: E0806 20:40:12.543277    4835 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.543975    4835 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.545065    4835 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.553063    4835 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.555364    4835 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: I0806 20:40:12.555556    4835 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: E0806 20:40:12.555370    4835 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:12 cka-02-worker kubelet[4835]: E0806 20:40:12.556753    4835 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:12 cka-02-worker kubelet[4835]: E0806 20:40:12.556888    4835 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:12 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:12 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:13 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 203.
Aug 06 20:40:13 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:13 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:13 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.761028    4857 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.772918    4857 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.773022    4857 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.773280    4857 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.774486    4857 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.775037    4857 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: E0806 20:40:13.775151    4857 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: W0806 20:40:13.775065    4857 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.792029    4857 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.792076    4857 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.792093    4857 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.792104    4857 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.792120    4857 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.794394    4857 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.794542    4857 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.794611    4857 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.794673    4857 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: E0806 20:40:13.794979    4857 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.795393    4857 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: E0806 20:40:13.795738    4857 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.796171    4857 server.go:1181] "Started kubelet"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.796661    4857 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.797364    4857 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.807575    4857 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.809931    4857 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: I0806 20:40:13.810095    4857 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: E0806 20:40:13.811717    4857 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:13 cka-02-worker kubelet[4857]: E0806 20:40:13.813523    4857 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:13 cka-02-worker kubelet[4857]: E0806 20:40:13.813652    4857 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:13 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:13 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:14 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 204.
Aug 06 20:40:14 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:14 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:14 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.018775    4878 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.029778    4878 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.029798    4878 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.030078    4878 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.031414    4878 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.031956    4878 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: W0806 20:40:15.031961    4878 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:15 cka-02-worker kubelet[4878]: E0806 20:40:15.032206    4878 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.036817    4878 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.036874    4878 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.036903    4878 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.036925    4878 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.036944    4878 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.038968    4878 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.038989    4878 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.039030    4878 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.039042    4878 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: E0806 20:40:15.039198    4878 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.039939    4878 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: E0806 20:40:15.042931    4878 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.043130    4878 server.go:1181] "Started kubelet"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.044534    4878 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.045088    4878 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.051140    4878 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.051393    4878 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: E0806 20:40:15.052510    4878 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: I0806 20:40:15.052510    4878 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:15 cka-02-worker kubelet[4878]: E0806 20:40:15.054632    4878 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:15 cka-02-worker kubelet[4878]: E0806 20:40:15.054746    4878 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:15 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:15 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:16 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 205.
Aug 06 20:40:16 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:16 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:16 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.263917    4899 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.276929    4899 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.277032    4899 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.277215    4899 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.278378    4899 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:16 cka-02-worker kubelet[4899]: W0806 20:40:16.278971    4899 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.278977    4899 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: E0806 20:40:16.279186    4899 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.282958    4899 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.283003    4899 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.283026    4899 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.283037    4899 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.283071    4899 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.285773    4899 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.285794    4899 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.285819    4899 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.285830    4899 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: E0806 20:40:16.285953    4899 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.286238    4899 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: E0806 20:40:16.286458    4899 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.286598    4899 server.go:1181] "Started kubelet"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.286913    4899 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.287503    4899 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.288809    4899 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.288952    4899 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: I0806 20:40:16.292099    4899 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: E0806 20:40:16.292750    4899 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:16 cka-02-worker kubelet[4899]: E0806 20:40:16.293472    4899 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:16 cka-02-worker kubelet[4899]: E0806 20:40:16.293498    4899 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:16 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:16 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:17 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 206.
Aug 06 20:40:17 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:17 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:17 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.511520    4919 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.525831    4919 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.525857    4919 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.526114    4919 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.527359    4919 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:17 cka-02-worker kubelet[4919]: W0806 20:40:17.527932    4919 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.527967    4919 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: E0806 20:40:17.528017    4919 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.545904    4919 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.545968    4919 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.545985    4919 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.545997    4919 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.546024    4919 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.556318    4919 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.556508    4919 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.556589    4919 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.556661    4919 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: E0806 20:40:17.557147    4919 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.557285    4919 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: E0806 20:40:17.557447    4919 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.557596    4919 server.go:1181] "Started kubelet"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.558201    4919 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.558811    4919 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.558875    4919 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.558955    4919 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: I0806 20:40:17.559028    4919 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: E0806 20:40:17.560044    4919 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:17 cka-02-worker kubelet[4919]: E0806 20:40:17.560848    4919 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:17 cka-02-worker kubelet[4919]: E0806 20:40:17.560870    4919 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:17 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:17 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:18 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 207.
Aug 06 20:40:18 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:18 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:18 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.762295    4940 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.776001    4940 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.776022    4940 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.776296    4940 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.777572    4940 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:18 cka-02-worker kubelet[4940]: W0806 20:40:18.778533    4940 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.778643    4940 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: E0806 20:40:18.778711    4940 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.783112    4940 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.783161    4940 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.783178    4940 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.783189    4940 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.783207    4940 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.785714    4940 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.785736    4940 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.785754    4940 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.785765    4940 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.786116    4940 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: E0806 20:40:18.788929    4940 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: E0806 20:40:18.788954    4940 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.789086    4940 server.go:1181] "Started kubelet"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.789156    4940 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.789826    4940 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.792190    4940 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.801511    4940 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: I0806 20:40:18.804953    4940 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: E0806 20:40:18.805520    4940 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:18 cka-02-worker kubelet[4940]: E0806 20:40:18.812285    4940 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:18 cka-02-worker kubelet[4940]: E0806 20:40:18.812431    4940 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:18 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:18 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:19 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 208.
Aug 06 20:40:19 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:19 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:19 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.005714    4967 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.021624    4967 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.021647    4967 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.021861    4967 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.023177    4967 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.023738    4967 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: W0806 20:40:20.023742    4967 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:20 cka-02-worker kubelet[4967]: E0806 20:40:20.023793    4967 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.052004    4967 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.052067    4967 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.052083    4967 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.052098    4967 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.052118    4967 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.060308    4967 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.060333    4967 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.060351    4967 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.060363    4967 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: E0806 20:40:20.060926    4967 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.060954    4967 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: E0806 20:40:20.061338    4967 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.061576    4967 server.go:1181] "Started kubelet"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.062348    4967 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.062987    4967 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.066994    4967 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.067217    4967 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: I0806 20:40:20.067295    4967 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: E0806 20:40:20.071204    4967 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:20 cka-02-worker kubelet[4967]: E0806 20:40:20.072771    4967 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:20 cka-02-worker kubelet[4967]: E0806 20:40:20.072789    4967 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:20 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:20 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:21 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 209.
Aug 06 20:40:21 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:21 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:21 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.264004    4988 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.277644    4988 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.277667    4988 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.277866    4988 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.279175    4988 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.279771    4988 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: W0806 20:40:21.279794    4988 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:21 cka-02-worker kubelet[4988]: E0806 20:40:21.279834    4988 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.303905    4988 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.303956    4988 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.303975    4988 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.303987    4988 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.304009    4988 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.308866    4988 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.308918    4988 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.308950    4988 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.308962    4988 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: E0806 20:40:21.309076    4988 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.309749    4988 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: E0806 20:40:21.309999    4988 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.310158    4988 server.go:1181] "Started kubelet"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.311903    4988 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.312308    4988 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.312493    4988 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.313510    4988 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: I0806 20:40:21.313580    4988 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: E0806 20:40:21.317805    4988 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:21 cka-02-worker kubelet[4988]: E0806 20:40:21.319825    4988 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:21 cka-02-worker kubelet[4988]: E0806 20:40:21.319851    4988 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:21 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:21 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
Aug 06 20:40:22 cka-02-worker systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 210.
Aug 06 20:40:22 cka-02-worker systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Aug 06 20:40:22 cka-02-worker systemd[1]: Starting kubelet: The Kubernetes Node Agent...
Aug 06 20:40:22 cka-02-worker systemd[1]: Started kubelet: The Kubernetes Node Agent.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.540623    5017 server.go:193] "--pod-infra-container-image will not be pruned by the image garbage collector in kubelet and should also be set in the remote runtime"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --container-runtime has been deprecated, will be removed in 1.27 as the only valid value is 'remote'
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --pod-infra-container-image has been deprecated, will be removed in 1.27. Image garbage collector will get sandbox image information from CRI.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --provider-id has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --fail-swap-on has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: Flag --cgroup-root has been deprecated, This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.561021    5017 server.go:399] "Kubelet version" kubeletVersion="v1.24.0"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.561060    5017 server.go:401] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.561283    5017 server.go:813] "Client rotation is on, will bootstrap in background"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.562946    5017 certificate_store.go:130] Loading cert/key pair from "/var/lib/kubelet/pki/kubelet-client-current.pem".
Aug 06 20:40:22 cka-02-worker kubelet[5017]: W0806 20:40:22.563707    5017 manager.go:159] Cannot detect current cgroup on cgroup v2
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.564915    5017 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: E0806 20:40:22.565098    5017 dynamic_cafile_content.go:166] "Failed to watch CA file, will retry later" err="error creating fsnotify watcher: too many open files"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.580024    5017 container_manager_linux.go:262] "Container manager verified user specified cgroup-root exists" cgroupRoot=[kubelet]
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.580217    5017 container_manager_linux.go:267] "Creating Container Manager object based on Node Config" nodeConfig={RuntimeCgroupsName: SystemCgroupsName: KubeletCgroupsName: KubeletOOMScoreAdj:-999 ContainerRuntime: CgroupsPerQOS:true CgroupRoot:/kubelet CgroupDriver:systemd KubeletRootDir:/var/lib/kubelet ProtectKernelDefaults:false NodeAllocatableConfig:{KubeReservedCgroupName: SystemReservedCgroupName: ReservedSystemCPUs: EnforceNodeAllocatable:map[pods:{}] KubeReserved:map[] SystemReserved:map[] HardEvictionThresholds:[]} QOSReserved:map[] ExperimentalCPUManagerPolicy:none ExperimentalCPUManagerPolicyOptions:map[] ExperimentalTopologyManagerScope:container ExperimentalCPUManagerReconcilePeriod:10s ExperimentalMemoryManagerPolicy:None ExperimentalMemoryManagerReservedMemory:[] ExperimentalPodPidsLimit:-1 EnforceCPULimits:true CPUCFSQuotaPeriod:100ms ExperimentalTopologyManagerPolicy:none}
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.580304    5017 topology_manager.go:133] "Creating topology manager with policy per scope" topologyPolicyName="none" topologyScopeName="container"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.580375    5017 container_manager_linux.go:302] "Creating device plugin manager" devicePluginEnabled=true
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.580449    5017 state_mem.go:36] "Initialized new in-memory state store"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.585579    5017 kubelet.go:376] "Attempting to sync node with API server"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.585715    5017 kubelet.go:267] "Adding static pod path" path="/etc/kubernetes/manifests"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.585819    5017 kubelet.go:278] "Adding apiserver pod source"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.585895    5017 apiserver.go:42] "Waiting for node sync before watching apiserver pods"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: E0806 20:40:22.587401    5017 file_linux.go:61] "Unable to read config path" err="unable to create inotify: too many open files" path="/etc/kubernetes/manifests"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.588076    5017 kuberuntime_manager.go:239] "Container runtime initialized" containerRuntime="containerd" version="v1.6.4" apiVersion="v1"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: E0806 20:40:22.588325    5017 plugins.go:604] "Error initializing dynamic plugin prober" err="error initializing watcher: too many open files"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.588531    5017 server.go:1181] "Started kubelet"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.590434    5017 server.go:150] "Starting to listen" address="0.0.0.0" port=10250
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.595097    5017 fs_resource_analyzer.go:67] "Starting FS ResourceAnalyzer"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.596079    5017 server.go:410] "Adding debug handlers to kubelet server"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.598917    5017 volume_manager.go:289] "Starting Kubelet Volume Manager"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: I0806 20:40:22.601667    5017 desired_state_of_world_populator.go:145] "Desired state populator starts to run"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: E0806 20:40:22.615119    5017 kubelet.go:2344] "Container runtime network not ready" networkReady="NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
Aug 06 20:40:22 cka-02-worker kubelet[5017]: E0806 20:40:22.634784    5017 manager.go:279] Registration of the raw container factory failed: inotify_init: too many open files
Aug 06 20:40:22 cka-02-worker kubelet[5017]: E0806 20:40:22.634937    5017 kubelet.go:1361] "Failed to start cAdvisor" err="inotify_init: too many open files"
Aug 06 20:40:22 cka-02-worker systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Aug 06 20:40:22 cka-02-worker systemd[1]: kubelet.service: Failed with result 'exit-code'.
